% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterRDBESDataObject.R
\name{filterRDBESDataObject}
\alias{filterRDBESDataObject}
\title{Filter an RDBESDataObject}
\usage{
filterRDBESDataObject(
  RDBESDataObjectToFilter,
  fieldsToFilter,
  valuesToFilter,
  killOrphans = FALSE
)
}
\arguments{
\item{RDBESDataObjectToFilter}{The \code{RDBESDataObject} to filter}

\item{fieldsToFilter}{A vector of the field names you wish to check}

\item{valuesToFilter}{A vector of the field values you wish to filter for}

\item{killOrphans}{Controls if orphan rows are removed. Default is \code{FALSE}.}
}
\value{
the filtered input object of the same class as
\code{RDBESDataObjectToFilter}
}
\description{
The returned object will include all rows which either: a) do not included
any of the field names in \code{fieldsToFilter}, or b) do include the field names
and have one of the allowed values in \code{valuesToFilter}.
}
\details{
\code{killOrphans} allows you to remove orphaned rows if set to \code{TRUE}. The
default is \code{FALSE}.
}
\examples{
\dontrun{

myH1RawObject <-
  createRDBESDataObject(rdbesExtractPath = "tests\\\\testthat\\\\h1_v_1_19")

myFields <- c("SDctry", "VDctry", "VDflgCtry", "FTarvLoc")
myValues <- c("ZW", "ZWBZH", "ZWVFA")

myFilteredObject <- filterRDBESDataObject(myH1RawObject,
  fieldsToFilter = myFields,
  valuesToFilter = myValues
)
}
}
