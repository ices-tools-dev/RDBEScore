% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterRDBESRawObject.R
\name{filterRDBESRawObject}
\alias{filterRDBESRawObject}
\title{Filter an RDBESRawObject}
\usage{
filterRDBESRawObject(
  rdbesRawObjectToFilter,
  fieldsToFilter,
  valuesToFilter,
  killOrphans = TRUE
)
}
\arguments{
\item{rdbesRawObjectToFilter}{The RDBESRawObject to filter}

\item{fieldsToFilter}{A vector of the field names you wish to check}

\item{valuesToFilter}{A vector of the field values you wish to filter for}

\item{killOrphans}{Controls if orphan rows are removed. Default is \code{TRUE}.}
}
\value{
the filtered input object of the same \emph{class} as
\code{rdbesRawObjectToFilter}
}
\description{
The returned object will include all rows which either: a) do not included
any of the field names in fieldsToFilter, or b) do include the field names
and have one of the allowed values in valuesToFilter \code{killOrphans} allows you
to remove orphaned rows if set to \code{TRUE}. Change to \code{FALSE} to reverse this
behaviour.
}
\examples{
\dontrun{

myH1RawObject <-
  createRDBESRawObject(rdbesExtractPath = "tests\\\\testthat\\\\h1_v_1_19")

myFields <- c("SDctry", "VDctry", "VDflgCtry", "FTarvLoc")
myValues <- c("ZW", "ZWBZH", "ZWVFA")

myFilteredObject <- filterRDBESRawObject(myH1RawObject,
  fieldsToFilter = myFields,
  valuesToFilter = myValues
)
}
}
