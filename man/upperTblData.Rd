% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upperTblData.R
\name{upperTblData}
\alias{upperTblData}
\title{Get Field from Upper Table}
\usage{
upperTblData(field, values, tbls, level, verbose = FALSE)
}
\arguments{
\item{field}{A character string specifying the field to get.}

\item{values}{A vector of values to match for the specified field.}

\item{tbls}{A named list of data frames containing tables at different levels.}

\item{level}{A character string specifying the level to get data from.}

\item{verbose}{(Optional) Set to TRUE if you want informative text printed}
}
\value{
A data frame containing rows from an upper table that match the
provided values for the specified field.
}
\description{
This function gets a field from an upper table using a list of tables for any
row. It takes four arguments: \code{field}, \code{values}, \code{tbls}, and \code{level}. The
function checks if the start of the provided field matches the provided level.
If it does, the function returns the rows from the corresponding table in the
provided list of tables that have the provided values for the specified field.
Otherwise, the function finds the previous table in the list of tables and
gets the values for its \code{id} column that match the provided values for the
specified field. The function then calls itself recursively with these new
values and returns the result.
NB! running on the RDBESDataObject will work properly if it is sorted by default the tables are not
in the correct order for a spesific hierarchy.
}
\examples{
it is important to run these functions only on sorted RDBESDataObject
upperTblData("SAid", c(1), sort(H8ExampleEE1), "DE", verbose = TRUE)
DE <- data.table(DEid = c(1, 2))
SD <- data.table(SDid = c(1, 2), DEid = c(1, 2))
VS <- data.table(VSid = c(1, 2),SDid =c(1,2),  value = c(10, 20))
tbls <- list(DE = DE, SD = SD, VS = VS)
upperTblData("VSid", c(1), tbls, "DE")
}
