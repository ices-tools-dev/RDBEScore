[{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01a-data-import.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"01a Data import","text":"aim document outline basic workflow importing data downloaded ICES Regional Database & Estimation System (RDBES) list object containing data frames (data.tables) R using RDBEScore package. function createRDBESDataObject intended directly import Commercial Landing (CL), Commercial Effort (CE) Commercial Sampling (CS) tables downloaded RDBES.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01a-data-import.html","id":"load-the-package","dir":"Articles","previous_headings":"","what":"Load the package","title":"01a Data import","text":"","code":"library(RDBEScore) #the directory holding the data to import dataDir <- \"./yourDataDirectory/\"  #for demonstration purposes we will use the example data included in the package dataDir <- paste0(system.file(\"extdata\", package = \"RDBEScore\"), \"/\")"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01a-data-import.html","id":"importing-zipped-files","dir":"Articles","previous_headings":"","what":"Importing zipped files","title":"01a Data import","text":"can directly import .zip archive RDBES download containing mandatory hierarchy tables plus VD SL: easiest way get glimpse imported data hierarchy single table row counts just print . information also includes range number sampled number total table together selection method number rows. can import CL, CE, VD SL tables .zip archives, include tables NULL: can also handle overwriting zip file original files files appearing later list. However overwrite results warning!","code":"importedH1 <- createRDBESDataObject(input = paste0(dataDir,\"H1_Example.zip\")) #print the not NULL table names names(importedH1[!unlist(lapply(importedH1, is.null))]) #>  [1] \"DE\" \"SD\" \"VS\" \"FT\" \"FO\" \"SS\" \"SA\" \"FM\" \"BV\" \"VD\" \"SL\" \"IS\" #calls the print function  importedH1 #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1430 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 311 #>  SL: 6 #>  IS: 25 importedSL <- createRDBESDataObject(input = paste0(dataDir,\"HSL_Example.zip\")) #print the not NULL table names importedSL #> No hierarchy, RDBESdataObject: #>  SL: 6 #>  IS: 25 importFiles <- c(paste0(dataDir,\"HSL_Example.zip\"),                  paste0(dataDir,\"H1_Example.zip\")) importedTables <- createRDBESDataObject(input = importFiles) #> Warning in FUN(X[[i]], ...): Duplicate unzipped files detected: #>  IndividualSpeciesInSpeciesList.csv #>  #>  SpeciesList.csv #print the not NULL table names names(importedTables[!unlist(lapply(importedTables, is.null))]) #>  [1] \"DE\" \"SD\" \"VS\" \"FT\" \"FO\" \"SS\" \"SA\" \"FM\" \"BV\" \"VD\" \"SL\" \"IS\""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01a-data-import.html","id":"importing-csv-files","dir":"Articles","previous_headings":"","what":"Importing csv files","title":"01a Data import","text":"can also import unzipped .csv files default RDBES names:","code":"importedVS <- createRDBESDataObject(input = dataDir,                                     listOfFileNames = list(\"VS\" = \"VesselSelection.csv\")) #print the not NULL table names names(importedVS[!unlist(lapply(importedVS, is.null))]) #> [1] \"VS\""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01a-data-import.html","id":"importing-list-of-data-frames","dir":"Articles","previous_headings":"","what":"Importing list of data frames","title":"01a Data import","text":"can also import list object containing data frames (data.tables). However, noted type import bypasses RDBES upload data integrity checks.","code":"#list of data frames  listOfDfsH1 <- readRDS(paste0(dataDir,\"H1_Example.rds\")) #print the class of the list elements  sapply(listOfDfsH1, class) #>           DE           SD           VS           FT           FO           SS  #> \"data.frame\" \"data.frame\" \"data.frame\" \"data.frame\" \"data.frame\" \"data.frame\"  #>           SA           FM           BV           VD           SL           IS  #> \"data.frame\" \"data.frame\" \"data.frame\" \"data.frame\" \"data.frame\" \"data.frame\" importedList <- createRDBESDataObject(listOfDfsH1) #> Warning in createRDBESDataObject(listOfDfsH1): NOTE: Creating RDBES data objects from a list of local data frames or data.tables bypasses the RDBES upload data integrity checks."},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01a-data-import.html","id":"object-class-rdbesdataobject","dir":"Articles","previous_headings":"","what":"Object class RDBESDataObject","title":"01a Data import","text":"noted objects created S3 class “RDBESDataObject”. class defined print(), summary() sort() methods. info theese see vignette Manipulating RDBESDataObjects.","code":"importedTables <- createRDBESDataObject(paste0(dataDir,\"H1_Example.zip\")) class(importedTables) #> [1] \"RDBESDataObject\" \"list\""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01a-data-import.html","id":"validate-rdbesdataobject","dir":"Articles","previous_headings":"Object class RDBESDataObject","what":"validate RDBESDataObject","title":"01a Data import","text":"RDBESDataObject structure can validated using validateRDBESDataObject() function. see can imported RDBESDataObject see vignettes like 01b Manipulating RDBESDataObjects. See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"validateRDBESDataObject(importedTables, verbose = TRUE) #> [1] \"Note that TE is NULL but this is allowed in an RDBESDataObject\" #> [2] \"Note that LO is NULL but this is allowed in an RDBESDataObject\" #> [3] \"Note that OS is NULL but this is allowed in an RDBESDataObject\" #> [4] \"Note that LE is NULL but this is allowed in an RDBESDataObject\" #> [5] \"Note that CL is NULL but this is allowed in an RDBESDataObject\" #> [6] \"Note that CE is NULL but this is allowed in an RDBESDataObject\""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01b-manipulating-rdbesdataobjects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"01b Manipulating RDBESDataObjects","text":"aim document illustrate ways manipulating RDBESDataObjects.","code":"library(RDBEScore)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01b-manipulating-rdbesdataobjects.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"01b Manipulating RDBESDataObjects","text":"First ’ll load example data RDBES check ’s valid. ’s good idea check RDBESDataObjects valid manipulations perform. See import data vignette Import RDBES data vignette package example data used.","code":"# load Hierarchy 1 demo data myH1RawObject <- H1Example  validateRDBESDataObject(myH1RawObject, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01b-manipulating-rdbesdataobjects.html","id":"print-sort-and-summary-of-rdbesdataobject","dir":"Articles","previous_headings":"Prerequisites","what":"Print, sort and summary of RDBESDataObject","title":"01b Manipulating RDBESDataObjects","text":"print method gives list non-null tables RDBESDataObject. structure output table : Table name (DE, TE, LE, etc.) Number rows Sampling method (applicable, SWRWR, NPJS, CENSUS, etc.) Range number sampled (applicable) Range number total (applicable) single hierarchy present output ordered RDBES hierarchy structure. Underling print function summary function retains unique rows columns used print. get number rows non-null table can simply call object: get example Hierarchy 5 data:","code":"print(myH1RawObject) #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1430 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 311 #>  SL: 6 #>  IS: 25 h1summary <- summary(myH1RawObject) #get the hierarchy h1summary$hierarchy #> [1] 1 #extract the number of rows in tables from the summary sapply(h1summary$data, function(x){x$rows}) #>    DE    SD    VS    FT    FO    SS    SA    FM    BV    VD    SL    IS  #>     8     8  1214  1430  1916  1916  1916  7290 14580   311     6    25 myH1RawObject #equivalent to print(summary(myH1RawObject)) #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1430 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 311 #>  SL: 6 #>  IS: 25 # Hierarchy 5 demo data myH5RawObject <- H5Example  validateRDBESDataObject(myH5RawObject, verbose = FALSE)  # Number of rows in each non-null table and hierarchy print(myH5RawObject) #> Hierarchy 5 RDBESdataObject: #>  DE: 3 #>  SD: 3 #>  OS: 27 (SRSWR: 3/100) #>  LE: 27 (SRSWR: 1/2) #>  FT: 27 (SRSWR: 1/1) #>  SS: 27 (SRSWR: 1/4) #>  SA: 27 (SRSWR: 1/2) #>  FM: 270 #>  BV: 540 (SRSWR: 2/2) #>  VD: 311 #>  SL: 1 #>  IS: 20 #>  CL: 497 #>  CE: 99"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01b-manipulating-rdbesdataobjects.html","id":"sorting-rdbesdataobject","dir":"Articles","previous_headings":"Prerequisites","what":"Sorting RDBESDataObject","title":"01b Manipulating RDBESDataObjects","text":"data single hierarchy DE table correct sort order defined . can use sort() method . Printing object sorts automatically possible.","code":"#before sorting names(H8ExampleEE1) #>  [1] \"DE\" \"SD\" \"VS\" \"FT\" \"FO\" \"TE\" \"LO\" \"OS\" \"LE\" \"SS\" \"SA\" \"FM\" \"BV\" \"VD\" \"SL\" #> [16] \"IS\" \"CL\" \"CE\" #after sorting names(sort(H8ExampleEE1)) #>  [1] \"DE\" \"SD\" \"TE\" \"VS\" \"FT\" \"LE\" \"SS\" \"SA\" \"FM\" \"BV\" \"FO\" \"LO\" \"OS\" \"VD\" \"SL\" #> [16] \"IS\" \"CL\" \"CE\" #printing the summary H8ExampleEE1 #> Hierarchy 8 RDBESdataObject: #>  DE: 1 #>  SD: 1 #>  TE: 11 (SRSWOR: 2-3/4) #>  VS: 15 (SRSWR: 1-2/7-12) #>  LE: 15 (SRSWOR: 1/1) #>  SS: 15 (CENSUS: 1/1) #>  SA: 15 (SRSWOR: 1/794-14268) #>  BV: 3995 (CENSUS: 16-100/16-100) #>  VD: 7 #>  SL: 1 #>  IS: 2 #>  CL: 71 #>  CE: 132"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01b-manipulating-rdbesdataobjects.html","id":"combining-rdbesdataobjects","dir":"Articles","previous_headings":"","what":"Combining RDBESDataObjects","title":"01b Manipulating RDBESDataObjects","text":"RDBESDataObjects can combined using combineRDBESDataObjects() function. might required different sampling schemes used collect -shore -sea samples - often required combine data together analysis.","code":"myCombinedRawObject <- combineRDBESDataObjects(myH1RawObject,                                                myH5RawObject,                                                strict = FALSE) #> Warning: Combining RDBESDataObjects from different hierarchies ( 1 and 5 ). #> This creates a mixed hierarchy object that may be structurally and #> statistically invalid for some analyses.  # Number of rows in each non-null table and hierarchies print(myCombinedRawObject) #> Warning: No sort order for multiple hierarchies can be defined! #> Warning: Mixed hierarchy RDBESDataObject! #> Hierarchy 1 RDBESdataObject: #>   Hierarchy 5 RDBESdataObject: #>  DE: 11 #>  SD: 11 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1457 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  OS: 27 (SRSWR: 3/100) #>  LE: 27 (SRSWR: 1/2) #>  SS: 1943 (CENSUS,SRSWR: 1/1-4) #>  SA: 1943 (CENSUS,SRSWR: 1/1-2) #>  FM: 7560 #>  BV: 15120 (SRSWR: 2/2) #>  VD: 311 #>  SL: 7 #>  IS: 25 #>  CL: 497 #>  CE: 99  validateRDBESDataObject(myCombinedRawObject, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01b-manipulating-rdbesdataobjects.html","id":"filtering-rdbesdataobjects","dir":"Articles","previous_headings":"","what":"Filtering RDBESDataObjects","title":"01b Manipulating RDBESDataObjects","text":"RDBESDataObjects can filtered using filterRDBESDataObject() function - allows RDBESDataObject filtered field. typical use filtering might extract data collected particular ICES division. important note filtering likely result “orphan” rows produced usual also apply findAndKillOrphans() function filtered data remove records. NB! Currently filtering happens fields together .e possible filter codelist differently filter call. Imagine situation want filter “SDCtry” “VDflgCtry” ie vessels EH country sampled ZW institution. Ie two calls needed Sometimes might want inverse filter eg exclude something. can selecting complement set values using setdiff. can also remove records linking row VesselDetails (VD) table using removeBrokenVesselLinks() function. Finally can also remove records linking entry SpeciesListDetails (SL) table using removeBrokenSpeciesListLinks() function.","code":"myH1RawObject <- H1Example  # Number of rows in each non-null table print(myH1RawObject) #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1430 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 311 #>  SL: 6 #>  IS: 25 myFields <- c(\"SDctry\",\"VDctry\",\"VDflgCtry\",\"FTarvLoc\") myValues <- c(\"ZW\",\"ZWBZH\",\"ZWVFA\" )  myFilteredObject <- filterRDBESDataObject(myH1RawObject,                                          fieldsToFilter = myFields,                                          valuesToFilter = myValues )  # Number of rows in each non-null table print(myFilteredObject) #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 36 (SRSWR: 3/100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 310 #>  SL: 6 #>  IS: 25  validateRDBESDataObject(myFilteredObject, verbose = FALSE) myFilteredObjectNoOrphans <-    findAndKillOrphans(objectToCheck = myFilteredObject, verbose = FALSE)  validateRDBESDataObject(myFilteredObjectNoOrphans, verbose = FALSE)  myFilteredObjectNoOrphans #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 36 (SRSWR: 3/100) #>  FO: 108 (SRSWR: 3/20) #>  SS: 108 (SRSWR: 1/4) #>  SA: 108 (SRSWR: 1/2) #>  FM: 1080 #>  BV: 2160 (SRSWR: 2/2) #>  VD: 310 #>  SL: 6 #>  IS: 25 myFilteredObject <- filterRDBESDataObject(myH1RawObject,                                          fieldsToFilter = \"SDctry\",                                          valuesToFilter = \"ZW\",                                          killOrphans = T)  filterRDBESDataObject(myFilteredObject,                                          fieldsToFilter = \"VDflgCtry\",                                          valuesToFilter = \"EH\",                                          killOrphans = T) #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1430 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 1 #>  SL: 6 #>  IS: 25 # Exclude specific DEid values by selecting all others allValues <- unique(myH1RawObject$DE$DEid) excludedValues <- c(5351) myInverseFiltered <- filterRDBESDataObject(   myH1RawObject,   fieldsToFilter = \"DEid\",   valuesToFilter = setdiff(allValues, excludedValues),   killOrphans = TRUE )  validateRDBESDataObject(myInverseFiltered, verbose = FALSE) print(myInverseFiltered) #> Hierarchy 1 RDBESdataObject: #>  DE: 7 #>  SD: 7 #>  VS: 914 (CENSUS,SRSWOR,SRSWR: 2-34/4-367) #>  FT: 1130 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1616 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1616 (CENSUS,SRSWR: 1/1-4) #>  SA: 1616 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 311 #>  SL: 6 #>  IS: 25 myFields <- c(\"VDlenCat\") myValues <- c(\"18-<24\" ) myFilteredObject <- filterRDBESDataObject(myFilteredObjectNoOrphans,                                          fieldsToFilter = myFields,                                          valuesToFilter = myValues )  myFilteredObjectValidVesselLinks <- removeBrokenVesselLinks(                                   objectToCheck = myFilteredObject,                                   verbose = FALSE)  validateRDBESDataObject(myFilteredObjectValidVesselLinks, verbose = FALSE) myFields <- c(\"SLspeclistName\") myValues <- c(\"ZW_1965_SpeciesList\" ) myFilteredObjectValidSpeciesLinks <- filterRDBESDataObject(myFilteredObjectValidVesselLinks,                                          fieldsToFilter = myFields,                                          valuesToFilter = myValues )  myFilteredObjectValidSpeciesLinks <- removeBrokenSpeciesListLinks(                                   objectToCheck = myFilteredObjectValidSpeciesLinks,                                   verbose = FALSE)  validateRDBESDataObject(myFilteredObjectValidSpeciesLinks, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v01b-manipulating-rdbesdataobjects.html","id":"getting-subsets-of-rdbesdataobject-tables","dir":"Articles","previous_headings":"","what":"Getting Subsets of RDBESDataObject Tables","title":"01b Manipulating RDBESDataObjects","text":"Sometimes want see field values RDBESDataObject connected tables. One use case e.g. see specific Landing Event (LE) occured.can use getLinkedDataFromLevel() function. Similarly can get subset LE table corresponding specific value TE table. id field, can field table. Several values can used get subset table. Also lower hierarchy tables can used get subset higher hierarchy tables. table missing skipped possible. possible skip , function return error. See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"#get the TE table corresponding to the first LEid in the H8ExampleEE1 object getLinkedDataFromLevel(\"LEid\", c(1), H8ExampleEE1, \"TE\", verbose = TRUE) #> Traversing upwards in the table hierarchy from LE to TE  #> [1] \"LE: 1\" #> [1] \"Skipping: FT\" #> [1] \"VS: 1\" #> Key: <TEid> #>     TEid  SDid   LOid   VSid TErecType TEseqNum TEstratification TEtimeUnit #>    <num> <num> <lgcl> <lgcl>    <char>    <num>           <char>     <char> #> 1:     1     1     NA     NA        TE        1                Y       Week #>    TEstratumName TEclustering TEclusterName TEsampler TEnumTotal TEnumSamp #>           <char>       <char>        <char>    <lgcl>      <num>     <int> #> 1:      November            N             U        NA          4         2 #>    TEincProb TEselectMeth TEunitName TEselProb TEincProbCluster TEsamp #>       <lgcl>       <char>     <char>    <lgcl>           <lgcl> <char> #> 1:        NA       SRSWOR  1-week-48        NA               NA      Y #>    TEselectMethCluster TEnumTotalClusters TEnumSampClusters TEselProbCluster #>                 <lgcl>             <lgcl>            <lgcl>           <lgcl> #> 1:                  NA                 NA                NA               NA #>    TEnoSampReason TEnonRespCol TEauxVarTot TEauxVarValue TEauxVarName #>            <lgcl>       <char>      <lgcl>        <lgcl>       <lgcl> #> 1:             NA            N          NA            NA           NA #>    TEauxVarUnit #>          <lgcl> #> 1:           NA #get the TE table corresponding to the first LEid in the H8ExampleEE1 object getLinkedDataFromLevel(\"TEstratumName\", c(\"November\"), H8ExampleEE1, \"LE\", verbose = TRUE) #> Traversing downwards in the table hierarchy from TE to LE  #> TEstratumName: November #> VSid: 1, 2, 11 #>     TEid  VSid  LEid  FOid   OSid   FTid  VDid   SSid   SAid LErecType #>    <num> <num> <num> <num> <lgcl> <lgcl> <num> <lgcl> <lgcl>    <char> #> 1:     1     1     1    NA     NA     NA     6     NA     NA        LE #> 2:     1     2     2    NA     NA     NA     6     NA     NA        LE #> 3:     8    11    11    NA     NA     NA  1255     NA     NA        LE #>    LEstratification LEseqNum LEhaulNum LEstratumName LEclustering LEclusterName #>              <char>    <num>    <lgcl>        <char>       <char>        <char> #> 1:                N        1        NA             U            N             U #> 2:                N        2        NA             U            N             U #> 3:                N       11        NA             U            N             U #>    LEsampler LEmixedTrip LEcatReg LElocode LElocName LElocType LEctry #>       <lgcl>      <char>   <char>   <char>    <lgcl>    <char> <char> #> 1:        NA           N      Lan    EEPRN        NA      Port     EE #> 2:        NA           N      Lan    EEPRN        NA      Port     EE #> 3:        NA           N      Lan    EERMS        NA      Port     EE #>        LEdate LEtime LEeconZoneIndi      LEarea LEstatRect  LEgsaSubarea #>        <char> <lgcl>         <lgcl>      <char>     <char>        <char> #> 1: 2022-11-28     NA             NA 27.3.d.28.1       44H3 NotApplicable #> 2: 2022-12-05     NA             NA 27.3.d.28.1       44H3 NotApplicable #> 3: 2022-11-10     NA             NA 27.3.d.28.1       44H2 NotApplicable #>    LEjurisdArea LEgeoDatBas LEgeoSou LEnatFishAct LEmetier5         LEmetier6 #>          <lgcl>      <char>   <char>       <lgcl>    <lgcl>            <char> #> 1:           NA    Official     Logb           NA        NA OTM_SPF_16-31_0_0 #> 2:           NA    Official     Logb           NA        NA OTM_SPF_16-31_0_0 #> 3:           NA    Official     Logb           NA        NA OTM_SPF_16-31_0_0 #>    LEgear LEgeaDatBas LEgearSou LEmeshSize LEselDev LEselDevMeshSize LEtarget #>    <char>      <char>    <char>      <int>   <lgcl>           <lgcl>   <lgcl> #> 1:    OTM    Official    CombOD         18       NA               NA       NA #> 2:    OTM    Official    CombOD         18       NA               NA       NA #> 3:    OTM    Official    CombOD         20       NA               NA       NA #>    LEnumTotal LEnumSamp LEselProb LEselectMeth LEselectMethCluster #>         <int>     <int>    <lgcl>       <char>              <lgcl> #> 1:          1         1        NA       SRSWOR                  NA #> 2:          1         1        NA       SRSWOR                  NA #> 3:          1         1        NA       SRSWOR                  NA #>    LEnumTotalClusters LEnumSampClusters LEincProb LEsamp LEnoSampReason #>                <lgcl>            <lgcl>    <lgcl> <char>         <lgcl> #> 1:                 NA                NA        NA      Y             NA #> 2:                 NA                NA        NA      Y             NA #> 3:                 NA                NA        NA      Y             NA #>    LEnonRespCol LEfullTripAva LEencrVessCode LEunitName LEmitiDev LEgearDim #>          <char>        <char>         <char>     <char>    <char>    <lgcl> #> 1:            N          <NA>              6  LAN-43256      None        NA #> 2:            N          <NA>              6  LAN-43356      None        NA #> 3:            N          <NA>           1283  LAN-43016      None        NA #>    LEselProbCluster LEincProbCluster LEauxVarTot LEauxVarValue LEauxVarName #>              <lgcl>           <lgcl>      <lgcl>        <lgcl>       <lgcl> #> 1:               NA               NA          NA            NA           NA #> 2:               NA               NA          NA            NA           NA #> 3:               NA               NA          NA            NA           NA #>    LEauxVarUnit LEfishManUnit #>          <lgcl>        <lgcl> #> 1:           NA            NA #> 2:           NA            NA #> 3:           NA            NA #get the SA table corresponding to the first 2 TEids in the H8ExampleEE1 object getLinkedDataFromLevel(\"TEid\", c(1,2), H8ExampleEE1, \"SA\", verbose = TRUE) #> Traversing downwards in the table hierarchy from TE to SA  #> TEid: 1, 2 #> VSid: 1, 2, 3 #> LEid: 1, 2, 3 #> SSid: 1, 2, 3 #>     TEid  VSid  LEid  SSid  SAid SAparSequNum SArecType SAseqNum #>    <num> <num> <num> <num> <num>       <lgcl>    <char>    <num> #> 1:     1     1     1     1     1           NA        SA        1 #> 2:     1     2     2     2     2           NA        SA        2 #> 3:     2     3     3     3     3           NA        SA        3 #>    SAstratification SAstratumName SAspeCode SAspeCodeFAO SApres SAstateOfProc #>              <char>        <char>     <num>       <char> <char>        <char> #> 1:                N             U    126425          SPR    WHL           FRE #> 2:                N             U    126425          SPR    WHL           FRE #> 3:                N             U    126425          SPR    WHL           FRE #>    SAcatchCat SAlandCat SAcommCatScl SAcommCat  SAsex SAunitName SAunitType #>        <char>    <char>       <lgcl>    <lgcl> <char>     <char>     <char> #> 1:        Lan       HuC           NA        NA      U     202201        Box #> 2:        Lan       HuC           NA        NA      U     202202        Box #> 3:        Lan       HuC           NA        NA      U     202203        Box #>    SAtotalWtLive SAsampWtLive SAnumTotal SAnumSamp SAselProb SAselectMeth #>           <lgcl>       <lgcl>      <num>     <int>    <lgcl>       <char> #> 1:            NA           NA       1279         1        NA       SRSWOR #> 2:            NA           NA       2034         1        NA       SRSWOR #> 3:            NA           NA       6666         1        NA       SRSWOR #>    SAlowHierarchy    SAsampler SAnoSampReasonFM SAnoSampReasonBV SAtotalWtMes #>            <char>       <char>           <lgcl>           <lgcl>        <num> #> 1:              C SelfSampling               NA               NA       750000 #> 2:              C SelfSampling               NA               NA       700000 #> 3:              C SelfSampling               NA               NA      1500000 #>    SAtotWtMeaDatBas SAsampWtMes            SAspecState  SAgsaSubarea SAarea #>              <char>       <num>                 <char>        <char> <lgcl> #> 1:         Official         586 DeadOrZeroProbSurvival NotApplicable     NA #> 2:         Official         344 DeadOrZeroProbSurvival NotApplicable     NA #> 3:         Official         225 DeadOrZeroProbSurvival NotApplicable     NA #>    SAstatRect SAeconZoneIndi SAjurisdArea SAgeoDatBas SAgeoSou SAnatFishAct #>        <lgcl>         <lgcl>       <lgcl>      <char>   <char>       <lgcl> #> 1:         NA             NA           NA        <NA>     <NA>           NA #> 2:         NA             NA           NA        <NA>     <NA>           NA #> 3:         NA             NA           NA        <NA>     <NA>           NA #>    SAmetier5 SAmetier6 SAgear SAgeaDatBas SAgearSou SAmeshSize SAselDev #>       <lgcl>    <lgcl> <lgcl>      <char>    <char>     <lgcl>   <lgcl> #> 1:        NA        NA     NA        <NA>      <NA>         NA       NA #> 2:        NA        NA     NA        <NA>      <NA>         NA       NA #> 3:        NA        NA     NA        <NA>      <NA>         NA       NA #>    SAselDevMeshSize SAincProb SAsamp SAconFacMeasLive SAnoSampReason #>              <lgcl>    <lgcl> <char>           <lgcl>         <lgcl> #> 1:               NA        NA      Y               NA             NA #> 2:               NA        NA      Y               NA             NA #> 3:               NA        NA      Y               NA             NA #>    SAnonRespCol SAauxVarTot SAauxVarValue SAauxVarName SAauxVarUnit #>          <char>      <lgcl>        <lgcl>       <lgcl>       <lgcl> #> 1:            N          NA            NA           NA           NA #> 2:            N          NA            NA           NA           NA #> 3:            N          NA            NA           NA           NA #>    SAfishManUnit #>           <lgcl> #> 1:            NA #> 2:            NA #> 3:            NA #which vessel caught those fish? getLinkedDataFromLevel(\"BVfishId\", c(\"410472143\", \"410472144\"), H8ExampleEE1, \"VS\", TRUE) #> Traversing upwards in the table hierarchy from BV to VS  #> [1] \"BV: 410472143, 410472144\" #> [1] \"Skipping: FM\" #> [1] \"SA: 5, 5, 5, 5, 5, 5, 5, 5, 5, 5\" #> [1] \"SS: 5\" #> [1] \"LE: 5\" #> [1] \"Skipping: FT\" #> Key: <VSid> #>     VSid  SDid  VDid  TEid VSrecType VSstratification VSstratumName VSunitName #>    <num> <num> <num> <num>    <char>           <char>        <char>     <lgcl> #> 1:     5     1   500     4        VS                N             U         NA #>    VSseqNum VSencrVessCode VSclustering VSclusterName VSsampler VSnumTotal #>       <num>          <int>       <char>        <char>    <lgcl>      <int> #> 1:        5           8161            N             U        NA         11 #>    VSnumSamp VSincProb VSselectMeth VSselectMethCluster VSnumTotalClusters #>        <int>    <lgcl>       <char>              <lgcl>             <lgcl> #> 1:         2        NA        SRSWR                  NA                 NA #>    VSnumSampClusters VSselProb VSselProbCluster VSincProbCluster VSsamp #>               <lgcl>    <lgcl>           <lgcl>           <lgcl> <char> #> 1:                NA        NA               NA               NA      Y #>    VSnoSampReason VSnonRespCol VSauxVarTot VSauxVarValue VSauxVarName #>            <lgcl>       <char>      <lgcl>        <lgcl>       <lgcl> #> 1:             NA            N          NA            NA           NA #>    VSauxVarUnit #>          <lgcl> #> 1:           NA"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"02a Generating probabilities","text":"aim document illustrate automatically generate types sample probabilities using functions runChecksOnSelectionAndProbs applyGenerateProbs RDBEScore package.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"load-the-package","dir":"Articles","previous_headings":"","what":"Load the package","title":"02a Generating probabilities","text":"","code":"library(RDBEScore)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"main-data-requirements-to-generate-probabilities","dir":"Articles","previous_headings":"","what":"main data requirements to generate probabilities","title":"02a Generating probabilities","text":"RDBEScore currently provides probability generation selection method “SRSWR”,“SRSWOR” “CENSUS”. Also, automatically generate probabilities, necessary numTotal numSamp declared every sampling table. Functions also configured handle cases “clustering==”N”. case, changes need made data running functions. changes configure significant assumptions left well visible data preparation section estimation script.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"load-and-validate-some-example-data","dir":"Articles","previous_headings":"","what":"Load and validate some example data","title":"02a Generating probabilities","text":"First ’ll load example data RDBES check ’s valid. ’s good tip check RDBESDataObjects valid manipulations perform. See import data vignette Import RDBES data vignette package example data pre-loaded RDBEScore used. functions generate probabilities yet deal lower hierarchies B rework bit data looks like lower hierarchy C.","code":"# load some H1 test data myH1DataObject <- H1Example       # filter data for DEstratumName==DE_stratum1_H1 to make object smaller and easier to handle myH1DataObject <- filterAndTidyRDBESDataObject(myH1DataObject,c(\"DEstratumName\"), c(\"DE_stratum1_H1\"),                                                killOrphans=TRUE) # Temp fixes to change data to lower hierarchy C - function won't deal with A, or B yet myH1DataObject[[\"BV\"]] <- dplyr::distinct(myH1DataObject[[\"BV\"]], FMid, .keep_all = TRUE) temp <- dplyr::left_join(myH1DataObject[[\"BV\"]][,c(\"BVid\",\"FMid\")],                           myH1DataObject[[\"FM\"]][,c(\"FMid\",\"SAid\")],                           by=\"FMid\") myH1DataObject[[\"BV\"]]$SAid <- temp$SAid myH1DataObject[[\"BV\"]]$FMid <- NA myH1DataObject[[\"SA\"]]$SAlowHierarchy <- \"C\" myH1DataObject[[\"BV\"]]$BVnumTotal <- 10 myH1DataObject[[\"BV\"]]$BVnumSamp <- 10  # reworking stratification of VS table myH1DataObject[[\"VS\"]][VSencrVessCode %in% c(\"VDcode_5\",\"VDcode_8\",\"VDcode_9\")]$VSstratumName <-    \"VS_stratum1\" myH1DataObject[[\"VS\"]][VSencrVessCode %in% c(\"VDcode_5\",\"VDcode_8\",\"VDcode_9\")]$VSnumTotal <- 30 myH1DataObject[[\"VS\"]][VSencrVessCode %in% c(\"VDcode_6\",\"VDcode_7\",\"VDcode_10\")]$VSstratumName <-    \"VS_stratum2\" myH1DataObject[[\"VS\"]][VSstratumName %in% \"VS_stratum1\",]$VSnumSamp <- 5 myH1DataObject[[\"VS\"]][VSstratumName %in% \"VS_stratum2\",]$VSnumSamp <- 4  # reworking FT table myH1DataObject[[\"FT\"]]$FTselectMeth <- \"SRSWOR\"  tmp<-myH1DataObject[[\"FT\"]] tmp$VSencrVessCode<-myH1DataObject[[\"VS\"]]$VSencrVessCode[match(myH1DataObject[[\"FT\"]]$VSid,                                                                 myH1DataObject[[\"VS\"]]$VSid)]  tmp$FTnumSamp<-as.integer(table(tmp$VSencrVessCode))[match(tmp$VSencrVessCode,                                                             names(table(tmp$VSencrVessCode)))]  tmp[tmp$VSencrVessCode %in% c(\"VDcode_5\"),]$FTnumTotal<-100 tmp[tmp$VSencrVessCode %in% c(\"VDcode_6\"),]$FTnumTotal<-50 tmp[tmp$VSencrVessCode %in% c(\"VDcode_7\"),]$FTnumTotal<-25 tmp[tmp$VSencrVessCode %in% c(\"VDcode_8\"),]$FTnumTotal<-80 tmp[tmp$VSencrVessCode %in% c(\"VDcode_9\"),]$FTnumTotal<-70 tmp[tmp$VSencrVessCode %in% c(\"VDcode_10\"),]$FTnumTotal<-60  tmp$VSencrVessCode<-NULL  tmp$FTstratumName<-\"U\" tmp$FTstratification<-\"N\"  myH1DataObject[[\"FT\"]]<-tmp myH1DataObject[[\"FO\"]]$FOselectMeth<-\"SRSWOR\" myH1DataObject$SA$SAselectMeth<-\"SRSWOR\" myH1DataObject$SS$SSselectMeth<-\"SRSWOR\" myH1DataObject$BV$BVselectMeth<-\"SRSWOR\"  # confirm validity validateRDBESDataObject(myH1DataObject)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"a-closer-look-at-the-example-data","dir":"Articles","previous_headings":"","what":"A closer look at the example data","title":"02a Generating probabilities","text":"final data contains 10 ages 243 hauls sampled 81 trips done 9 selected vessels. Examining selection methods used VS table visible 9 vessels selected replacement (SRSWR) two strata, one strata total 30 vessels (VS_stratum1) one total 60 vessels (VS_stratum2). also noticeable selection inclusion probabilities declared upload. regards trips selected without replacement (SRSWOR). either 9 18 trips selected vessel. Individual vessels registered total number trips 25 100 trips. also see selection inclusion probabilities declared. regards hauls example data indicates 20 done every trip(!) 3 sampled. likely data, good enough demonstration purposes. Also see selection inclusion probabilities declared.","code":"unique(myH1DataObject[[\"VS\"]][,c(\"VSstratification\",\"VSstratumName\",\"VSselectMeth\",                                  \"VSnumTotal\",\"VSnumSamp\",\"VSselProb\",\"VSincProb\")]) #>    VSstratification VSstratumName VSselectMeth VSnumTotal VSnumSamp VSselProb #>              <char>        <char>       <char>      <int>     <int>     <num> #> 1:                Y   VS_stratum1        SRSWR         30         5        NA #> 2:                Y   VS_stratum2        SRSWR         60         4        NA #>    VSincProb #>        <num> #> 1:        NA #> 2:        NA unique(myH1DataObject[[\"FT\"]][,c(\"VSid\",\"FTstratification\",\"FTstratumName\",\"FTselectMeth\",                                  \"FTnumTotal\",\"FTnumSamp\",\"FTselProb\",\"FTincProb\")]) #>     VSid FTstratification FTstratumName FTselectMeth FTnumTotal FTnumSamp #>    <int>           <char>        <char>       <char>      <int>     <int> #> 1: 78006                N             U       SRSWOR        100        18 #> 2: 78007                N             U       SRSWOR         80        18 #> 3: 78008                N             U       SRSWOR         70         9 #> 4: 78009                N             U       SRSWOR         60         9 #> 5: 78010                N             U       SRSWOR         50        18 #> 6: 78011                N             U       SRSWOR         50        18 #> 7: 78012                N             U       SRSWOR        100        18 #> 8: 78013                N             U       SRSWOR         80        18 #> 9: 78014                N             U       SRSWOR         25         9 #>    FTselProb FTincProb #>        <num>     <num> #> 1:        NA        NA #> 2:        NA        NA #> 3:        NA        NA #> 4:        NA        NA #> 5:        NA        NA #> 6:        NA        NA #> 7:        NA        NA #> 8:        NA        NA #> 9:        NA        NA table(myH1DataObject[[\"FO\"]]$FTid) #>  #> 21677 21678 21679 21680 21681 21682 21683 21684 21685 21686 21687 21688 21689  #>     3     3     3     3     3     3     3     3     3     3     3     3     3  #> 21690 21691 21692 21693 21694 21695 21696 21697 21698 21699 21700 21701 21702  #>     3     3     3     3     3     3     3     3     3     3     3     3     3  #> 21703 21704 21705 21706 21707 21708 21709 21710 21711 21712 21713 21714 21715  #>     3     3     3     3     3     3     3     3     3     3     3     3     3  #> 21716 21717 21718 21719 21720 21721 21722 21723 21724 21725 21726 21727 21728  #>     3     3     3     3     3     3     3     3     3     3     3     3     3  #> 21729 21730 21731 21732 21733 21734 21735 21736 21737 21738 21739 21740 21741  #>     3     3     3     3     3     3     3     3     3     3     3     3     3  #> 21742 21743 21744 21745 21746 21747 21748 21749 21750 21751 21752 21753 21754  #>     3     3     3     3     3     3     3     3     3     3     3     3     3  #> 21755 21756 21757  #>     3     3     3 unique(myH1DataObject[[\"FO\"]][,c(\"FOid\",\"FOstratification\",\"FOstratumName\",\"FOselectMeth\",                                  \"FOnumTotal\",\"FOnumSamp\",\"FOselProb\",\"FOincProb\")]) #> Key: <FOid> #>       FOid FOstratification FOstratumName FOselectMeth FOnumTotal FOnumSamp #>      <int>           <char>        <char>       <char>      <int>     <int> #>   1: 68983                N             U       SRSWOR         20         3 #>   2: 68984                N             U       SRSWOR         20         3 #>   3: 68985                N             U       SRSWOR         20         3 #>   4: 68986                N             U       SRSWOR         20         3 #>   5: 68987                N             U       SRSWOR         20         3 #>  ---                                                                        #> 239: 69221                N             U       SRSWOR         20         3 #> 240: 69222                N             U       SRSWOR         20         3 #> 241: 69223                N             U       SRSWOR         20         3 #> 242: 69224                N             U       SRSWOR         20         3 #> 243: 69225                N             U       SRSWOR         20         3 #>      FOselProb FOincProb #>          <num>     <num> #>   1:        NA        NA #>   2:        NA        NA #>   3:        NA        NA #>   4:        NA        NA #>   5:        NA        NA #>  ---                     #> 239:        NA        NA #> 240:        NA        NA #> 241:        NA        NA #> 242:        NA        NA #> 243:        NA        NA"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"generating-probabilities-for-only-one-table-generateprobs","dir":"Articles","previous_headings":"","what":"generating probabilities for only one table: generateProbs","title":"02a Generating probabilities","text":"generate probabilities one tables choose type probabilities want generate (“selection” “inclusion”) run generateProbs. note: check data issues related selection methods probabilities, can run function runChecksOnSelectionAndProbs. general necessary run applyGenerateProbs defaults call runChecksOnSelectionAndProbs included.","code":"myH1DataObject_uptde<-myH1DataObject myH1DataObject_uptde[[\"VS\"]] <- generateProbs(myH1DataObject[[\"VS\"]],                                                probType=\"inclusion\") #> [1] \"SRSWR\" # display changes myH1DataObject_uptde[[\"VS\"]][,c(\"VSstratification\",\"VSstratumName\",\"VSselectMeth\",                                 \"VSnumTotal\",\"VSnumSamp\",\"VSselProb\",\"VSincProb\")] #>    VSstratification VSstratumName VSselectMeth VSnumTotal VSnumSamp VSselProb #>              <char>        <char>       <char>      <int>     <int>     <num> #> 1:                Y   VS_stratum1        SRSWR         30         5        NA #> 2:                Y   VS_stratum1        SRSWR         30         5        NA #> 3:                Y   VS_stratum1        SRSWR         30         5        NA #> 4:                Y   VS_stratum2        SRSWR         60         4        NA #> 5:                Y   VS_stratum2        SRSWR         60         4        NA #> 6:                Y   VS_stratum2        SRSWR         60         4        NA #> 7:                Y   VS_stratum1        SRSWR         30         5        NA #> 8:                Y   VS_stratum1        SRSWR         30         5        NA #> 9:                Y   VS_stratum2        SRSWR         60         4        NA #>     VSincProb #>         <num> #> 1: 0.15591979 #> 2: 0.15591979 #> 3: 0.15591979 #> 4: 0.06501844 #> 5: 0.06501844 #> 6: 0.06501844 #> 7: 0.15591979 #> 8: 0.15591979 #> 9: 0.06501844  myH1DataObject_uptde[[\"VS\"]] <- generateProbs(myH1DataObject_uptde[[\"VS\"]],                                                probType=\"selection\") #> [1] \"SRSWR\" # display changes myH1DataObject_uptde[[\"VS\"]][,c(\"VSstratification\",\"VSstratumName\",\"VSselectMeth\",                                 \"VSnumTotal\",\"VSnumSamp\",\"VSselProb\",\"VSincProb\")] #>    VSstratification VSstratumName VSselectMeth VSnumTotal VSnumSamp  VSselProb #>              <char>        <char>       <char>      <int>     <int>      <num> #> 1:                Y   VS_stratum1        SRSWR         30         5 0.03333333 #> 2:                Y   VS_stratum1        SRSWR         30         5 0.03333333 #> 3:                Y   VS_stratum1        SRSWR         30         5 0.03333333 #> 4:                Y   VS_stratum2        SRSWR         60         4 0.01666667 #> 5:                Y   VS_stratum2        SRSWR         60         4 0.01666667 #> 6:                Y   VS_stratum2        SRSWR         60         4 0.01666667 #> 7:                Y   VS_stratum1        SRSWR         30         5 0.03333333 #> 8:                Y   VS_stratum1        SRSWR         30         5 0.03333333 #> 9:                Y   VS_stratum2        SRSWR         60         4 0.01666667 #>     VSincProb #>         <num> #> 1: 0.15591979 #> 2: 0.15591979 #> 3: 0.15591979 #> 4: 0.06501844 #> 5: 0.06501844 #> 6: 0.06501844 #> 7: 0.15591979 #> 8: 0.15591979 #> 9: 0.06501844"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"generating-probabilities-for-an-entire-rdbes-data-object-applygenerateprobs","dir":"Articles","previous_headings":"","what":"generating probabilities for an entire RDBES data object: applyGenerateProbs","title":"02a Generating probabilities","text":"function applyGenerateProbs generates selection inclusion probabilities selection tables RDBES data object one go. , avoid running checks setting runInitialProbChecks FALSE. use probType = \"selection\" complete data selection probabilities. However, selection method table FT SRSWOR applyGenerateProbs issues error (see ?applyGenerateProbs details)","code":"myH1DataObject_uptde<-applyGenerateProbs (x = myH1DataObject                                       , probType = \"inclusion\"                                       , overwrite=T                                       , runInitialProbChecks = FALSE)  validateRDBESDataObject(myH1DataObject_uptde)  # display changes myH1DataObject_uptde[[\"VS\"]][,c(\"VSstratification\",\"VSstratumName\",\"VSselectMeth\",                                 \"VSnumTotal\",\"VSnumSamp\",\"VSselProb\",\"VSincProb\")]  unique(myH1DataObject_uptde[[\"FT\"]][,c(\"VSid\",\"FTstratification\",\"FTstratumName\",                                        \"FTselectMeth\",\"FTnumTotal\",\"FTnumSamp\",\"FTselProb\",\"FTincProb\")])  unique(myH1DataObject_uptde[[\"FO\"]][,c(\"FOid\",\"FOstratification\",\"FOstratumName\",                                        \"FOselectMeth\",\"FOnumTotal\",\"FOnumSamp\",\"FOselProb\",\"FOincProb\")])  unique(myH1DataObject_uptde[[\"BV\"]][,c(\"BVid\",\"BVfishId\",\"BVselectMeth\",\"BVnumTotal\",                                        \"BVnumSamp\",\"BVselProb\",\"BVincProb\")]) myH1DataObject_uptde<-applyGenerateProbs (x = myH1DataObject_uptde                                       , probType = \"selection\"                                       , overwrite=T                                       , runInitialProbChecks = FALSE) #> [1] \"========start generateProbs=======\" #> [1] \"VS\" #> [1] \"SDid: 5438\" #> [1] \"SRSWR\" #> [1] \"FT\" #> [1] \"VSid: 78006\" #> [1] \"SRSWOR\" #> Error in generateProbs(x, probType): depends on order"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02a-generating-probabilities.html","id":"the-overwrite-argument","dir":"Articles","previous_headings":"","what":"The overwrite argument","title":"02a Generating probabilities","text":"completed See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02b-Generating-zeros-for-species-not-observed.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"02b Generating zeros for species not observed","text":"aim document demonstrate Species List table (SL) RDBES can used complement sample table zeros cases , e.g., species looked found therefore appear Sample table (SA) RDBES. task adding zeros Sample table (SA) made easy using function generateZerosUsingSL available RDBEScore package.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02b-Generating-zeros-for-species-not-observed.html","id":"load-the-package","dir":"Articles","previous_headings":"","what":"Load the package","title":"02b Generating zeros for species not observed","text":"","code":"library(RDBEScore) library(data.table)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02b-Generating-zeros-for-species-not-observed.html","id":"load-and-validate-example-data","dir":"Articles","previous_headings":"","what":"Load and validate example data","title":"02b Generating zeros for species not observed","text":"","code":"# read an example dataset and simplify it to 1 trip and 1 haul [dev bote: this section needs to be reworked when data and filterRDBESDataObject are  updated] data(Pckg_survey_apistrat_H1) myH1DataObject1 <- Pckg_survey_apistrat_H1 myH1DataObject1$SL<-myH1DataObject1$SL[grepl(myH1DataObject1$SL$SLspeclistName, pat=\"Pckg_survey_apistrat_H1\"),] #myH1DataObject1<-filterAndTidyRDBESDataObject(myH1DataObject1, fieldsToFilter=\"FOid\",valuesToFilter=70849, killOrphans = TRUE) myH1DataObject1<-filterRDBESDataObject(myH1DataObject1, fieldsToFilter=\"SSid\",valuesToFilter=227694, killOrphans = TRUE) # check it is a valid RDBESobject validateRDBESDataObject(myH1DataObject1)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02b-Generating-zeros-for-species-not-observed.html","id":"a-closer-look-the-example-data-and-its-characteristics","dir":"Articles","previous_headings":"","what":"A closer look the example data and its characteristics","title":"02b Generating zeros for species not observed","text":"example data hierarchy 1. contains single trip single haul. simplicity, restrict analysis tables SL, SS SA ones handled functions behaviour want demonstrate. Examining print Species List (SL) Individual Species tables () one can conclude sampling targeted landings 1 species. case species Nephrops norvegicus (aphiaId 107254). Examining print Species Selection table (SS), one can confirm one fishing operation present data (FOid 70849) landings indeed sampled (simplicity subset columns printed). Note variable set “N” (.e., ). changed later want zeros calculated. Given previous, expected Nephrops norvegicus sampled appear RDBES Sample table (SA). One can confirm happened printing table (simplicity subset columns printed).","code":"myH1DataObject1[c(\"SL\",\"IS\")] #> $SL #> Key: <SLid> #>     SLid SLrecType  SLcou SLinst                             SLspeclistName #>    <int>    <char> <char> <char>                                     <char> #> 1: 47891        SL     ZW   4484 WGRDBES-EST_TEST_1_Pckg_survey_apistrat_H1 #>    SLyear SLcatchFrac #>     <int>      <char> #> 1:   1965         Lan #>  #> $IS #> Key: <ISid> #>     ISid  SLid ISrecType IScommTaxon ISsppCode #>    <num> <num>    <char>       <int>     <int> #> 1:  1001 47891        IS      107254    107254 myH1DataObject1[[c(\"SS\")]][,c(1:15,19)] #> Key: <SSid> #>      SSid  LEid  FOid  TEid  FTid  SLid  OSid SSrecType SSseqNum #>     <int> <int> <int> <int> <int> <int> <int>    <char>    <int> #> 1: 227694    NA 70849    NA    NA 47891    NA        SS        1 #>    SSstratification SSstratumName SSclustering SSclusterName SSobsActTyp #>              <char>        <char>       <char>        <char>      <char> #> 1:                N             U            N             U        Sort #>    SScatchFra SSuseCalcZero #>        <char>        <char> #> 1:        Lan             N myH1DataObject1[[c(\"SA\")]][,c(1:9,48:49)] #> Key: <SAid> #>      SAid   SSid  LEid SArecType SAseqNum SAparSequNum SAstratification #>     <num>  <int> <int>    <char>    <num>        <num>           <char> #> 1: 572813 227694    NA        SA        1           NA                N #>    SAstratumName SAspeCode SAtotalWtMes SAsampWtMes #>           <char>    <char>        <int>       <int> #> 1:             U    107254          276         276"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02b-Generating-zeros-for-species-not-observed.html","id":"generating-zeros-for-species-looked-for-but-not-reported-in-the-sa-table","dir":"Articles","previous_headings":"","what":"Generating Zeros for species looked for but not reported in the SA table","title":"02b Generating zeros for species not observed","text":"Lets change example, adding couple new species (Pandalus borealis Cancer pagurus) Species List table (SS). also change variable “Y” zeros can calculated. update, new dataset likens situation observers looked three species (Nephrops norvegicus, Cancer pagurus Pandalus borealis) one (Nephrops norvegicus) found sample. Running function zeros additional species can quickly added. Note new rows floating points values SAid SAseqNum (use sprintf ensure decimal places displayed). facilitates ordering samples prevents overlaps different datasets joined. Also SAunitName created new rows identical SAid. See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"# first we duplicate the IS myH1DataObject1$IS<-rbind(myH1DataObject1$IS, myH1DataObject1$IS, myH1DataObject1$IS) # then we update a few fields and reset the IS key myH1DataObject1$IS[2:3,c(\"ISid\",\"IScommTaxon\",\"ISsppCode\")]<-data.frame(c(1002, 1003),c(107276, 107649),   c(107276, 107649)) setkeyv(myH1DataObject1$IS,\"ISid\") # change SSuseCalcZero to \"Y\" myH1DataObject1$SS$SSuseCalcZero<-\"Y\" # finally we make sure the object we created is a valid RDBES data object. No message is a good sign. validateRDBESDataObject(myH1DataObject1) # display new IS myH1DataObject1[c(\"IS\")] #> $IS #> Key: <ISid> #>     ISid  SLid ISrecType IScommTaxon ISsppCode #>    <num> <num>    <char>       <int>     <int> #> 1:  1001 47891        IS      107254    107254 #> 2:  1002 47891        IS      107276    107276 #> 3:  1003 47891        IS      107649    107649 myH1DataObject1updte<-generateZerosUsingSL(myH1DataObject1) myH1DataObject1updte$SA[,c(1:9,48:49)] #> Key: <SAid> #>      SAid   SSid  LEid SArecType SAseqNum SAparSequNum SAstratification #>     <num>  <int> <int>    <char>    <num>        <num>           <char> #> 1: 572813 227694    NA        SA        1           NA                N #> 2: 572813 227694    NA        SA        1           NA                N #> 3: 572813 227694    NA        SA        2           NA                N #>    SAstratumName SAspeCode SAtotalWtMes SAsampWtMes #>           <char>    <char>        <int>       <int> #> 1:             U    107254          276         276 #> 2:             U    107276            0           0 #> 3:             U    107649            0           0 sprintf(myH1DataObject1updte[['SA']]$SAid, fmt = '%.3f') #> [1] \"572813.000\" \"572813.001\" \"572813.002\" sprintf(myH1DataObject1updte[['SA']]$SAseqNum, fmt = '%.3f') #> [1] \"1.000\" \"1.000\" \"2.000\" print(myH1DataObject1updte[['SA']]$SAunitName) #> [1] \"1\" \"1\" \"2\""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02c-Generating-NAs-for-species-not-targeted-by-sampling.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"02c Generating NAs for species not targeted by sampling","text":"aim document demonstrate Species List table (SL) RDBES can used complement sample table NAs cases , e.g., species meant looked . task made easy using function generateNAsUsingSL available RDBEScore package.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02c-Generating-NAs-for-species-not-targeted-by-sampling.html","id":"load-the-package","dir":"Articles","previous_headings":"","what":"Load the package","title":"02c Generating NAs for species not targeted by sampling","text":"","code":"library(RDBEScore)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02c-Generating-NAs-for-species-not-targeted-by-sampling.html","id":"load-and-validate-example-data","dir":"Articles","previous_headings":"","what":"Load and validate example data","title":"02c Generating NAs for species not targeted by sampling","text":"","code":"# read an example dataset and simplify it to 1 trip and 1 haul [dev bote: this section needs to be reworked when data and filterRDBESDataObject are  updated] data(Pckg_survey_apistrat_H1) myH1DataObject1 <- Pckg_survey_apistrat_H1 myH1DataObject1$SL<-myH1DataObject1$SL[grepl(myH1DataObject1$SL$SLspeclistName, pat=\"Pckg_survey_apistrat_H1\"),] #myH1DataObject1<-filterAndTidyRDBESDataObject(myH1DataObject1, fieldsToFilter=\"FOid\",valuesToFilter=70849, killOrphans = TRUE) myH1DataObject1<-filterRDBESDataObject(myH1DataObject1, fieldsToFilter=\"SSid\",valuesToFilter=227694, killOrphans = TRUE) # check it is a valid RDBESobject validateRDBESDataObject(myH1DataObject1)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02c-Generating-NAs-for-species-not-targeted-by-sampling.html","id":"a-closer-look-the-example-data-and-its-characteristics","dir":"Articles","previous_headings":"","what":"A closer look the example data and its characteristics","title":"02c Generating NAs for species not targeted by sampling","text":"example data hierarchy 1. contains single trip single haul. simplicity, restrict analysis tables SL, SS SA ones handled functions behaviour want demonstrate. Examining print Species List (SL) Individual Species () tables one can conclude sampling targeted landings 1 species. case species Nephrops norvegicus (aphiaId 107254). Examining print Species Selection table (SS), one can confirm one fishing operation present data (FOid 70849) landings indeed sampled (simplicity subset columns printed). Given previous, expected Nephrops norvegicus sampled appear RDBES Sample table (SA). One can confirm happened printing table (simplicity subset columns printed).","code":"myH1DataObject1[c(\"SL\",\"IS\")] #> $SL #> Key: <SLid> #>     SLid SLrecType  SLcou SLinst                             SLspeclistName #>    <int>    <char> <char> <char>                                     <char> #> 1: 47891        SL     ZW   4484 WGRDBES-EST_TEST_1_Pckg_survey_apistrat_H1 #>    SLyear SLcatchFrac #>     <int>      <char> #> 1:   1965         Lan #>  #> $IS #> Key: <ISid> #>     ISid  SLid ISrecType IScommTaxon ISsppCode #>    <num> <num>    <char>       <int>     <int> #> 1:  1001 47891        IS      107254    107254 myH1DataObject1[[c(\"SS\")]][,1:15] #> Key: <SSid> #>      SSid  LEid  FOid  TEid  FTid  SLid  OSid SSrecType SSseqNum #>     <int> <int> <int> <int> <int> <int> <int>    <char>    <int> #> 1: 227694    NA 70849    NA    NA 47891    NA        SS        1 #>    SSstratification SSstratumName SSclustering SSclusterName SSobsActTyp #>              <char>        <char>       <char>        <char>      <char> #> 1:                N             U            N             U        Sort #>    SScatchFra #>        <char> #> 1:        Lan myH1DataObject1[[c(\"SA\")]][,c(1:9,48:49)] #> Key: <SAid> #>      SAid   SSid  LEid SArecType SAseqNum SAparSequNum SAstratification #>     <num>  <int> <int>    <char>    <num>        <num>           <char> #> 1: 572813 227694    NA        SA        1           NA                N #>    SAstratumName SAspeCode SAtotalWtMes SAsampWtMes #>           <char>    <char>        <int>       <int> #> 1:             U    107254          276         276"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02c-Generating-NAs-for-species-not-targeted-by-sampling.html","id":"generating-nas-for-species-not-looked-for","dir":"Articles","previous_headings":"","what":"Generating NAs for species not looked for","title":"02c Generating NAs for species not targeted by sampling","text":"Suppose want consult data produce estimate , e.g., cod (aphiaId 126436). species targeted sampling programme impossible infer data present alongside Nephrops norvegicus sampling. total weight measured (SAtotalWtMes) cod therefore considered missing (NA). function (convenience, columns SA table printed). Note new rows floating points values SAid, SAseqNum (use sprintf ensure decimal places displayed). facilitates ordering samples prevents overlaps different datasets joined. Also SAunitName created new row builds SAid helps make row readily identifiable. Note argument targetAphiaId function generateNAsUsingSL can also accept vector thus allowing generation NAs multiple species one go. example Pandalus borealis added call.","code":"myH1DataObject1updte<-generateNAsUsingSL(myH1DataObject1, targetAphiaId = c(\"126436\")) myH1DataObject1updte$SA[,c(1:9,48:49)] #> Key: <SAid> #>      SAid   SSid  LEid SArecType SAseqNum SAparSequNum SAstratification #>     <num>  <int> <int>    <char>    <num>        <num>           <char> #> 1: 572813 227694    NA        SA    1.000           NA                N #> 2: 572813 227694    NA        SA    1.001           NA                N #>    SAstratumName SAspeCode SAtotalWtMes SAsampWtMes #>           <char>    <char>        <int>       <int> #> 1:             U    107254          276         276 #> 2:             U    126436           NA          NA sprintf(myH1DataObject1updte[['SA']]$SAid, fmt = '%.3f') #> [1] \"572813.000\" \"572813.001\" sprintf(myH1DataObject1updte[['SA']]$SAseqNum, fmt = '%.3f') #> [1] \"1.000\" \"1.001\" print(myH1DataObject1updte[['SA']]$SAunitName) #> [1] \"1\"                \"NAgen_572813.001\" myH1DataObject1updte<-generateNAsUsingSL(myH1DataObject1, targetAphiaId = c(\"126436\",\"107649\")) myH1DataObject1updte$SA[,c(1:9,48:49)] #> Key: <SAid> #>      SAid   SSid  LEid SArecType SAseqNum SAparSequNum SAstratification #>     <num>  <int> <int>    <char>    <num>        <num>           <char> #> 1: 572813 227694    NA        SA    1.000           NA                N #> 2: 572813 227694    NA        SA    1.001           NA                N #> 3: 572813 227694    NA        SA    1.002           NA                N #>    SAstratumName SAspeCode SAtotalWtMes SAsampWtMes #>           <char>    <char>        <int>       <int> #> 1:             U    107254          276         276 #> 2:             U    126436           NA          NA #> 3:             U    107649           NA          NA"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02c-Generating-NAs-for-species-not-targeted-by-sampling.html","id":"dealing-with-diligent-observers","dir":"Articles","previous_headings":"","what":"Dealing with diligent observers","title":"02c Generating NAs for species not targeted by sampling","text":"many practical situations, diligent observers sometimes record species expected. “excess” data frequently useless estimation point--view (sampling observer-dependent therefore likely non-representative), analyses (e.g., distribution rare species) summaries (e.g., totals biomass sampled) may useful preserve data. difference two cases can specified via argument overwriteSampled function generateNAsUsingSL. default (estimation case) argument set TRUE makes generateNAsUsingSL set weights extra species NA. , explicitly setting argument overwriteSampled=FALSE information collected can also kept. demonstrate carry small alteration example data, removing Nephrops norvegicus Species List. creates somewhat atypical situation: haul nothing supposed looked still Nephrops norvegicus registered. use situation sake simple example. Now call generateNAsUsingSL Nephrops norvegicus implicit default overwriteSampled=TRUE (regular estimation case). noticeable function sets weights species NA , hand, interested keeping available data, set overwriteSampled=FALSE See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"# we remove *Nephrops norvegicus* myH1DataObject1$IS<-myH1DataObject1$IS[-1,] # Note that because IS has 0 rows, the object stopped validating validateRDBESDataObject(myH1DataObject1, strict = FALSE) #> Warning in validateRDBESDataObject(myH1DataObject1, strict = FALSE): #> objectToCheck contains a non-empty SL table but the IS table is either NULL or #> empty. myH1DataObject1updte<-generateNAsUsingSL(myH1DataObject1,                                           targetAphiaId = c(\"107254\"), validate = FALSE) myH1DataObject1updte$SA[,c(1:9,48:49)] #> Key: <SAid> #>      SAid   SSid  LEid SArecType SAseqNum SAparSequNum SAstratification #>     <num>  <int> <int>    <char>    <num>        <num>           <char> #> 1: 572813 227694    NA        SA        1           NA                N #>    SAstratumName SAspeCode SAtotalWtMes SAsampWtMes #>           <char>    <char>        <int>       <int> #> 1:             U    107254           NA          NA myH1DataObject1updte<-generateNAsUsingSL(myH1DataObject1,                                           targetAphiaId = c(\"107254\"), validate = FALSE,                                          overwriteSampled=FALSE) myH1DataObject1updte$SA[,c(1:9,48:49)] #> Key: <SAid> #>      SAid   SSid  LEid SArecType SAseqNum SAparSequNum SAstratification #>     <num>  <int> <int>    <char>    <num>        <num>           <char> #> 1: 572813 227694    NA        SA        1           NA                N #>    SAstratumName SAspeCode SAtotalWtMes SAsampWtMes #>           <char>    <char>        <int>       <int> #> 1:             U    107254          276         276"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02d-update-SA-with-taxon-from-SL.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"02d Update SA with taxon from SL","text":"aim document show rename species code Sample (SA) table based Species list (SL) table using function updateSAwithTaxonFromSL() RDBEScore package.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02d-update-SA-with-taxon-from-SL.html","id":"load-the-package","dir":"Articles","previous_headings":"","what":"Load the package","title":"02d Update SA with taxon from SL","text":"","code":"library(RDBEScore)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02d-update-SA-with-taxon-from-SL.html","id":"prerequisit","dir":"Articles","previous_headings":"","what":"Prerequisit","title":"02d Update SA with taxon from SL","text":"first step need load example data. Good practice check RDBESDataObjects valid.","code":"# load an example dataset  # H1 directory dirH1 <- \"../tests/testthat/h1_v_20250211/\"  myObject <- createRDBESDataObject(input = dirH1) myObject <- filterAndTidyRDBESDataObject(myObject,                         fieldsToFilter =c(\"DEsampScheme\"),                         valuesToFilter = c(\"National Routine\"))  numOfRows <- 5 myObject[[\"SA\"]] <- head(myObject[[\"SA\"]],numOfRows) myObject <- findAndKillOrphans(myObject)  # Change SA species codes to Sprat(126425)  numOfRows <- nrow(myObject[[\"SA\"]]) myObject[[\"SA\"]]$SAspeCode[1:numOfRows] <- rep(\"126425\", numOfRows)  # Just keep the first row of the SL data myObject[[\"SL\"]] <- head( myObject[[\"SL\"]][myObject[[\"SL\"]]$SLspeclistName==\"ZW_1965_SpeciesList1\" &                  myObject[[\"SL\"]]$SLcatchFrac==\"Lan\",],1)  # Just keep the first row of the IS data that matches the remaining SLid mySLid = myObject[[\"SL\"]]$SLid myObject[[\"IS\"]] <- head(myObject[[\"IS\"]][myObject[[\"IS\"]]$SLid == mySLid,],1)  # Change IS species codes to Clupeidae(125464)  myObject[[\"IS\"]][,\"ISsppCode\"] <- as.integer(125464) myObject[[\"IS\"]][,\"IScommTaxon\"] <- as.integer(125464)  # check it is a valid RDBESobject validateRDBESDataObject(myObject, checkDataTypes = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02d-update-SA-with-taxon-from-SL.html","id":"a-closer-look-into-the-example-data-and-its-characteristics","dir":"Articles","previous_headings":"","what":"A closer look into the example data and its characteristics","title":"02d Update SA with taxon from SL","text":"example data hierarchy 1. contains single trip single haul. simplicity, restrict analysis tables SL, , SS SA ones handled functions behaviour want demonstrate. Examining print Species List table (SL) part SLspeclistName ZW_1965_SpeciesList can conclude targeted sampling landings Clupeidae (aphiaId 125464). single row part species list. Species Selection Table species list ZW_1965_SpeciesList1 catch category Lan part SA table corresponds SS table looked 125464 - Clupeidae. sample recorded 126425 - Clupea harengus part Clupeidae family. point helpful use renameSA function.","code":"myObject$SL[SLspeclistName=='ZW_1965_SpeciesList1'&SLcatchFrac=='Lan',] #> Key: <SLid> #>     SLid SLrecType  SLcou SLinst       SLspeclistName SLyear SLcatchFrac #>    <int>    <char> <char> <char>               <char>  <int>      <char> #> 1: 47870        SL     ZW   1051 ZW_1965_SpeciesList1   1965         Lan myObject[[\"IS\"]] #> Key: <ISid> #>     ISid  SLid ISrecType IScommTaxon ISsppCode #>    <int> <int>    <char>       <int>     <int> #> 1:  1001 47870        IS      125464    125464 myObject$SS[SSspecListName=='ZW_1965_SpeciesList1' & SScatchFra=='Lan',c(1,3,6,8,15,18)] #> Key: <SSid> #>        SSid  FOid  SLid SSrecType SScatchFra       SSspecListName #>       <int> <int> <int>    <char>     <char>               <char> #>   1: 225062 68983 47870        SS        Lan ZW_1965_SpeciesList1 #>   2: 225063 68984 47870        SS        Lan ZW_1965_SpeciesList1 #>   3: 225064 68985 47870        SS        Lan ZW_1965_SpeciesList1 #>   4: 225065 68986 47870        SS        Lan ZW_1965_SpeciesList1 #>   5: 225066 68987 47870        SS        Lan ZW_1965_SpeciesList1 #>  ---                                                              #> 725: 225786 69707 47870        SS        Lan ZW_1965_SpeciesList1 #> 726: 225787 69708 47870        SS        Lan ZW_1965_SpeciesList1 #> 727: 225788 69709 47870        SS        Lan ZW_1965_SpeciesList1 #> 728: 225789 69710 47870        SS        Lan ZW_1965_SpeciesList1 #> 729: 225790 69711 47870        SS        Lan ZW_1965_SpeciesList1 myObject$SA[,c(1,2,9,14,48,49)] #> Key: <SAid> #>      SAid   SSid SAspeCode SAcatchCat SAnoSampReason SAnonRespCol #>     <num>  <int>    <char>     <char>         <char>       <char> #> 1: 548860 225062    126425        Lan                             #> 2: 548861 225063    126425        Lan                             #> 3: 548862 225064    126425        Lan                             #> 4: 548863 225065    126425        Lan                             #> 5: 548864 225066    126425        Lan"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v02d-update-SA-with-taxon-from-SL.html","id":"rename-species-code-in-sa-table-using-sl-table-","dir":"Articles","previous_headings":"","what":"Rename species code in SA table using SL table.","title":"02d Update SA with taxon from SL","text":"looked fish Clupeidae family precise reading expected read fish species level accurate rank family. Function checking rank aphia id tables SA SL. aphia id SA table accurate SL table aphia ids family aphia id SA table renaming aphia id SL table. aphia Ids diffrent families function leaving primary value. opposite situation, SL table accurate rank SA table, function leaving primary value . SA results can see 126425 - Clupea harengus changed 125464 - Clupeidae. See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"myObjectnew<-updateSAwithTaxonFromSL(RDBESDataObject=myObject,                             validate=TRUE,                             verbose=TRUE,                             strict=TRUE) #> [1] \"Note that TE is NULL but this is allowed in an RDBESDataObject\" #> [2] \"Note that LO is NULL but this is allowed in an RDBESDataObject\" #> [3] \"Note that OS is NULL but this is allowed in an RDBESDataObject\" #> [4] \"Note that LE is NULL but this is allowed in an RDBESDataObject\" #> [1] \"Number of rows changed: 5\" myObjectnew$SA[,c(1,2,9,14,48,49)] #> Key: <SAid> #>      SAid   SSid SAspeCode SAcatchCat SAnoSampReason SAnonRespCol #>     <num>  <int>    <char>     <char>         <char>       <char> #> 1: 548860 225062    125464        Lan                             #> 2: 548861 225063    125464        Lan                             #> 3: 548862 225064    125464        Lan                             #> 4: 548863 225065    125464        Lan                             #> 5: 548864 225066    125464        Lan"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03a-Estimating-population-parameters-unbiased-estimator.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"03a Estimating population parameters: unbiased estimator","text":"aim document illustrate population parameters like total mean can estimated using estimMC(…) function. multi level multi stratum estimation can run estimate population total mean using doEstimationForAllStrata(…).","code":"library(RDBEScore)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03a-Estimating-population-parameters-unbiased-estimator.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"03a Estimating population parameters: unbiased estimator","text":"First ’ll load example data RDBES check ’s valid. ’s good idea check RDBESDataObjects valid manipulations perform.","code":"h1d <- H1Example validateRDBESDataObject(h1d, verbose = FALSE) h1d #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1430 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 311 #>  SL: 6 #>  IS: 25"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03a-Estimating-population-parameters-unbiased-estimator.html","id":"single-level-multiple-count-estimator","dir":"Articles","previous_headings":"","what":"Single level Multiple Count Estimator","title":"03a Estimating population parameters: unbiased estimator","text":"Let’s first estimate last level values single FMid estimation done one top level record estimMC(…) function actually core estimation functions running multiple levels well. implementation details see: Variance calculation functions using “Multiple count” estimator","code":"FMidSel <- \"4033243\" BV <- h1d$BV[h1d$BV$FMid == FMidSel,]  estimMC(as.numeric(BV$BVvalueMeas),         BV$BVnumSamp,         BV$BVnumTotal,          method=unique(BV$BVselectMeth)) #> $est.total #> [1] 4 #>  #> $est.mean #> [1] 2 #>  #> $est.algorithm #> [1] \"Generalized Horvitz-Thompson aka Mutiple-Count\" #>  #> $var.total #> [1] 0 #>  #> $var.mean #> [1] 0 #>  #> $var.algorithm #> [1] \"Sen-Yates-Grundy\" #>  #> $PI #>      [,1] [,2] #> [1,]  0.5  0.5 #> [2,]  0.5  0.5"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03a-Estimating-population-parameters-unbiased-estimator.html","id":"estimation-workflow","dir":"Articles","previous_headings":"","what":"Estimation workflow","title":"03a Estimating population parameters: unbiased estimator","text":"Estimation actually done RDBESEstObject generate RDBESDataObject using createRDBESEstObject(…). following example uses dataset resembles many ways real data ICES area 27.3.d.28.1 Estonian Baltic Trawling fleet 2022 sprat (Sprattus sprattus).dataset total landings commercial sampling data. data gone RDBES upload download procedure contains invalid data types also may validity problems. However fields estimation present valid. Total estimated SPR catch Q1: 361.259 tonnes Total reported SPR catch Q1: 396.21 tonnes total estimated catch (est.total) first quarter near total actual catch. table gives estimates month standard errors (se.total). (est.mean) standard error (SE, se.mean) estimated mean catch sprat per week given month. can see table first 2 months estimates se.total line estimate March somehow big discrepancy. Estmation results 1st quarter months (stratums). Total estimated catch (est.total) standard error (se.total) well estimated mean se vessels given. addition actual total reported weights given. next sections use data R packages survey SDAResources converted RDBESDataObject demonstrate estimation procedure.","code":"H8ExampleEE1 #> Hierarchy 8 RDBESdataObject: #>  DE: 1 #>  SD: 1 #>  TE: 11 (SRSWOR: 2-3/4) #>  VS: 15 (SRSWR: 1-2/7-12) #>  LE: 15 (SRSWOR: 1/1) #>  SS: 15 (CENSUS: 1/1) #>  SA: 15 (SRSWOR: 1/794-14268) #>  BV: 3995 (CENSUS: 16-100/16-100) #>  VD: 7 #>  SL: 1 #>  IS: 2 #>  CL: 71 #>  CE: 132 #to check data types validateRDBESDataObject(H8ExampleEE1, checkDataTypes = TRUE, strict = FALSE) #create the estimation object to estimate values on the SA table estData <- createRDBESEstObject(H8ExampleEE1, 8, \"SA\" )  #the SAsampWtMes is in grammes let's estimate in tonnes estData$SAsampWtMes <- estData$SAsampWtMes / (1000 * 1000)  results <- doEstimationForAllStrata(estData, \"SAsampWtMes\")  #let's compare the results from 1st quarter with actual catches from Q1 CL <- H8ExampleEE1$CL Q1months <- c(\"January\", \"February\", \"March\") Q1results <- results[results$recType== \"TE\" &                      results$stratumName %in% Q1months,] cat(\"Total estimated SPR catch in Q1: \",     round(sum(Q1results$est.total), 3),  \"tonnes\\n\") #CLoffWeight is in Kg, converting to tonnes cat(\"Total reported  SPR catch in Q1: \",      sum(CL[CL$CLquar ==1, \"CLoffWeight\"])/1000, \"tonnes\") #let's add the actual totals Q1results$actualTotals <- c(February=124.829,January=119.108, March=152.273) #there are 4 weeks and 2 are sampled in TE so in this case the total is:  #mean * 4  Q1results$est.mean * 4 #> [1] 209.27146 118.99242  32.99554 columns <- c(\"recType\",\"stratumName\",\"actualTotals\",              \"est.total\", \"se.total\", \"est.mean\", \"se.mean\") captionText <- paste(\"Estmation results for 1st quarter by months (stratums).\",                      \"Total estimated catch (est.total) and standard error (se.total)\",                      \" as well as estimated mean with se for vessels are given.\",                      \"In addition actual total reported weights are given.\") knitr::kable(Q1results[columns], digits=3, caption=captionText)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03a-Estimating-population-parameters-unbiased-estimator.html","id":"estimation-on-multiple-strata","dir":"Articles","previous_headings":"Estimation workflow","what":"Estimation on Multiple Strata","title":"03a Estimating population parameters: unbiased estimator","text":"SDAResources use agstrat data stratified random sample size 300 1992 U.S. Census Agriculture agpop data. datset converted RDBESDataObject Pckg_SDAResources_agstrat_H1 Table VS SA contain core information used Lohr examples 3.2 3.6. Table VS stratified VSstratumName set region, VSnumberSampled VSnumberTotal set according agstrat VSunitName set combination original county, state, region agstrat row numbers. Table SA contains variable measured acres92 , set 1. Table DE, SD, FT FO dummy tables inserted meet RDBES model requirements aggregated estimation tests. Values mandatory fields dummy values taken onboard programme, exception * - set CENSUS - ignored estimation. BV, FM, CL, CE provided. SL VD subset essential rows. interpret results example? est.total - total SAsampWtMes sampled weight per vessel per year stratum est.mean - mean SAsampWtMes per vessel per year stratum (.e much total one ship average contributed sampled total stratum) can explore result see estimated total, mean etc. stratums.","code":"agstrat_H1 <- Pckg_SDAResources_agstrat_H1 #valid agstrat_H1 #> Hierarchy 1 RDBESdataObject: #>  DE: 1 #>  SD: 1 #>  VS: 300 (SRSWOR: 21-135/220-1382) #>  FT: 300 (CENSUS: 1/1) #>  FO: 300 (CENSUS: 1/1) #>  SS: 300 (CENSUS: 1/1) #>  SA: 300 (CENSUS: 1/1) #>  FM: 0 #>  BV: 0 #>  VD: 311 #>  SL: 1 #>  IS: 1 #create the estimation object to estimate values on the SA table estObj <- createRDBESEstObject(agstrat_H1, 1, \"SA\")   res <- doEstimationForAllStrata(estObj, \"SAsampWtMes\")  # Get the estimated total and mean  for \"SAsampWtMes\" for the VS stratum \"NC\" columns2Get <- c(\"est.total\",\"est.mean\", \"se.total\",\"se.mean\") round(unlist(res[res$recType == \"VS\" & res$stratumName == \"NC\" ,columns2Get]),1) #>   est.total    est.mean    se.total     se.mean  #> 316731379.7    300504.2  16977399.2     16107.6"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03a-Estimating-population-parameters-unbiased-estimator.html","id":"two-level-estimation-on-single-stratum","dir":"Articles","previous_headings":"Estimation workflow","what":"Two Level Estimation on Single Stratum","title":"03a Estimating population parameters: unbiased estimator","text":"survey use apiclus2 Academic Performance Index computed California schools based standardised testing students. data sets contain information schools least 100 students various probability samples data. design 2-stage cluster sampling clusters unequal sizes SRS 40 districts selected (psus) 757 districts population 5 schools (min 1) selected district (ssus) datset converted RDBESDataObject Pckg_survey_apiclus2_H1 1 DE row DEstratumName == “Pckg_SDAResources_apiclus2_H1”, 1 child SD row, 40 child rows VS (40 districts), VSnumberTotal 757, VSnumberSampled 40, 126 child rows FT (126 schools finally observed), associated cluster (dname), FTnumberTotal number schools district, FTnumberSAmpled 1…5 schools sampled, tables FO, SS just 1:1 links final data (SA), SA SAsampleWeightMeasured enroll (NB! 4 NAs) interpret results example? est.total - total caught weight per vessel per year est.mean - mean caught weight per vessel per year (.e much total one ship average contributed total catch per year) SE values just standard errors total mean respectively. See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"apiclus2_H1 <- Pckg_survey_apiclus2_H1 # valid H1 apiclus2_H1 #> Hierarchy 1 RDBESdataObject: #>  DE: 1 #>  SD: 1 #>  VS: 40 (SRSWOR: 40/757) #>  FT: 126 (SRSWOR: 1-5/1-72) #>  FO: 126 (CENSUS: 10/10) #>  SS: 126 (CENSUS: 1/1) #>  SA: 126 (CENSUS: 1/1) #>  FM: 0 #>  BV: 0 #>  VD: 311 #>  SL: 1 #>  IS: 1 #create the estimation object to estimate values on the SA table estObj <- createRDBESEstObject(apiclus2_H1, 1, \"SA\")      # Run estimation on total measured weight: SAtotalWtMes res <- doEstimationForAllStrata(estObj, \"SAtotalWtMes\")  # Get the estimated total and mean  for \"SAtotalWtMes\" for the VS columns2Get <- c(\"est.total\",\"est.mean\", \"se.total\",\"se.mean\") round(unlist(res[res$recType == \"VS\" ,columns2Get]),1) #> est.total  est.mean  se.total   se.mean  #> 2639272.9    3486.5  798295.7    1054.6"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03b-Estimating-population-parameters-ratio-estimator.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"03b Estimating population parameters: ratio estimator","text":"aim document demonstrate estimate population parameters RDBESDataObjects.","code":"library(RDBEScore)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03b-Estimating-population-parameters-ratio-estimator.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"03b Estimating population parameters: ratio estimator","text":"’ll use example data RDBES. data ’s good idea check RDBESDataObjects valid manipulations perform.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03b-Estimating-population-parameters-ratio-estimator.html","id":"estimation-workflow","dir":"Articles","previous_headings":"","what":"Estimation workflow","title":"03b Estimating population parameters: ratio estimator","text":"Estimation actually done RDBESEstObject generate RDBESDataObject using createRDBESEstObject(…). following example uses dataset resembles many ways real data ICES area 27.3.d.28.1 Estonian Baltic Trawling fleet 2022 sprat (Sprattus sprattus).dataset total landings commercial sampling data. data gone RDBES upload download procedure contains invalid data types also may validity problems. However fields estimation present valid.","code":"H8ExampleEE1 #> Hierarchy 8 RDBESdataObject: #>  DE: 1 #>  SD: 1 #>  TE: 11 (SRSWOR: 2-3/4) #>  VS: 15 (SRSWR: 1-2/7-12) #>  LE: 15 (SRSWOR: 1/1) #>  SS: 15 (CENSUS: 1/1) #>  SA: 15 (SRSWOR: 1/794-14268) #>  BV: 3995 (CENSUS: 16-100/16-100) #>  VD: 7 #>  SL: 1 #>  IS: 2 #>  CL: 71 #>  CE: 132 #to check data types validateRDBESDataObject(H8ExampleEE1, checkDataTypes = TRUE, strict = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v03b-Estimating-population-parameters-ratio-estimator.html","id":"simple-estimation-example","dir":"Articles","previous_headings":"Estimation workflow","what":"Simple Estimation Example","title":"03b Estimating population parameters: ratio estimator","text":"simplest case estimation need RDBESDataObject CS tables CL table. following example estimate total number sprat caught area 27.3.d.28.1 gear OTM_SPF_16-31_0_0 first last quarter year. important thing estimation get strata CS CL tables. means want take samples area, gear species. Exactly done depends upper lower hierarchy used sampling stratified. following example using lower hierarchy C meaning extracting BV data biological data. estimate total number sprat caught area 27.3.d.28.1 gear OTM_SPF_16-31_0_0 first quarter year need use function doBVestimCANUM(…). function takes biological data table, columns added final result class breaks estimation. function returns table estimates given class breaks. allowed class units “Ageyears”, “Lenghtmm” “Weightg”. class breaks number classes break data . function return estimates class. addColumns parameter vector column names added final result. columns present biological data table. minimum one column (sum column case “sumCLoffWeight”) required. function return estimates unique value columns. estimates several Quarters result biolCL table creation done last quarter year. columns table can added final result. output broken unique values columns. output table enough populate classic Intercatch data call table. See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"#From the commertial landings table we need to get the total weight of the catches CLfieldstoSum <- c(\"CLoffWeight\") #get the first quarter data from CS  strataListCS <- list(LEarea=\"27.3.d.28.1\",                      LEmetier6 = \"OTM_SPF_16-31_0_0\",                      TEstratumName = month.name[1:3],                     SAspeCodeFAO = \"SPR\")  #get the first quarter data from CL table strataListCL <- list(CLarea=\"27.3.d.28.1\",                      CLquar = 1,                      CLmetier6 = \"OTM_SPF_16-31_0_0\",                      CLspecFAO = \"SPR\")  #we are using the lower hierarchy C meaning that we are extracting the BV data #as the biological data biolCLQ1 <- addCLtoLowerCS(H8ExampleEE1, strataListCS, strataListCL,                          combineStrata =T, lowerHierarchy = \"C\",                          CLfields = CLfieldstoSum) #> Warning in getLowerTableSubsets(strataListCS, tblName, rdbes, combineStrata = combineStrata): TEstratumName is collapsed in the result into: \"January|February|March\" lenCANUMQ1 <- doBVestimCANUM(biolCLQ1, c(\"sumCLoffWeight\"),              classUnits = \"Lengthmm\",              classBreaks = seq(70,130,10),              verbose = FALSE)  lenCANUMQ1 #> Key: <sumCLoffWeight> #>    sumCLoffWeight   Group WeightgMean WeightgLen LengthmmMean lenMeas #>             <num>  <fctr>       <num>      <int>        <num>   <int> #> 1:         396210 120-130   12.230303         66    122.21212     433 #> 2:         396210 110-120    9.111348        141    113.34752     433 #> 3:         396210   80-90    3.628125         32     84.87500     433 #> 4:         396210 100-110    7.500621        161    104.13043     433 #> 5:         396210  90-100    4.985185         27     93.25926     433 #> 6:         396210    130+   13.650000          4    132.50000     433 #> 7:         396210   70-80    2.500000          2     75.50000     433 #>    targetMeas plusGroup  propSample  WeightIndex WeightIndexSum   TWCoef #>         <int>     <num>       <num>        <num>          <num>    <num> #> 1:        433       130 0.152424942 1.864203e-03    0.008336721 47525882 #> 2:        433       130 0.325635104 2.966975e-03    0.008336721 47525882 #> 3:        433       130 0.073903002 2.681293e-04    0.008336721 47525882 #> 4:        433       130 0.371824480 2.788915e-03    0.008336721 47525882 #> 5:        433       130 0.062355658 3.108545e-04    0.008336721 47525882 #> 6:        433       130 0.009237875 1.260970e-04    0.008336721 47525882 #> 7:        433       130 0.004618938 1.154734e-05    0.008336721 47525882 #>      totWeight     totNum #>          <num>      <num> #> 1:  88597.9035  7244129.9 #> 2: 141008.0855 15476095.6 #> 3:  12743.0830  3512305.4 #> 4: 132545.6247 17671286.5 #> 5:  14773.6346  2963507.7 #> 6:   5992.8711   439038.2 #> 7:    548.7977   219519.1 strataListCS <- list(LEarea=\"27.3.d.28.1\",                      LEmetier6 = \"OTM_SPF_16-31_0_0\",                      TEstratumName = month.name[10:12], #the last 3 months of the year                     SAspeCodeFAO = \"SPR\")  strataListCL <- list(CLarea=\"27.3.d.28.1\",                      CLquar = 4,                      CLmetier6 = \"OTM_SPF_16-31_0_0\",                      CLspecFAO = \"SPR\")  biolCLQ4 <- addCLtoLowerCS(H8ExampleEE1, strataListCS, strataListCL,                          combineStrata =T, lowerHierarchy = \"C\",                          CLfields = CLfieldstoSum) #> Warning in getLowerTableSubsets(strataListCS, tblName, rdbes, combineStrata = combineStrata): TEstratumName is collapsed in the result into: \"October|November|December\" #lets combine the two quarters into one table biolCL <- rbind(biolCLQ1, biolCLQ4) #this alllows to add extra columns into the final result  addCols <- c(names(strataListCS),              names(strataListCL),              paste0('sum', CLfieldstoSum))  ageCANUM <- doBVestimCANUM(biolCL, addCols,              classUnits = \"Ageyear\",              classBreaks = 1:8,              verbose = FALSE)  ageCANUM #> Key: <LEarea, LEmetier6, TEstratumName, SAspeCodeFAO, CLarea, CLquar, CLmetier6, CLspecFAO, sumCLoffWeight> #>          LEarea         LEmetier6             TEstratumName SAspeCodeFAO #>          <char>            <char>                    <char>       <char> #>  1: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  2: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  3: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  4: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  5: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  6: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  7: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  8: 27.3.d.28.1 OTM_SPF_16-31_0_0    January|February|March          SPR #>  9: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #> 10: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #> 11: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #> 12: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #> 13: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #> 14: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #> 15: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #> 16: 27.3.d.28.1 OTM_SPF_16-31_0_0 October|November|December          SPR #>          CLarea CLquar         CLmetier6 CLspecFAO sumCLoffWeight  Group #>          <char>  <num>            <char>    <char>          <num> <fctr> #>  1: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210      7 #>  2: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210      3 #>  3: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210      5 #>  4: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210      1 #>  5: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210      6 #>  6: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210      2 #>  7: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210     8+ #>  8: 27.3.d.28.1      1 OTM_SPF_16-31_0_0       SPR         396210      4 #>  9: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451      2 #> 10: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451      3 #> 11: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451      1 #> 12: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451      4 #> 13: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451     8+ #> 14: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451      5 #> 15: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451      7 #> 16: 27.3.d.28.1      4 OTM_SPF_16-31_0_0       SPR         225451      6 #>     WeightgMean WeightgLen LengthmmMean lenMeas targetMeas plusGroup propSample #>           <num>      <int>        <num>   <int>      <int>     <int>      <num> #>  1:   11.500000          7    125.57143     433        433         8 0.01616628 #>  2:    9.051695        118    112.49153     433        433         8 0.27251732 #>  3:   10.204167         48    120.04167     433        433         8 0.11085450 #>  4:    3.943396         53     87.01887     433        433         8 0.12240185 #>  5:   10.811111          9    122.88889     433        433         8 0.02078522 #>  6:    7.529341        167    104.28743     433        433         8 0.38568129 #>  7:   10.040000          5    121.80000     433        433         8 0.01154734 #>  8:   13.750000         26    118.07692     433        433         8 0.06004619 #>  9:   10.383740        123    111.73171     378        356         8 0.34550562 #> 10:   10.913415         82    114.18293     378        356         8 0.23033708 #> 11:    9.576316         38    107.42105     378        356         8 0.10674157 #> 12:   12.093182         44    119.25000     378        356         8 0.12359551 #> 13:   11.362500         24    119.87500     378        356         8 0.06741573 #> 14:   12.088462         26    121.80769     378        356         8 0.07303371 #> 15:   14.883333          6    131.16667     378        356         8 0.01685393 #> 16:   12.746154         13    123.46154     378        356         8 0.03651685 #>      WeightIndex WeightIndexSum   TWCoef  totWeight     totNum #>            <num>          <num>    <num>      <num>      <num> #>  1: 0.0001859122    0.008336721 47525882   8835.643   768316.8 #>  2: 0.0024667436    0.008336721 47525882 117234.168 12951626.1 #>  3: 0.0011311778    0.008336721 47525882  53760.224  5268458.1 #>  4: 0.0004826790    0.008336721 47525882  22939.745  5817255.8 #>  5: 0.0002247113    0.008336721 47525882  10679.604   987835.9 #>  6: 0.0029039261    0.008336721 47525882 138011.650 18329843.8 #>  7: 0.0001159353    0.008336721 47525882   5509.929   548797.7 #>  8: 0.0008256351    0.008336721 47525882  39239.037  2853748.1 #>  9: 0.0035876404    0.010983427 20526471  73641.599  7092011.2 #> 10: 0.0025137640    0.010983427 20526471  51598.706  4728007.5 #> 11: 0.0010221910    0.010983427 20526471  20981.975  2191027.9 #> 12: 0.0014946629    0.010983427 20526471  30680.156  2536979.6 #> 13: 0.0007660112    0.010983427 20526471  15723.508  1383807.1 #> 14: 0.0008828652    0.010983427 20526471  18122.107  1499124.3 #> 15: 0.0002508427    0.010983427 20526471   5148.915   345951.8 #> 16: 0.0004654494    0.010983427 20526471   9554.035   749562.2"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v04-Create-IC-format-from-estimation-results.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"04 Create IC format from estimation results","text":"document shows take output doEstimationForAllStrata() format InterCatch format. done using function exportEstimationResultsToInterCatchFormat() RDBEScore package.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v04-Create-IC-format-from-estimation-results.html","id":"load-the-package","dir":"Articles","previous_headings":"","what":"Load the package","title":"04 Create IC format from estimation results","text":"","code":"library(RDBEScore)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v04-Create-IC-format-from-estimation-results.html","id":"step-1-load-and-prepare-some-test-data","dir":"Articles","previous_headings":"","what":"Step 1) load and prepare some test data","title":"04 Create IC format from estimation results","text":"","code":"# load an example dataset  # H1 directory dirH1 <- \"../tests/testthat/h1_v_20250211/\"  fixProbs <- function(myH1RawObject){    # Edit our data so that we have SRSWOR on each level and calculate the probs   myH1RawObject[[\"VS\"]]$VSselectMeth <- \"SRSWOR\"   myH1RawObject[[\"VS\"]]$VSincProb <- myH1RawObject[[\"VS\"]]$VSnumSamp / myH1RawObject[[\"VS\"]]$VSnumTotal   myH1RawObject[[\"VS\"]]$VSselProb <- 1/myH1RawObject[[\"VS\"]]$VSnumTotal   myH1RawObject[[\"FT\"]]$FTselectMeth <- \"SRSWOR\"   myH1RawObject[[\"FT\"]]$FTincProb <- myH1RawObject[[\"FT\"]]$FTnumSamp / myH1RawObject[[\"FT\"]]$FTnumTotal   myH1RawObject[[\"FT\"]]$FTselProb <- 1/myH1RawObject[[\"FT\"]]$FTnumTotal   myH1RawObject[[\"FO\"]]$FOselectMeth <- \"SRSWOR\"   myH1RawObject[[\"FO\"]]$FOincProb <- myH1RawObject[[\"FO\"]]$FOnumSamp / myH1RawObject[[\"FO\"]]$FOnumTotal   myH1RawObject[[\"FO\"]]$FOselProb <- 1/myH1RawObject[[\"FO\"]]$FOnumTotal   myH1RawObject[[\"SS\"]]$SSselectMeth <- \"SRSWOR\"   myH1RawObject[[\"SS\"]]$SSincProb <- myH1RawObject[[\"SS\"]]$SSnumSamp / myH1RawObject[[\"SS\"]]$SSnumTotal   myH1RawObject[[\"SS\"]]$SSselProb <- 1/myH1RawObject[[\"SS\"]]$SSnumTotal   myH1RawObject[[\"SA\"]]$SAselectMeth <- \"SRSWOR\"   myH1RawObject[[\"SA\"]]$SAincProb <- myH1RawObject[[\"SA\"]]$SAnumSamp / myH1RawObject[[\"SA\"]]$SAnumTotal   myH1RawObject[[\"SA\"]]$SAselProb <- 1/myH1RawObject[[\"SA\"]]$SAnumTotal    # Update our test data with some random sample measurements (it didn't include these)   # set the random seed   set.seed(1234)   myH1RawObject[['SA']]$SAsampWtLive <- round(runif(n=nrow(myH1RawObject[['SA']]),min = 1, max = 100))   myH1RawObject[['SA']]$SAsampWtMes <- round(runif(n=nrow(myH1RawObject[['SA']]),min = 1, max = 100))    myH1RawObject  }   ## Step 1) load and prepare some test data myH1RawObject <- createRDBESDataObject(input  = dirH1) #Filter our data for WGRDBES-EST TEST 1, 1965, H1 myCatchFraction <- \"Lan\" mySpecies <- 1019159  myFields <- c(\"DEyear\",\"DEhierarchy\",\"DEsampScheme\",\"DEstratumName\",\"SAspeCode\",\"SScatchFra\") myValues <- c(1965,1,\"National Routine\",\"DE_stratum1_H1\",mySpecies,myCatchFraction) myH1RawObject <- filterRDBESDataObject(myH1RawObject,                                        fieldsToFilter = myFields,                                        valuesToFilter = myValues ) myH1RawObject <- findAndKillOrphans(myH1RawObject) myH1 <- fixProbs(myH1RawObject)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v04-Create-IC-format-from-estimation-results.html","id":"step-2-estimate-for-live-weight-for-the-data","dir":"Articles","previous_headings":"","what":"Step 2) Estimate for live weight for the data","title":"04 Create IC format from estimation results","text":"","code":"myTestData <- createRDBESEstObject(myH1, 1, stopTable = \"SA\") # Get rid of rows that don't have an SA row myTestData <- myTestData[!is.na(myTestData$SAid),] # Estimate using the data myStrataResults <- doEstimationForAllStrata(myTestData, \"SAsampWtLive\")"},{"path":"https://ices-tools-dev.github.io/RDBEScore/articles/v04-Create-IC-format-from-estimation-results.html","id":"step-3-export-the-results-to-intercatch-format-just-hi-and-si-for-this-data","dir":"Articles","previous_headings":"","what":"Step 3) Export the results to InterCatch format (just HI and SI for this data)","title":"04 Create IC format from estimation results","text":"See also package vignettes: v01a data import v01b manipulating rdbesdataobjects v02a generating probabilities v02b Generating zeros species observed v02c Generating NAs species targeted sampling v02d update SA taxon SL v03a Estimating population parameters unbiased estimator v03b Estimating population parameters ratio estimator v04 Create IC format estimation results #END","code":"# Get our estimated values for the PSU psuEstimates <- myStrataResults[myStrataResults$recType == \"VS\",]  # This is the data we will export to IC format dataToOutput <- data.frame(Country = myH1[[\"SD\"]]$SDctry,                            Year = myH1[[\"DE\"]]$DEyear,                            SeasonType = NA,                            Season = NA,                            Fleet= NA,                            AreaType = \"Stratum\",                            FishingArea = psuEstimates$stratumName,                            DepthRange = \"NA\",                            Species = mySpecies ,                            Stock = mySpecies,                            CatchCategory = substr(myCatchFraction, 1, 1),                            ReportingCategory = \"A\",                            Usage = \"H\",                            SamplesOrigin = \"O\",                            UnitCATON = \"kg\",                            CATON = psuEstimates$est.total/1000.0,                            varCATON = psuEstimates$var.total/1000000.0,                            Sex = \"NA\",                            PlusGroup = \"NA\",                            MeanWeight = -9,                            unitMeanWeight = \"kg\",                            unitCANUM = \"n\",                            UnitAgeOrLength = \"year\",                            NumberCaught = -9,                            MeanWeight = -9,                            CANUMtype = \"Age\",                            AgeLength = c(1,1,1,2,2,2,3,3,3),                            NumSamplesAge = c(300,300,300,200,200,200,100,100,100))  tempIC <- exportEstimationResultsToInterCatchFormat(dataToOutput) print(tempIC) #>  [1] \"HI,ZW,1965,NA,NA,NA,Stratum,VS_stratum1,NA,NA,-9,NA\"                                                                          #>  [2] \"SI,ZW,1965,NA,NA,NA,Stratum,VS_stratum1,NA,1019159,1019159,L,A,NA,H,O,NA,kg, 4835.556,-9,3006072,NA,NA,NA\"                    #>  [3] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum1,NA,1019159,1019159,L,A,NA,Age,1,NA,-9,-9,-9,300,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #>  [4] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum1,NA,1019159,1019159,L,A,NA,Age,2,NA,-9,-9,-9,200,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #>  [5] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum1,NA,1019159,1019159,L,A,NA,Age,3,NA,-9,-9,-9,100,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #>  [6] \"HI,ZW,1965,NA,NA,NA,Stratum,VS_stratum2,NA,NA,-9,NA\"                                                                          #>  [7] \"SI,ZW,1965,NA,NA,NA,Stratum,VS_stratum2,NA,1019159,1019159,L,A,NA,H,O,NA,kg,15217.778,-9,8936549,NA,NA,NA\"                    #>  [8] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum2,NA,1019159,1019159,L,A,NA,Age,1,NA,-9,-9,-9,300,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #>  [9] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum2,NA,1019159,1019159,L,A,NA,Age,2,NA,-9,-9,-9,200,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #> [10] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum2,NA,1019159,1019159,L,A,NA,Age,3,NA,-9,-9,-9,100,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #> [11] \"HI,ZW,1965,NA,NA,NA,Stratum,VS_stratum3,NA,NA,-9,NA\"                                                                          #> [12] \"SI,ZW,1965,NA,NA,NA,Stratum,VS_stratum3,NA,1019159,1019159,L,A,NA,H,O,NA,kg,10311.111,-9,8937750,NA,NA,NA\"                    #> [13] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum3,NA,1019159,1019159,L,A,NA,Age,1,NA,-9,-9,-9,300,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #> [14] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum3,NA,1019159,1019159,L,A,NA,Age,2,NA,-9,-9,-9,200,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\" #> [15] \"SD,ZW,1965,NA,NA,NA,Stratum,VS_stratum3,NA,1019159,1019159,L,A,NA,Age,3,NA,-9,-9,-9,100,-9,kg,n,year,NA,NA,-9,-9,-9,-9,-9,-9\""},{"path":"https://ices-tools-dev.github.io/RDBEScore/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Colin Millar. Maintainer.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c, c) c=, person, \"richard.meitern@ut.ee\" e=, c) c=, person, \"nuno.prista@slu.se\" e=, c) c=, person, \"nicholas.carey@gov.scot\") e=, person, \"Petri.Sarvamaa@luke.fi\") e=, person, \"kih@aqua.dtu.dk\") e=, person, \"karolina.mollagazi@wur.nl\") e=, person, \"julia.wischnewski@thuenen.de\") e=, person, \"acfernandes@ipma.pt\") e=, person, \"kkrakowka@mir.gdynia.pl\") e=, person, \"msuska@mir.gdynia.pl\") e=, person, \"nicolas.goni@luke.fi\") e=, person, \"annica.isaksson.de.groote@slu.se\") e=, person, \"johnathan.ball@cefas.co.uk\") e=, person, \"Jonathan.Rault@ifremer.fr\") e=, person, \"antti.sykko@luke.fi\") e=, person, \"Liz.Clarke@gov.scot\") e=, person, \"chun.chen@wur.nl\") e=, person, \"hongru.zhai@slu.se\") e=, person, \"eros.quesada@slu.se\") e=, person, \"jostou@aqua.dtu.dk\") e=, person, \"ana.ribeirosantos@cefas.co.uk\") e=, person, \"jose.castro@ieo.es\") e=, person, ) e=\" (2025). RDBEScore: Functions ICES Regional Database Estimation System (RDBES). R package version 0.3.5, https://github.com/ices-tools-dev/RDBEScore.","code":"@Manual{,   title = {RDBEScore: Functions for the ICES Regional Database and Estimation System (RDBES)},   author = {{c} and comment = c) and {person} and email = \"richard.meitern@ut.ee\" and comment = c) and {person} and email = \"nuno.prista@slu.se\" and comment = c) and {person} and email = \"nicholas.carey@gov.scot\") and {person} and email = \"Petri.Sarvamaa@luke.fi\") and {person} and email = \"kih@aqua.dtu.dk\") and {person} and email = \"karolina.mollagazi@wur.nl\") and {person} and email = \"julia.wischnewski@thuenen.de\") and {person} and email = \"acfernandes@ipma.pt\") and {person} and email = \"kkrakowka@mir.gdynia.pl\") and {person} and email = \"msuska@mir.gdynia.pl\") and {person} and email = \"nicolas.goni@luke.fi\") and {person} and email = \"annica.isaksson.de.groote@slu.se\") and {person} and email = \"johnathan.ball@cefas.co.uk\") and {person} and email = \"Jonathan.Rault@ifremer.fr\") and {person} and email = \"antti.sykko@luke.fi\") and {person} and email = \"Liz.Clarke@gov.scot\") and {person} and email = \"chun.chen@wur.nl\") and {person} and email = \"hongru.zhai@slu.se\") and {person} and email = \"eros.quesada@slu.se\") and {person} and email = \"jostou@aqua.dtu.dk\") and {person} and email = \"ana.ribeirosantos@cefas.co.uk\") and {person} and email = \"jose.castro@ieo.es\") and {person} and email = \"Jessica.Craig@gov.scot\") )},   year = {2025},   note = {R package version 0.3.5},   url = {https://github.com/ices-tools-dev/RDBEScore}, }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"rdbescore","dir":"","previous_headings":"","what":"Functions for the ICES Regional Database and Estimation System (RDBES)","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"RDBEScore provides functions work Regional DataBase Estimation System (RDBES). implemented R package available  GitHub","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"recent production version package can installed ICES tools (production). Theese tools operational maintained ICES Secretariat. updated version RDBEScore can installed GitHub using install_github command remotes package:","code":"install.packages(\"RDBEScore\", repos = c(\"https://ices-tools-prod.r-universe.dev\", \"https://cloud.r-project.org\")) library(remotes)  install_github(\"ices-tools-dev/RDBEScore\", build_vignettes = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"summary package see following Vignettes:","code":"browseVignettes(package = \"RDBEScore\")"},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"Regional Database & Estimation System: https://sboxrdbes.ices.dk/ Working Group Governance Regional Database & Estimation System: https://www.ices.dk/community/groups/Pages/WGRDBESGOV.aspx Working Group Estimation RDBES data model (WGRDBES-EST): https://github.com/ices-tools-dev/RDBEScore/blob/main/WGRDBES-EST/references/WGRDBES-EST%20Resolutions.pdf see also: https://github.com/ices-tools-dev/RDBEScore/tree/main/WGRDBES-EST/references","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"rdbescore-development","dir":"","previous_headings":"","what":"RDBEScore (Development)","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"RDBEScore developed openly GitHub. Feel free open issue encounter problems suggestions future versions. current development version can installed using: installation fails due R CMD, alternative option can used","code":"library(remotes) install_github(\"ices-tools-dev/RDBEScore@dev\") library(remotes) install_github(\"ices-tools-dev/RDBEScore@dev\", build = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"on-datatable-usage","dir":"","previous_headings":"","what":"On data.table usage","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"Objects type data.table passed parameters copied modification. example: Now invocations function SL tables alter original copy.","code":"function zeroIds(sl) {   sl <- data.table::copy(sl)   sl[,SLid:=0]   sl }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"precommit-hook-framework","dir":"","previous_headings":"","what":"Precommit-hook framework","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"adhering package styling guides advisable use precommit checks developing. order run lintr styler (etc) committing code, follow instructions following address: https://github.com/lorenzwalthert/precommit#installation Check python3 installed install necessary Run pip install Install R precommit package Run root git repository. Running git commit run various checks automatically. See config file checks.","code":"pip3 install pre-commit --user install.packages(\"precommit\") library(precommit) precommit::use_precommit()"},{"path":"https://ices-tools-dev.github.io/RDBEScore/index.html","id":"building-binary-packages","dir":"","previous_headings":"","what":"Building binary packages","title":"Functions for the ICES Regional Database and Estimation System (RDBES)","text":"Building binary packages can achieved running following commands. Note replace . relative path project necessary. Also operating systems, Rcmd.exe called Rcmd Rscript.exe Rcmd respectively. R-studio also button build - tab: -> Build Binary Package builds binary package.","code":"Rscript.exe -e \"roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))\" Rcmd.exe INSTALL --build --preclean ."},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/DefaultFileNames.html","id":null,"dir":"Reference","previous_headings":"","what":"The default files names when you download data from the RDBES. — DefaultFileNames","title":"The default files names when you download data from the RDBES. — DefaultFileNames","text":"default files names download data RDBES.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/DefaultFileNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default files names when you download data from the RDBES. — DefaultFileNames","text":"","code":"DefaultFileNames"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/DefaultFileNames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The default files names when you download data from the RDBES. — DefaultFileNames","text":"list containing default file names RDBES table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/DefaultFileNames.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The default files names when you download data from the RDBES. — DefaultFileNames","text":"https://rdbes.ices.dk/","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H1Example.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset containing test RDBES data for H1 in the RDBESDataObject structure — H1Example","title":"A dataset containing test RDBES data for H1 in the RDBESDataObject structure — H1Example","text":"dataset containing test RDBES data H1 RDBESDataObject structure","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H1Example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset containing test RDBES data for H1 in the RDBESDataObject structure — H1Example","text":"","code":"H1Example"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H1Example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset containing test RDBES data for H1 in the RDBESDataObject structure — H1Example","text":"list containing entries required H1 RDBES data: DE Design data table SD Sampling Details data table VS Vessel Selection data table FT Fishing Trip data table FO Fishing Operation data table SS Species Selection data table SA Sample data table FM Frequency Measure data table BV Biological Variable data table VD Vessel Details data table SL Species List data table Individual Species table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H5Example.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset containing test RDBES data for H5 in the RDBESDataObject structure — H5Example","title":"A dataset containing test RDBES data for H5 in the RDBESDataObject structure — H5Example","text":"dataset containing test RDBES data H5 RDBESDataObject structure","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H5Example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset containing test RDBES data for H5 in the RDBESDataObject structure — H5Example","text":"","code":"H5Example"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H5Example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset containing test RDBES data for H5 in the RDBESDataObject structure — H5Example","text":"list containing entries required H5 RDBES data: DE Design data table SD Sampling Details data table FT Fishing Trip data table OS Onshore Event data table LE Landing Event data table SS Species Selection data table SA Sample data table FM Frequency Measure data table BV Biological Variable data table VD Vessel Details data table SL Species List data table Individual Species table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H7Example.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset containing test RDBES data for H7 in the RDBESDataObject structure — H7Example","title":"A dataset containing test RDBES data for H7 in the RDBESDataObject structure — H7Example","text":"dataset passed RDBES upload checks, hence object might somewhat invalid, however resembles real data Estonian Market Sampling 2022 2 species","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H7Example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset containing test RDBES data for H7 in the RDBESDataObject structure — H7Example","text":"","code":"H7Example"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H7Example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset containing test RDBES data for H7 in the RDBESDataObject structure — H7Example","text":"list containing entries required H7 RDBES data: DE Design data table SD Sampling Details data table OS Onshore Sample data table LE Landing Event data table SS Species Selection data table SA Sample data table BV Biological Variable data table SL Species List data table Individual Species table #' @source Richard Meitern @ Estonian Marine Institute, 2025","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H8ExampleEE1.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset containing test RDBES data for H8 in the RDBESDataObject structure — H8ExampleEE1","title":"A dataset containing test RDBES data for H8 in the RDBESDataObject structure — H8ExampleEE1","text":"dataset passed RDBES upload checks, hence object might somewhat invalid, however resembles real data Estonian Baltic Trawling fleet 2022 sprat total landings commercial sampling","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H8ExampleEE1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset containing test RDBES data for H8 in the RDBESDataObject structure — H8ExampleEE1","text":"","code":"H8ExampleEE1"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/H8ExampleEE1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset containing test RDBES data for H8 in the RDBESDataObject structure — H8ExampleEE1","text":"list containing entries required H8 RDBES data: DE Design data table SD Sampling Details data table TE Temporal Event data table VS Vessel Selection data table LE Landing Event data table SS Species Selection data table SA Sample data table BV Biological Variable data table VD Vessel Details data table SL Species List data table Individual Species CL Commertial Landing data table CE Commertial Effort data table #' @source Richard Meitern @ Estonian Marine Institute, 2025","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_SDAResources_agstrat_H1.html","id":null,"dir":"Reference","previous_headings":"","what":"A RDBESDataObject converted from package SDAResources dataset agstrat — Pckg_SDAResources_agstrat_H1","title":"A RDBESDataObject converted from package SDAResources dataset agstrat — Pckg_SDAResources_agstrat_H1","text":"data set derived data(agstrat) used Lohr examples 3.2 3.6. Table VS stratified VSstratumName set agstrat$region, VSnumberSampled VSnumberTotal set according agstrat. VSunitName set combination original agstrat$county, agstrat$state, agstrat$region agstrat$agstrat row numbers. Table SA contains variable measured agstrat$acres92 SAtotalWeightMeasured, SAsampleWeightMeasured SAconversionFactorMeasLive set 1. Table DE, SD, FT FO dummy tables inserted meet RDBES model requirements aggregated estimation tests. Values mandatory fields dummy values taken onboard programme, exception selectionMethod set CENSUS. BV, FM, CL, CE provided. SL VD subset essential rows.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_SDAResources_agstrat_H1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A RDBESDataObject converted from package SDAResources dataset agstrat — Pckg_SDAResources_agstrat_H1","text":"","code":"Pckg_SDAResources_agstrat_H1"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_SDAResources_agstrat_H1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A RDBESDataObject converted from package SDAResources dataset agstrat — Pckg_SDAResources_agstrat_H1","text":"list containing entries required H1 RDBES data: DE Design data table. Contains dummy values exception selectionMethod set CENSUS SD Sampling Details data table. Contains dummy values VS Vessel Selection data table. Contains core information data(agstrat), VSstratumName set agstrat$region, VSnumberSampled VSnumberTotal set according agstrat, VSunitName set combination original agstrat$county, agstrat$state, agstrat$region agstrat$agstrat row numbers FT Fishing Trip data table. Contains dummy values FO Fishing Operation data table. Contains dummy values SS Species Selection data table. Contains dummy values SA Sample data table. Contains variable measured agstrat$acres92 SAtotalWeightMeasured, SAsampleWeightMeasured SAconversionFactorMeasLive set 1 FM Frequency Measure data table. provided BV Biological Variable data table. provided VD Vessel Details data table. Subset essential rows SL Species List data table. Subset essential rows Individual Species table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_SDAResources_agstrat_H1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A RDBESDataObject converted from package SDAResources dataset agstrat — Pckg_SDAResources_agstrat_H1","text":"https://CRAN.R-project.org/package=SDAResources","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apiclus2_H1.html","id":null,"dir":"Reference","previous_headings":"","what":"A Multi-Stage RDBESDataObject converted from package survey dataset apiclus2 — Pckg_survey_apiclus2_H1","title":"A Multi-Stage RDBESDataObject converted from package survey dataset apiclus2 — Pckg_survey_apiclus2_H1","text":"data set derived Academic Performance Index computed California schools based standardized testing students. original data sets contain information schools least 100 students various probability samples data. design 2-stage cluster sampling clusters unequal sizes. SRS 40 districts selected (psus) 757 districts population 5 schools (min selected district (ssus).","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apiclus2_H1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Multi-Stage RDBESDataObject converted from package survey dataset apiclus2 — Pckg_survey_apiclus2_H1","text":"","code":"Pckg_survey_apiclus2_H1"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apiclus2_H1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A Multi-Stage RDBESDataObject converted from package survey dataset apiclus2 — Pckg_survey_apiclus2_H1","text":"list containing entries required H1 RDBES data: DE Design data table. Contains 1 DE row DEstratumName == \"Pckg_SDAResources_apiclus2_H1\" SD Sampling Details data table. Contains 1 child SD row VS Vessel Selection data table. Contains 40 child rows (40 districts), VSnumberTotal 757, VSnumberSampled 40 FT Fishing Trip data table. Contains 126 child rows (126 schools finally observed), associated cluster (dname), FTnumberTotal number schools district, FTnumberSAmpled 1...5 schools sampled FO Fishing Operation data table. Just 1:1 links final data (SA) SS Species Selection data table. Just 1:1 links final data (SA) SA Sample data table. SAsampleWeightMeasured enroll (NB! 4 NAs) FM Frequency Measure data table BV Biological Variable data table VD Vessel Details data table SL Species List data table Individual Species table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apiclus2_H1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A Multi-Stage RDBESDataObject converted from package survey dataset apiclus2 — Pckg_survey_apiclus2_H1","text":"https://CRAN.R-project.org/package=survey","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apistrat_H1.html","id":null,"dir":"Reference","previous_headings":"","what":"A RDBESDataObject converted from package survey dataset apistrat — Pckg_survey_apistrat_H1","title":"A RDBESDataObject converted from package survey dataset apistrat — Pckg_survey_apistrat_H1","text":"data set stratified version previous \"apiclus2\" data. derived Academic Performance Index computed California schools based standardized testing students. original data sets contain information schools least 100 students various probability samples data. design 1-stage cluster sampling clusters unequal sizes. SRS 200 districts selected (psus) 755 districts population. schools within district selected (ssus).","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apistrat_H1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A RDBESDataObject converted from package survey dataset apistrat — Pckg_survey_apistrat_H1","text":"","code":"Pckg_survey_apistrat_H1"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apistrat_H1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A RDBESDataObject converted from package survey dataset apistrat — Pckg_survey_apistrat_H1","text":"list containing entries required H1 RDBES data: DE Design data table. Contains 1 DE row SD Sampling Details data table. Contains 1 child SD row VS Vessel Selection data table. Contains 200 child rows (200 schools finally observed), associated cluster (dname), VSnumberTotalClusters 755, VSnumberTotal 50-100 schools sampled FT Fishing Trip data table. Contains 200 child rows (200 schools finally observed), associated cluster (dname), FTnumberTotal number schools cluster (census) FO Fishing Operation data table. Just 1:1 links final data (SA) SS Species Selection data table. Just 1:1 links final data (SA) SA Sample data table. SAsampleWeightMeasured enroll FM Frequency Measure data table BV Biological Variable data table VD Vessel Details data table. Contains 311 child rows SL Species List data table. Contains 1 child row Individual Species table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/Pckg_survey_apistrat_H1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A RDBESDataObject converted from package survey dataset apistrat — Pckg_survey_apistrat_H1","text":"https://CRAN.R-project.org/package=survey","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/RDBESDataObject-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for RDBESDataObject — print.RDBESDataObject","title":"Print method for RDBESDataObject — print.RDBESDataObject","text":"method prints hierarchy DE data.table (exists), number rows data.table RDBESDataObject NULL. also provides sampling method number sampled number total tables applicable. RDBESDataObject mixed hierarchy, warning message printed. method sorts RDBESDataObject based hierarchy. method returns list containing hierarchy DE data.table, number rows data.table RDBESDataObject NULL, logical value indicating hierarchy NULL.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/RDBESDataObject-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for RDBESDataObject — print.RDBESDataObject","text":"","code":"# S3 method for class 'RDBESDataObject' print(x, ...)  # S3 method for class 'RDBESDataObject' sort(x, decreasing = TRUE, ...)  # S3 method for class 'RDBESDataObject' summary(object, ...)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/RDBESDataObject-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for RDBESDataObject — print.RDBESDataObject","text":"x object class RDBESDataObject. ... parameters underling functions (used currently) decreasing hierarchy tables first ones object object class RDBESDataObject.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/RDBESDataObject-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for RDBESDataObject — print.RDBESDataObject","text":"None. sorted RDBESDataObject hierarchy. list three elements: hierarchy: hierarchy DE data.table RDBESDataObject. rows: named list names names data.tables RDBESDataObject values number rows data.table. NULL values excluded. CS: logical value indicating hierarchy NULL.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/RDBESDataObject-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for RDBESDataObject — print.RDBESDataObject","text":"","code":"# Print the package data object print(H1Example) #> Hierarchy 1 RDBESdataObject: #>  DE: 8 #>  SD: 8 #>  VS: 1214 (SRSWOR,CENSUS,SRSWR: 2-135/4-1382) #>  FT: 1430 (CENSUS,SRSWR: 1-3/1-100) #>  FO: 1916 (CENSUS,SRSWR: 1-3/1-20) #>  SS: 1916 (CENSUS,SRSWR: 1/1-4) #>  SA: 1916 (CENSUS,SRSWR: 1/1-2) #>  FM: 7290 #>  BV: 14580 (SRSWR: 2/2) #>  VD: 311 #>  SL: 6 #>  IS: 25 # Sort the package data sort(H8ExampleEE1) #> Hierarchy 8 RDBESdataObject: #>  DE: 1 #>  SD: 1 #>  TE: 11 (SRSWOR: 2-3/4) #>  VS: 15 (SRSWR: 1-2/7-12) #>  LE: 15 (SRSWOR: 1/1) #>  SS: 15 (CENSUS: 1/1) #>  SA: 15 (SRSWOR: 1/794-14268) #>  BV: 3995 (CENSUS: 16-100/16-100) #>  VD: 7 #>  SL: 1 #>  IS: 2 #>  CL: 71 #>  CE: 132 # Get summary of the package data summary(H1Example) #> $hierarchy #> [1] 1 #>  #> $data #> $data$DE #> $data$DE$design #>   year #> 1 1965 #>  #> $data$DE$rows #> [1] 8 #>  #>  #> $data$SD #> $data$SD$design #> data frame with 0 columns and 0 rows #>  #> $data$SD$rows #> [1] 8 #>  #>  #> $data$VS #> $data$VS$design #>    numTotal numSamp selectMeth #> 1      1054     103     SRSWOR #> 2       220      21     SRSWOR #> 3      1382     135     SRSWOR #> 4       422      41     SRSWOR #> 5         4       4     CENSUS #> 6        13       2     SRSWOR #> 7        10       2     SRSWOR #> 8         8       2     SRSWOR #> 9        11       2     SRSWOR #> 10        9       2     SRSWOR #> 11        6       2     SRSWOR #> 12        7       2     SRSWOR #> 13        5       2     SRSWOR #> 14       12       2     SRSWOR #> 15      163      20     SRSWOR #> 16      109      20     SRSWOR #> 17      219      20     SRSWOR #> 18      318      20     SRSWOR #> 19      259      20     SRSWOR #> 20      311      20     SRSWOR #> 21      263      20     SRSWOR #> 22      180      20     SRSWOR #> 23      114      20     SRSWOR #> 24      367      20     SRSWOR #> 25       20      20     CENSUS #> 26       34      34     CENSUS #> 27       26      26     CENSUS #> 28       28      28     CENSUS #> 29       19      19     CENSUS #> 30       32      32     CENSUS #> 31       17      17     CENSUS #> 32       21      21     CENSUS #> 33       24      24     CENSUS #> 34       60       3      SRSWR #>  #> $data$VS$rows #> [1] 1214 #>  #>  #> $data$FT #> $data$FT$design #>   numTotal numSamp selectMeth #> 1        1       1     CENSUS #> 2      100       3      SRSWR #>  #> $data$FT$rows #> [1] 1430 #>  #>  #> $data$FO #> $data$FO$design #>   numTotal numSamp selectMeth #> 1        1       1     CENSUS #> 2       20       3      SRSWR #>  #> $data$FO$rows #> [1] 1916 #>  #>  #> $data$SS #> $data$SS$design #>   numTotal numSamp selectMeth #> 1        1       1     CENSUS #> 2        4       1      SRSWR #>  #> $data$SS$rows #> [1] 1916 #>  #>  #> $data$SA #> $data$SA$design #>   numTotal numSamp selectMeth #> 1        1       1     CENSUS #> 2        2       1      SRSWR #>  #> $data$SA$rows #> [1] 1916 #>  #>  #> $data$FM #> $data$FM$design #> data frame with 0 columns and 0 rows #>  #> $data$FM$rows #> [1] 7290 #>  #>  #> $data$BV #> $data$BV$design #>   numTotal numSamp selectMeth #> 1        2       2      SRSWR #>  #> $data$BV$rows #> [1] 14580 #>  #>  #> $data$VD #> $data$VD$design #>   year #> 1 1965 #>  #> $data$VD$rows #> [1] 311 #>  #>  #> $data$SL #> $data$SL$design #>   year #> 1 1965 #>  #> $data$SL$rows #> [1] 6 #>  #>  #> $data$IS #> $data$IS$design #> data frame with 0 columns and 0 rows #>  #> $data$IS$rows #> [1] 25 #>  #>  #>"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/addCLtoLowerCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add CL data to a lower-level CS table in an RDBESDataObject — addCLtoLowerCS","title":"Add CL data to a lower-level CS table in an RDBESDataObject — addCLtoLowerCS","text":"function adds data CL table RDBESDataObject BV FM table. combines information CS CL tables calculates aggregate statistics sum specified fields CL table.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/addCLtoLowerCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add CL data to a lower-level CS table in an RDBESDataObject — addCLtoLowerCS","text":"","code":"addCLtoLowerCS(   rdbes,   strataListCS,   strataListCL,   combineStrata = T,   lowerHierarchy = \"C\",   CLfields = c(\"CLoffWeight\"),   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/addCLtoLowerCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add CL data to a lower-level CS table in an RDBESDataObject — addCLtoLowerCS","text":"rdbes object class RDBESDataObject. object contains tables RDBES data structure, including CL table CS data. strataListCS named list filter criteria subsetting CS data RDBESDataObject. names list match column names CS tables. strataListCL named list filter criteria subsetting CL data RDBESDataObject. names list match column names CL table. combineStrata Logical, TRUE, strata strataListCS combined using vertical bar (|). lowerHierarchy character string specifying level lower hierarchy table CL data added. Currently, \"C\" supported ie BV data . CLfields character vector field names CL table summed added new columns lower-level biological data. verbose Logical, TRUE, function prints informative text.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/addCLtoLowerCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add CL data to a lower-level CS table in an RDBESDataObject — addCLtoLowerCS","text":"data.table containing biological data lower hierarchy added strata information CL table sum specified fields CL data.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/addCLtoLowerCS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add CL data to a lower-level CS table in an RDBESDataObject — addCLtoLowerCS","text":"function first subsets biological data RDBESDataObject based criteria strataListCS. retrieves corresponding CL data based criteria strataListCL, sums fields specified CLfields, adds new columns biological data. combineStrata TRUE, strata columns CS data collapsed using vertical bar (|). function currently supports biological data \"C\" hierarchy level.","code":""},{"path":[]},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/addCLtoLowerCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add CL data to a lower-level CS table in an RDBESDataObject — addCLtoLowerCS","text":"","code":"if (FALSE) { # \\dontrun{ strataListCS <- list(LEarea=\"27.3.d.28.1\",                      LEmetier6 = \"OTM_SPF_16-31_0_0\",                      TEstratumName = month.name[1:3],                      SAspeCodeFAO = \"SPR\") strataListCL <- list(CLarea=\"27.3.d.28.1\",                      CLquar = 1,                      CLmetier6 = \"OTM_SPF_16-31_0_0\",                      CLspecFAO = \"SPR\") biolCL <- addCLtoLowerCS(rdbesObject, strataListCS, strataListCL,                          combineStrata = TRUE,                          lowerHierarchy = \"C\",                          CLfields = c(\"CLoffWeight\")) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/applyGenerateProbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate probabilities missing from RDBES Data — applyGenerateProbs","title":"Generate probabilities missing from RDBES Data — applyGenerateProbs","text":"Wrapper generate probabilities. wrapper calls runChecksOnSelectionAndProbs main tests need passed probabilities can calculated. calls generateProbs sample sampling level hierarchy.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/applyGenerateProbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate probabilities missing from RDBES Data — applyGenerateProbs","text":"","code":"applyGenerateProbs(   x,   probType,   overwrite,   runInitialProbChecks = TRUE,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/applyGenerateProbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate probabilities missing from RDBES Data — applyGenerateProbs","text":"x RDBES data object probType string. Can set \"selection\" (selection probabilities calculated), \"inclusion\" (inclusion probabilities calculated) \"\" (types probabilities calculated) overwrite TRUE overwrite probabilities already existing SRSWR SRSWOR runInitialProbChecks TRUE runs runChecksOnSelectionAndProbs verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/applyGenerateProbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate probabilities missing from RDBES Data — applyGenerateProbs","text":"list RDBES data tables probabilites calculated","code":""},{"path":[]},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/applyGenerateProbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate probabilities missing from RDBES Data — applyGenerateProbs","text":"","code":"# To be added"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/as.integer.or.dbl.html","id":null,"dir":"Reference","previous_headings":"","what":"as.integer.or.dbl — as.integer.or.dbl","title":"as.integer.or.dbl — as.integer.or.dbl","text":"function checks value vector 2e+09, runs round(.double()) . uses .integer() instead. get around 32-bit limitation R integers larger around 2e+09, case .integer return NA.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/as.integer.or.dbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.integer.or.dbl — as.integer.or.dbl","text":"","code":"# S3 method for class 'or.dbl' as.integer(x)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/as.integer.or.dbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.integer.or.dbl — as.integer.or.dbl","text":"x vector coerced integers doubles","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/as.integer.or.dbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as.integer.or.dbl — as.integer.or.dbl","text":"vector integers doubles","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/check_key_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a column exists in a data table and has unique values — check_key_column","title":"Check if a column exists in a data table and has unique values — check_key_column","text":"function checks specified column exists given data table unique values. column exist non-unique values, error thrown.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/check_key_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a column exists in a data table and has unique values — check_key_column","text":"","code":"check_key_column(dt, col)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/check_key_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a column exists in a data table and has unique values — check_key_column","text":"dt data table check col character string specifying name column check","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/check_key_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a column exists in a data table and has unique values — check_key_column","text":"nothing column exists unique values, otherwise error thrown","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/check_key_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a column exists in a data table and has unique values — check_key_column","text":"","code":"if (FALSE) { # \\dontrun{   RDBEScore:::check_key_column(H1Example$DE, \"DEid\") } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/combineRDBESDataObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects into a single RDBESDataObject by merging individual tables one by one — combineRDBESDataObjects","title":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects into a single RDBESDataObject by merging individual tables one by one — combineRDBESDataObjects","text":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects single RDBESDataObject merging individual tables one one","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/combineRDBESDataObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects into a single RDBESDataObject by merging individual tables one by one — combineRDBESDataObjects","text":"","code":"combineRDBESDataObjects(   RDBESDataObject1,   RDBESDataObject2,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/combineRDBESDataObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects into a single RDBESDataObject by merging individual tables one by one — combineRDBESDataObjects","text":"RDBESDataObject1 first object combine RDBESDataObject2 second object combine verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/combineRDBESDataObjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects into a single RDBESDataObject by merging individual tables one by one — combineRDBESDataObjects","text":"combination RDBESDataObject1  RDBESDataObject2","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/combineRDBESDataObjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects into a single RDBESDataObject by merging individual tables one by one — combineRDBESDataObjects","text":"combining RDBESDataObjects different hierarchies (e.g., H1 H5), warning issued. resulting combined object mixed hierarchy, may structurally statistically invalid analyses. However, combinations can useful fisheries overviews, annual reports, countries performing broader estimations.","code":""},{"path":[]},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/combineRDBESDataObjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Two RDBES Raw Objects combines 2 RDBESDataObjects into a single RDBESDataObject by merging individual tables one by one — combineRDBESDataObjects","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <-     importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19\") myH5RawObject <-     importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h5_v_1_19\")  myCombinedRawObject <- combineRDBESDataObjects(RDBESDataObject1=myH1RawObject,                                              RDBESDataObject2=myH5RawObject) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/convert.col.names.html","id":null,"dir":"Reference","previous_headings":"","what":"convert.col.names — convert.col.names","title":"convert.col.names — convert.col.names","text":"Converts table column names field name R name. now, actually used anywhere, update future useful.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/convert.col.names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert.col.names — convert.col.names","text":"","code":"convert.col.names(table, new.names = \"R.name\")"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/convert.col.names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert.col.names — convert.col.names","text":"table Table change names new.names \"field.name\" \"R.name\"","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/convert.col.names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert.col.names — convert.col.names","text":"vector strings new column names","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createDBEPrepObj.html","id":null,"dir":"Reference","previous_headings":"","what":"Load raw object and create prepared object Function relies on the data being correctly named following established hierarchy — createDBEPrepObj","title":"Load raw object and create prepared object Function relies on the data being correctly named following established hierarchy — createDBEPrepObj","text":"Load raw object create prepared object Function relies data correctly named following established hierarchy","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createDBEPrepObj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load raw object and create prepared object Function relies on the data being correctly named following established hierarchy — createDBEPrepObj","text":"","code":"createDBEPrepObj(input, output)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createDBEPrepObj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load raw object and create prepared object Function relies on the data being correctly named following established hierarchy — createDBEPrepObj","text":"input string pointing towards input folder output string pointing towards output folder","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createDBEPrepObj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load raw object and create prepared object Function relies on the data being correctly named following established hierarchy — createDBEPrepObj","text":".Rdata files","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createDBEPrepObj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load raw object and create prepared object Function relies on the data being correctly named following established hierarchy — createDBEPrepObj","text":"","code":"if (FALSE) { # \\dontrun{ input <- \"WKRDB-EST2/testData/output/DBErawObj/\" output <- \"WKRDB-EST2/subGroup1/personal/John/PreparedOutputs/\"  createDBEPrepObj(input = input, output = output) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESDataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an RDBES Data Object — createRDBESDataObject","title":"Create an RDBES Data Object — createRDBESDataObject","text":"function lets create RDBES Data object current R environment.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESDataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an RDBES Data Object — createRDBESDataObject","text":"","code":"createRDBESDataObject(   input = NULL,   listOfFileNames = NULL,   castToCorrectDataTypes = TRUE,   verbose = FALSE,   ... )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESDataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an RDBES Data Object — createRDBESDataObject","text":"input Strings list object. path zip file downloaded RDBES (multiple zip files - see details), path folder csv files, list object current environment containing data frames table. NULL empty RDBESDataObject created. listOfFileNames list Strings, Optional. use csv inputs , required csv file names default file names used RDBES downloading data (instance created files ). actual file names list two-letter code relevant table e.g. list(\"DE\" = \"DE.csv\", \"SD\" = \"SD.csv\", etc.).  used assumed files default file names used RDBES data download (\"Design.csv\" etc). castToCorrectDataTypes Logical. TRUE function attempt cast required columns correct data type.  FALSE column data types determined csv files read . Default TRUE. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. ... Additional parameters forwarded helper functions used function. commonly forwarded validateRDBESDataObject() validation step. Common options: strict (logical, default TRUE): FALSE, validation issues result warnings instead stopping error. verbose (logical, default FALSE): request extra informational output validation. Hierarchy (integer, e.g. 1, optional; zip inputs ): zip file contains multiple hierarchies, selects hierarchy import. Note: checkDataTypes controlled castToCorrectDataTypes argument function supplied via ....","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESDataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an RDBES Data Object — createRDBESDataObject","text":"RDBESDataObject","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESDataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an RDBES Data Object — createRDBESDataObject","text":"input either: zip file downloaded RDBES (multiple zip files want include overwrite tables, example CL CE data). NOTE: downloaded RDBES data Table data format ids loaded function uploaded format. folder containing csv files downloaded RDBES (e.g. unzipped file), set csv files RDBES tables. list data frames current environment representing different tables hierarchy. NULL input return empty RDBES data object ZIP file inputs input path zip file downloaded RDBES. Multiple zip files can entered want include additional tables, example CL CE. E.g. `input = c(\"path//H1.zip\", \"path//CL.zip\"). tables first input overwritten inputs warning given. input different hierarchy files; function combine . zip contains multiple hierarchies (e.g., H1 H5 within archive), can select one import passing Hierarchy via ..., example: Hierarchy = 1. Hierarchy specified zip contains multiple hierarchies, error raised prompting set . CSV file inputs input path folder csv files. can csv files downloaded RDBES (e.g. unzipped hierarchy), set csv files containing RDBES tables. files default RDBES name (e.g. 'Design.csv') listOfFileNames input can used specify file names e.g. list(\"DE\" = \"DE.csv\", \"SD\" = \"SD.csv\", etc.). List data frames inputs input list object containing data frames (data.tables) table hierarchy. named appropriate 2-letter code (DE, SD, etc.). Columns within tables renamed RDBES model documentation 'R name'. Note choose create RDBESDAtaObject local data frames may passed data integrity checks performed upload RDBES! NULL inputs input produces empty RDBESDataObject, .e. tables correct data classes tables empty.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESDataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an RDBES Data Object — createRDBESDataObject","text":"","code":"# Create an empty object myEmptyRDBESObject <- createRDBESDataObject(input = NULL)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESEstObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an RDBESEstObject from RDBES data — createRDBESEstObject","title":"Creates an RDBESEstObject from RDBES data — createRDBESEstObject","text":"Creates RDBESEstObject RDBES data","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESEstObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an RDBESEstObject from RDBES data — createRDBESEstObject","text":"","code":"createRDBESEstObject(   rdbesPrepObject,   hierarchyToUse = NULL,   stopTable = NULL,   verbose = FALSE,   strict = TRUE,   incDesignVariables = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESEstObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an RDBESEstObject from RDBES data — createRDBESEstObject","text":"rdbesPrepObject RDBES object used create estimation object hierarchyToUse upper RDBES hierarchy use stopTable (Optional) table stop RDBES hierarchy. specified, tables including table included resulting RDBESEstObject. default NULL, means tables hierarchy included. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) function validates input data - validation strict? default TRUE. incDesignVariables (Optional) design variables included? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESEstObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an RDBESEstObject from RDBES data — createRDBESEstObject","text":"object class RDBESEstObject ready use design based estimation","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createRDBESEstObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an RDBESEstObject from RDBES data — createRDBESEstObject","text":"","code":"myH1EstObj <- createRDBESEstObject(H1Example, 1, \"SA\")"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createTableOfRDBESIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table of RDBES Ids — createTableOfRDBESIds","title":"Create a table of RDBES Ids — createTableOfRDBESIds","text":"examples now see https://github.com/ices-eg/WK_RDBES/tree/master/WKRDB-EST2/chairs/Nuno","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createTableOfRDBESIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table of RDBES Ids — createTableOfRDBESIds","text":"","code":"createTableOfRDBESIds(x, addSAseqNums = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createTableOfRDBESIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table of RDBES Ids — createTableOfRDBESIds","text":"x RDBESdataObject addSAseqNums SAseqNum included? Default value TRUE","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createTableOfRDBESIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table of RDBES Ids — createTableOfRDBESIds","text":"data frame Ids tables sampling hierarchy","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/createTableOfRDBESIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a table of RDBES Ids — createTableOfRDBESIds","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <-   importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19_13\")  myTableOfIds<- createTableOfRDBESIds(myH1RawObject) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/designVariables.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset containing the RDBES ","title":"A dataset containing the RDBES ","text":"dataset containing RDBES \"design variable\" names","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/designVariables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset containing the RDBES ","text":"","code":"designVariables"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/designVariables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset containing the RDBES ","text":"vector containing short R names RDBES design variables (without 2 letter table prefixes) R field name: designVariables design variable names","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/designVariables.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A dataset containing the RDBES ","text":"https://sboxrdbes.ices.dk","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doBVestimCANUM.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Catch at Number (CANUM) for Biological Variables — doBVestimCANUM","title":"Estimate Catch at Number (CANUM) for Biological Variables — doBVestimCANUM","text":"function estimates catch number (CANUM) specified biological variable, age length. aggregates data based specified columns generates \"plus group\" highest value defined classes. function supports grouping various units (e.g., age, length, weight) calculates required indices, totals, proportions groups.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doBVestimCANUM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Catch at Number (CANUM) for Biological Variables — doBVestimCANUM","text":"","code":"doBVestimCANUM(   bv,   addColumns,   classUnits = \"Ageyear\",   classBreaks = 1:8,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doBVestimCANUM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Catch at Number (CANUM) for Biological Variables — doBVestimCANUM","text":"bv data.table containing biological data, columns biological variable, class units (e.g., Ageyear, Lengthmm, Weightg), relevant variables. addColumns character vector additional column names used group data aggregation (e.g., BVfishId identifiers). classUnits character string specifying class units biological variable use grouping (e.g., \"Ageyear\", \"Lengthmm\", \"Weightg\"). Default \"Ageyear\". classBreaks numeric vector specifying breakpoints classifying biological variable. last value defines lower bound \"plus group\". Default 1:8 age groups. verbose Logical, TRUE, prints detailed information process. Default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doBVestimCANUM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Catch at Number (CANUM) for Biological Variables — doBVestimCANUM","text":"data.table containing aggregated results, including groupings, calculated means, proportions, indices, totals specified biological variable.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doBVestimCANUM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Catch at Number (CANUM) for Biological Variables — doBVestimCANUM","text":"function performs following steps: Validates presence classUnits biological variable data. Reshapes input data using dcast groups biological variable classes using cut(). Aggregates mean weights lengths defined classes, along calculating proportions indices based sample size. \"plus group\" created values exceeding highest classBreaks value. Calculates total weights, catch numbers, performs sanity check ensure rounding errors final results.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doBVestimCANUM.html","id":"mathematical-logic-","dir":"Reference","previous_headings":"","what":"Mathematical Logic:","title":"Estimate Catch at Number (CANUM) for Biological Variables — doBVestimCANUM","text":"Let: \\(W_{mean}\\) mean weight group. \\(L_{mean}\\) mean length group. \\(n_W\\) number weight measurements group. \\(N\\) total number measurements sample. \\(P\\) proportion sample represented group. \\(I_W\\) weight index group. \\(S\\) sum weight indices across groups. \\(C\\) total catch weight. \\(T_W\\) total weight group. \\(C_{num}\\) total catch number group. calculations follows: Proportion sample: $$P = \\frac{n_W}{N}$$ Weight Index: $$I_W = P \\times \\left( \\frac{W_{mean}}{1000} \\right)$$ Sum Weight Indices: $$S = \\sum I_W$$ Total Weight Coefficient: $$\\mathrm{TWCoef} = \\frac{C}{S}$$ Total Weight per Group: $$T_W = I_W \\times \\mathrm{TWCoef}$$ Total Catch Number per Group: $$C_{num} = \\frac{T_W}{\\left( \\frac{W_{mean}}{1000} \\right)}$$","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBEestimantionObjUpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the DBE estimation object for the upper hierarchy tables — doDBEestimantionObjUpp","title":"Generates the DBE estimation object for the upper hierarchy tables — doDBEestimantionObjUpp","text":"Generates DBE estimation object upper hierarchy tables","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBEestimantionObjUpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the DBE estimation object for the upper hierarchy tables — doDBEestimantionObjUpp","text":"","code":"doDBEestimantionObjUpp(inputList)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBEestimantionObjUpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the DBE estimation object for the upper hierarchy tables — doDBEestimantionObjUpp","text":"inputList data tables named list. Name equal short table names e.g. DE, SD, TE, FO.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBEestimantionObjUpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the DBE estimation object for the upper hierarchy tables — doDBEestimantionObjUpp","text":"upper hierarchy tables DBE estimation object (DBEestimantionObjUpp)","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBEestimantionObjUpp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates the DBE estimation object for the upper hierarchy tables — doDBEestimantionObjUpp","text":"","code":"if (FALSE) { # \\dontrun{ H1 <- readRDS(\"./WKRDB-EST2/testData/output/DBErawObj/DBErawObj_DK_1966_H1.rds\") H1out <- doDBEestimantionObjUpp(H1) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBestimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create design-based point and variance estimates from RDBES estimation object (rdbesEstimObj) — doDBestimation","title":"Create design-based point and variance estimates from RDBES estimation object (rdbesEstimObj) — doDBestimation","text":"Create design-based point variance estimates RDBES estimation object (rdbesEstimObj)","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBestimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create design-based point and variance estimates from RDBES estimation object (rdbesEstimObj) — doDBestimation","text":"","code":"doDBestimation(   x = rdbesEstimObj,   estimateType = \"total\",   pointEstimator = \"Unbiased\",   varEstimator = \"WRonPSUviaPik\",   stage = 0,   domainOfinterest = NULL )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBestimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create design-based point and variance estimates from RDBES estimation object (rdbesEstimObj) — doDBestimation","text":"x data.frame (data.table) rdbesEstimObj format value target variable column targetValue estimateType string type estimate. now \"total\" defined pointEstimator string type point estimator. now \"Unbiased\" defined varEstimator string type variance estimator. now \"WRonPSUviaPik\" defined stage natural number (0,1,..) sampling stage estimate. 0 corresponds DE level. domainOfinterest list ofdomains interest (e.g., SAarea). now NULL (=domain estimate) defined","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBestimation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create design-based point and variance estimates from RDBES estimation object (rdbesEstimObj) — doDBestimation","text":"list values pointEstimate, varEstimate estimation options","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doDBestimation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create design-based point and variance estimates from RDBES estimation object (rdbesEstimObj) — doDBestimation","text":"","code":"if (FALSE) { # \\dontrun{ data(shrimps) doDBestimation (x = shrimps, estimateType = \"total\", pointEstimator = \"Unbiased\", varEstimator = \"WRonPSUviaPsi\",stage = 0, domainOfinterest = NULL )  } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationForAllStrata.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate totals and means, and try to generate samples variances for all strata in an RDBESEstObject — doEstimationForAllStrata","title":"Estimate totals and means, and try to generate samples variances for all strata in an RDBESEstObject — doEstimationForAllStrata","text":"Estimate totals means, try generate samples variances strata RDBESEstObject","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationForAllStrata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate totals and means, and try to generate samples variances for all strata in an RDBESEstObject — doEstimationForAllStrata","text":"","code":"doEstimationForAllStrata(RDBESEstObjectForEstim, targetValue, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationForAllStrata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate totals and means, and try to generate samples variances for all strata in an RDBESEstObject — doEstimationForAllStrata","text":"RDBESEstObjectForEstim RDBESEstObject generate estimates targetValue field estimate , example \"SAsampWtLive\" verbose (Optional) set TRUE detailed text printed function.  Default FALSE","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationForAllStrata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate totals and means, and try to generate samples variances for all strata in an RDBESEstObject — doEstimationForAllStrata","text":"data frame containing estimates strata","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationForAllStrata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate totals and means, and try to generate samples variances for all strata in an RDBESEstObject — doEstimationForAllStrata","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <-   importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19\")  # Update our test data with some random sample measurements myH1RawObject[[\"SA\"]]$SAsampWtLive <-   round(runif(n = nrow(myH1RawObject[[\"SA\"]]), min = 1, max = 100))  myH1EstObj <- createRDBESEstObject(myH1RawObject, 1)  myStrataEst <- doEstimationForAllStrata(   RDBESDataObjectForEstim = myH1EstObj,   targetValue = 'SAsampWtLive' ) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Numbers and Mean Values by Length or Age Class — doEstimationRatio","title":"Estimate Numbers and Mean Values by Length or Age Class — doEstimationRatio","text":"function development work yet.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Numbers and Mean Values by Length or Age Class — doEstimationRatio","text":"","code":"doEstimationRatio(   RDBESDataObj,   targetValue = \"LengthComp\",   raiseVar = \"Weight\",   classUnits = \"mm\",   classBreaks = c(100, 300, 10),   LWparam = NULL,   lowerAux = NULL,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Numbers and Mean Values by Length or Age Class — doEstimationRatio","text":"RDBESDataObj validated RDBESDataObject containing hierarchical sampling biological data. Must include appropriate tables (e.g., CL, CE, SA, FM, BV) depending estimation requirements. targetValue character string specifying type composition estimate. Options \"LengthComp\" \"AgeComp\". raiseVar variable used construct ratio. classUnits Units class intervals length age, typically \"mm\" millimeters \"cm\" centimeters. Used defining class intervals. classBreaks numeric vector three values: minimum value, maximum value, class width (e.g., c(100, 300, 10)). Defines class intervals grouping lengths ages. LWparam numeric vector length two specifying parameters (, b) weight-length relationship (W = * L^b). Used direct weights available lengths provided. lowerAux numeric character vector referencing variable SA table used auxiliary variable ratio estimation (e.g., sample weights, sub-sample expansion factors). verbose Logical; TRUE, detailed messages printed processing.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/doEstimationRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Numbers and Mean Values by Length or Age Class — doEstimationRatio","text":"list data.table containing estimated numbers length age associated mean values weight length, depending input target type.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for estimation of population total and variance — estim","title":"Generic function for estimation of population total and variance — estim","text":"Generic function estimation population total variance","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for estimation of population total and variance — estim","text":"","code":"estim(   y,   enk,   enkl,   method = \"SRSWOR\",   estFunction,   varFunction,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for estimation of population total and variance — estim","text":"y numeric variable estimated enk expected value k enkl expected value k, given l method character selection method code e.g SRSWOR estFunction function use estimate total given parameters y enk varFunction function use estimate variance given parameters y,enk enkl verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for estimation of population total and variance — estim","text":"list 7 elements including population mean, total (variance), algorithm name used order inclusion probabilities","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for estimation of population total and variance — estim","text":"","code":"estimMC(c(3, 4, 4, 5), c(4, 4, 4, 4), c(8, 8, 8, 8)) #> $est.total #> [1] 32 #>  #> $est.mean #> [1] 4 #>  #> $est.algorithm #> [1] \"Generalized Horvitz-Thompson aka Mutiple-Count\" #>  #> $var.total #> [1] 5.333333 #>  #> $var.mean #> [1] 0.08333333 #>  #> $var.algorithm #> [1] \"Sen-Yates-Grundy\" #>  #> $PI #>           [,1]      [,2]      [,3]      [,4] #> [1,] 0.5000000 0.2142857 0.2142857 0.2142857 #> [2,] 0.2142857 0.5000000 0.2142857 0.2142857 #> [3,] 0.2142857 0.2142857 0.5000000 0.2142857 #> [4,] 0.2142857 0.2142857 0.2142857 0.5000000 #>"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estimMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Count Estimator for Population Total and Variance — estimMC","title":"Multiple Count Estimator for Population Total and Variance — estimMC","text":"Multiple Count Estimator Population Total Variance","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estimMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Count Estimator for Population Total and Variance — estimMC","text":"","code":"estimMC(   y,   sampled,   total,   method = \"SRSWOR\",   selProb = NULL,   incProb = NULL,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estimMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Count Estimator for Population Total and Variance — estimMC","text":"y numeric variable estimated sampled numeric total number units sampled total numeric total number units int population method character selection method code e.g SRSWOR selProb selection probabilities (known) incProb inclusion probabilities (known) verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estimMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Count Estimator for Population Total and Variance — estimMC","text":"list 7 elements including population mean, total (variance), algorithm name used order inclusion probabilities","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/estimMC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple Count Estimator for Population Total and Variance — estimMC","text":"","code":"estimMC(c(3, 4, 4, 5), c(4, 4, 4, 4), c(8, 8, 8, 8)) #> $est.total #> [1] 32 #>  #> $est.mean #> [1] 4 #>  #> $est.algorithm #> [1] \"Generalized Horvitz-Thompson aka Mutiple-Count\" #>  #> $var.total #> [1] 5.333333 #>  #> $var.mean #> [1] 0.08333333 #>  #> $var.algorithm #> [1] \"Sen-Yates-Grundy\" #>  #> $PI #>           [,1]      [,2]      [,3]      [,4] #> [1,] 0.5000000 0.2142857 0.2142857 0.2142857 #> [2,] 0.2142857 0.5000000 0.2142857 0.2142857 #> [3,] 0.2142857 0.2142857 0.5000000 0.2142857 #> [4,] 0.2142857 0.2142857 0.2142857 0.5000000 #>"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/exportEstimationResultsToInterCatchFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Estimation Results to InterCatch Exchange Format — exportEstimationResultsToInterCatchFormat","title":"Export Estimation Results to InterCatch Exchange Format — exportEstimationResultsToInterCatchFormat","text":"function transforms estimation results InterCatch format.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/exportEstimationResultsToInterCatchFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Estimation Results to InterCatch Exchange Format — exportEstimationResultsToInterCatchFormat","text":"","code":"exportEstimationResultsToInterCatchFormat(dataToExport, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/exportEstimationResultsToInterCatchFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Estimation Results to InterCatch Exchange Format — exportEstimationResultsToInterCatchFormat","text":"dataToExport data frame containing estimation results - include output doEstimationForAllStrata function already InterCatch columns present. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/exportEstimationResultsToInterCatchFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Estimation Results to InterCatch Exchange Format — exportEstimationResultsToInterCatchFormat","text":"character vector representing flattened InterCatch exchange format. vector includes fields HI, SI, SD components, ordered associated keys, suitable writing InterCatch-formatted exchange file.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fileExt.html","id":null,"dir":"Reference","previous_headings":"","what":"fileExt — fileExt","title":"fileExt — fileExt","text":"function splits character vector returns second element separator dot ..","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fileExt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fileExt — fileExt","text":"","code":"fileExt(x)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fileExt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fileExt — fileExt","text":"x character vector split.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fileExt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fileExt — fileExt","text":"second element character vector.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterAndTidyRDBESDataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter and remove orphan records in an RDBESDataObject — filterAndTidyRDBESDataObject","title":"Filter and remove orphan records in an RDBESDataObject — filterAndTidyRDBESDataObject","text":"function filters RDBESDataObject based specified fields values, can optionally remove orphan records. returned object include rows either: ) include field names fieldsToFilter, b) include field names one allowed values valuesToFilter. killOrphans set TRUE, function remove orphaned rows. default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterAndTidyRDBESDataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter and remove orphan records in an RDBESDataObject — filterAndTidyRDBESDataObject","text":"","code":"filterAndTidyRDBESDataObject(   RDBESDataObjectToFilterAndTidy,   fieldsToFilter,   valuesToFilter,   killOrphans = TRUE,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterAndTidyRDBESDataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter and remove orphan records in an RDBESDataObject — filterAndTidyRDBESDataObject","text":"RDBESDataObjectToFilterAndTidy RDBESDataObject filter. fieldsToFilter vector field names wish check. valuesToFilter vector field values wish filter . killOrphans Controls orphan rows removed. Default TRUE. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterAndTidyRDBESDataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter and remove orphan records in an RDBESDataObject — filterAndTidyRDBESDataObject","text":"filtered input object class RDBESDataObjectToFilterAndTidy.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterAndTidyRDBESDataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter and remove orphan records in an RDBESDataObject — filterAndTidyRDBESDataObject","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <- createRDBESDataObject(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19_13\")  # To check how removeBrokenVesselLinks() works myH1RawObject$VD$VDlenCat[which(myH1RawObject$VD$VDencrVessCode==\"VDcode_10\")] <- \"VL40XX\"  myFields <- c(\"VSencrVessCode\", \"VDlenCat\") myValues <- c(\"VDcode_1\",\"VDcode_2\", \"VDcode_10\",\"VL1518\",\"VL2440\")  myFilteredObject <- filterAndTidyRDBESDataObject(myH1RawObject,   fieldsToFilter = myFields,   valuesToFilter = myValues,   killOrphans = TRUE, verboseBrokenVesselLinks = TRUE ) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESDataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter an RDBESDataObject — filterRDBESDataObject","title":"Filter an RDBESDataObject — filterRDBESDataObject","text":"returned object include rows either: ) included field names fieldsToFilter, b) include field names one allowed values valuesToFilter. want filter id field like DEid, FTid etc, filtering works table id field key. example, try filter FOid look  FOid tables like FT, although field FOid exists FT table.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESDataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter an RDBESDataObject — filterRDBESDataObject","text":"","code":"filterRDBESDataObject(   RDBESDataObjectToFilter,   fieldsToFilter,   valuesToFilter,   killOrphans = FALSE,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESDataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter an RDBESDataObject — filterRDBESDataObject","text":"RDBESDataObjectToFilter RDBESDataObject filter fieldsToFilter vector field names wish check valuesToFilter vector field values wish filter killOrphans Controls orphan rows removed. Default FALSE. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESDataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter an RDBESDataObject — filterRDBESDataObject","text":"filtered input object class RDBESDataObjectToFilter","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESDataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter an RDBESDataObject — filterRDBESDataObject","text":"killOrphans allows remove orphaned rows set TRUE. default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESDataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter an RDBESDataObject — filterRDBESDataObject","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <-   importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19\")  myFields <- c(\"SDctry\", \"VDctry\", \"VDflgCtry\", \"FTarvLoc\") myValues <- c(\"ZW\", \"ZWBZH\", \"ZWVFA\")  myFilteredObject <- filterRDBESDataObject(myH1RawObject,   fieldsToFilter = myFields,   valuesToFilter = myValues )  # Inverse filtering (exclude certain values) # Example: keep all DE rows except those with DEid in `excludedValues` # Compute the complement of the excluded set using setdiff allValues <- unique(myH1RawObject$DE$DEid) excludedValues <- c(5351) myInverseFiltered <- filterRDBESDataObject(   myH1RawObject,   fieldsToFilter = \"DEid\",   valuesToFilter = setdiff(allValues, excludedValues) ) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESEstObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter an RDBESEstObject — filterRDBESEstObject","title":"Filter an RDBESEstObject — filterRDBESEstObject","text":"returned object include rows include field names one allowed values valuesToFilter.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESEstObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter an RDBESEstObject — filterRDBESEstObject","text":"","code":"filterRDBESEstObject(   RDBESEstObjectToFilter,   fieldsToFilter,   valuesToFilter,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESEstObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter an RDBESEstObject — filterRDBESEstObject","text":"RDBESEstObjectToFilter RDBESEstObject filter fieldsToFilter vector field names wish check valuesToFilter vector field values wish filter verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESEstObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter an RDBESEstObject — filterRDBESEstObject","text":"filtered input object class RDBESEstObjectToFilter","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/filterRDBESEstObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter an RDBESEstObject — filterRDBESEstObject","text":"","code":"if (FALSE) { # \\dontrun{   myRawObject <- createRDBESDataObject(input = \"tests\\\\testthat\\\\h1_v_1_19_26\")  myEstObject <- createRDBESEstObject(myRawObject,1)  myFilteredEst <- filterRDBESEstObject(myEst,c(\"BVid\"),c(7349207))  } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findAndKillOrphans.html","id":null,"dir":"Reference","previous_headings":"","what":"This function finds and removed any orphan records in an RDBESDataObject. Normally data that has been downloaded from the RDBES will not contain orphan records - however if the data is subsequently filtered it is possible to introduce orphan records. — findAndKillOrphans","title":"This function finds and removed any orphan records in an RDBESDataObject. Normally data that has been downloaded from the RDBES will not contain orphan records - however if the data is subsequently filtered it is possible to introduce orphan records. — findAndKillOrphans","text":"function finds removed orphan records RDBESDataObject.  Normally data downloaded RDBES contain orphan records - however data subsequently filtered possible introduce orphan records.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findAndKillOrphans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function finds and removed any orphan records in an RDBESDataObject. Normally data that has been downloaded from the RDBES will not contain orphan records - however if the data is subsequently filtered it is possible to introduce orphan records. — findAndKillOrphans","text":"","code":"findAndKillOrphans(objectToCheck, verbose = FALSE, strict = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findAndKillOrphans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function finds and removed any orphan records in an RDBESDataObject. Normally data that has been downloaded from the RDBES will not contain orphan records - however if the data is subsequently filtered it is possible to introduce orphan records. — findAndKillOrphans","text":"objectToCheck RDBESDataObject. verbose (Optional) set TRUE detailed text printed function.  Default FALSE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findAndKillOrphans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function finds and removed any orphan records in an RDBESDataObject. Normally data that has been downloaded from the RDBES will not contain orphan records - however if the data is subsequently filtered it is possible to introduce orphan records. — findAndKillOrphans","text":"RDBESDataObject orphan records removed","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findAndKillOrphans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function finds and removed any orphan records in an RDBESDataObject. Normally data that has been downloaded from the RDBES will not contain orphan records - however if the data is subsequently filtered it is possible to introduce orphan records. — findAndKillOrphans","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <- importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19\") myFields <- c(\"SDctry\",\"VDctry\",\"VDflgCtry\",\"FTarvLoc\") myValues <- c(\"ZW\",\"ZWBZH\",\"ZWVFA\" ) myFilteredObject <- filterRDBESDataObject(myH1RawObject,                                         fieldsToFilter = myFields,                                         valuesToFilter = myValues ) myObjectNoOrphans <- findAndKillOrphans(objectToCheck = myFilteredObject,                                        verbose = FALSE) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findOrphansByTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to identify orphan records in a given RDBESDataObject table — findOrphansByTable","title":"Internal function to identify orphan records in a given RDBESDataObject table — findOrphansByTable","text":"Internal function identify orphan records given RDBESDataObject table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findOrphansByTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to identify orphan records in a given RDBESDataObject table — findOrphansByTable","text":"","code":"findOrphansByTable(tableToCheck, objectToCheck, foreignKeyIds, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findOrphansByTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to identify orphan records in a given RDBESDataObject table — findOrphansByTable","text":"tableToCheck two letter code table check objectToCheck RDBESDataObject foreignKeyIds vetor foreign key field names check verbose (Optional) set TRUE detailed text printed function.  Default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/findOrphansByTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to identify orphan records in a given RDBESDataObject table — findOrphansByTable","text":"data frame primary keys table checked, two letter table identifier, orphan status.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fixSLids.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixes SLid in SL table (facilitating SS-SL joins). — fixSLids","title":"Fixes SLid in SL table (facilitating SS-SL joins). — fixSLids","text":"Fixes SLid SL table (facilitating SS-SL joins).","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fixSLids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixes SLid in SL table (facilitating SS-SL joins). — fixSLids","text":"","code":"fixSLids(RDBESDataObject, verbose = FALSE, validate = TRUE, strict = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fixSLids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixes SLid in SL table (facilitating SS-SL joins). — fixSLids","text":"RDBESDataObject valid RDBESDataObject verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. validate (Optional) function validate input data? default TRUE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fixSLids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixes SLid in SL table (facilitating SS-SL joins). — fixSLids","text":"RDBESDataObject SL ids reworked","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fixSLids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fixes SLid in SL table (facilitating SS-SL joins). — fixSLids","text":"RDBES SL can seen join two tables - one identifies species list terms SLcou * SLinst * SLspeclistName * SLyear * SLcatchFrac one specifies taxa (SLcommTaxon * SLsppCode) list. SS, SLid remits 1st taxa species list - expected - species list . function fixes creating new SLtaxaId variable SL assigning taxa species single SSid.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/fixSLids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixes SLid in SL table (facilitating SS-SL joins). — fixSLids","text":"","code":"# To add"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateMissingSSRows.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate any missing SS rows. When FOcatchReg==","title":"Generate any missing SS rows. When FOcatchReg==","text":"Generate missing SS rows. FOcatchReg==\"\" expected SScatchFraction either \"Catch\" \"Lan\"+\"Dis\". latter case, one missing assumed 0. function generates SS rows missing catch fractions.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateMissingSSRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate any missing SS rows. When FOcatchReg==","text":"","code":"generateMissingSSRows(   RDBESDataObject,   speciesListName,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateMissingSSRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate any missing SS rows. When FOcatchReg==","text":"RDBESDataObject valid RDBESDataObject speciesListName name Species List want use SS rows created. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateMissingSSRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate any missing SS rows. When FOcatchReg==","text":"data table SS data missing rows added","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateMissingSSRows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate any missing SS rows. When FOcatchReg==","text":"","code":"# To follow"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateNAsUsingSL.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate NAs in samples using Species List information — generateNAsUsingSL","title":"Generate NAs in samples using Species List information — generateNAsUsingSL","text":"Generate NAs samples using Species List information","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateNAsUsingSL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate NAs in samples using Species List information — generateNAsUsingSL","text":"","code":"generateNAsUsingSL(   RDBESDataObject,   targetAphiaId,   overwriteSampled = TRUE,   validate = TRUE,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateNAsUsingSL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate NAs in samples using Species List information — generateNAsUsingSL","text":"RDBESDataObject RDBESDataObject. targetAphiaId vector aphiaId. overwriteSampled (Optional) SAtotalWtMes SAsampWtMes set 0 spp recorded absent SL? default TRUE. validate (Optional) Set TRUE want validation carried . default TRUE. verbose (Optional) Set TRUE want informative text validation printed , FALSE .  default FALSE. strict (Optional) function can validate input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateNAsUsingSL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate NAs in samples using Species List information — generateNAsUsingSL","text":"RDBES data object SA complemented NAs species looked (sensu SL)","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateNAsUsingSL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate NAs in samples using Species List information — generateNAsUsingSL","text":"","code":"# To be added"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateProbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate vector of selection or inclusion probabilities — generateProbs","title":"Generate vector of selection or inclusion probabilities — generateProbs","text":"Generate vector selection inclusion probabilities","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateProbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate vector of selection or inclusion probabilities — generateProbs","text":"","code":"generateProbs(x, probType, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateProbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate vector of selection or inclusion probabilities — generateProbs","text":"x RDBES data object probType \"selection\" \"inclusion\" selection inclusion probabilities respectively verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateProbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate vector of selection or inclusion probabilities — generateProbs","text":"vector probabilities","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateProbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate vector of selection or inclusion probabilities — generateProbs","text":"selection method SRSWR selection probabilities calculated \\(1 / N\\) inclusion probabilities \\(1 - (1 - 1 / N)^n\\). selection method SRSWOR selection probabilities currently implemented. Inclusion probabilities calculated \\(n/N\\). selection method CENSUS types probabilities set 1. Probabilities selection methods UPSWR UPSWOR calculated (need supplied user). happens regards non-probabilistic methods","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateProbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate vector of selection or inclusion probabilities — generateProbs","text":"","code":"if (FALSE) { # \\dontrun{ generateProbs(x = Pckg_SDAResources_agstrat_H1[[\"VS\"]], probType = (\"inclusion\")) # population size a<-generateProbs(x = Pckg_SDAResources_agstrat_H1[[\"VS\"]], probType = (\"inclusion\")) sum(1/a$VSincProb) # returns error generateProbs(x = Pckg_SDAResources_agstrat_H1[[\"VS\"]], probType = (\"selection\"))  } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateSSRows.html","id":null,"dir":"Reference","previous_headings":"","what":"Private function to generate SS rows — generateSSRows","title":"Private function to generate SS rows — generateSSRows","text":"Private function generate SS rows","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateSSRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Private function to generate SS rows — generateSSRows","text":"","code":"generateSSRows(FOids, speciesListName, catchFra)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateSSRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Private function to generate SS rows — generateSSRows","text":"FOids Vector FOids speciesListName Name species list catchFra catch fraction create","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateSSRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Private function to generate SS rows — generateSSRows","text":"SS data frame","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateTestTbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a List of Related Data Tables — generateTestTbls","title":"Generate a List of Related Data Tables — generateTestTbls","text":"Generates named list data tables follow structure RDBESDataObject. tables columns required testing generate tables","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateTestTbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a List of Related Data Tables — generateTestTbls","text":"","code":"generateTestTbls(tblNames, prevTbls = list(), ...)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateTestTbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a List of Related Data Tables — generateTestTbls","text":"tblNames character vector table names created prevTbls list data.tables upstream generated table. Defaults empty list ... Arguments passed makeTbl tblName Name table rows numeric number rows per parent record. Defaults 4. propSamp numeric proportion many total sampled. ignored \"CENSUS\". Defaults 0.5 selMeth character selection method used. Defaults \"CENSUS\". Others like SRSWR SRSSWOR can used well stratums character vector stratum names created. Defaults c(\"U\"), meaning stratified. mean numeric expected mean target variable. variable created using rnorm saved column ending \"y\". Defaults 5.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateTestTbls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a List of Related Data Tables — generateTestTbls","text":"list named data.table's","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateTestTbls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a List of Related Data Tables — generateTestTbls","text":"","code":"if (FALSE) { # \\dontrun{ generateTestTbls(c(\"A\", \"B\", \"C\"), selMeth = \"SRSWOR\") generateTestTbls(LETTERS[1:5]) # makes 5 tables with method CENSUS } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateZerosUsingSL.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate zeros in samples using Species List information — generateZerosUsingSL","title":"Generate zeros in samples using Species List information — generateZerosUsingSL","text":"examples now see https://github.com/ices-eg/WK_RDBES/tree/master/WKRDB-EST2/chairs/Nuno","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateZerosUsingSL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate zeros in samples using Species List information — generateZerosUsingSL","text":"","code":"generateZerosUsingSL(x, verbose = FALSE, strict = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateZerosUsingSL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate zeros in samples using Species List information — generateZerosUsingSL","text":"x RDBES data frame verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/generateZerosUsingSL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate zeros in samples using Species List information — generateZerosUsingSL","text":"RDBES data frame SA complemented species looked (sensu sampling objectives) registered sample","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getEstimForStratum.html","id":null,"dir":"Reference","previous_headings":"","what":"Private function used by doEstimationForAllStrata to get the estimates — getEstimForStratum","title":"Private function used by doEstimationForAllStrata to get the estimates — getEstimForStratum","text":"Private function used doEstimationForAllStrata get estimates","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getEstimForStratum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Private function used by doEstimationForAllStrata to get the estimates — getEstimForStratum","text":"","code":"getEstimForStratum(x)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getEstimForStratum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Private function used by doEstimationForAllStrata to get the estimates — getEstimForStratum","text":"x input","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getEstimForStratum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Private function used by doEstimationForAllStrata to get the estimates — getEstimForStratum","text":"Data frame estimated values","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getHelpFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Help File from Rd Database — getHelpFile","title":"Get Help File from Rd Database — getHelpFile","text":"Get Help File Rd Database","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getHelpFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Help File from Rd Database — getHelpFile","text":"","code":"getHelpFile(file)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLinkedDataFromLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Linked Data Between RDBES Tables at a Specified Level — getLinkedDataFromLevel","title":"Retrieve Linked Data Between RDBES Tables at a Specified Level — getLinkedDataFromLevel","text":"getLinkedDataFromLevel function facilitates retrieval linked data different levels RDBES tables. Depending relative positions source target tables within RDBESDataObject, function determines whether traverse \"\" \"\" data hierarchy obtain desired linked data.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLinkedDataFromLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Linked Data Between RDBES Tables at a Specified Level — getLinkedDataFromLevel","text":"","code":"getLinkedDataFromLevel(field, values, rdbesTables, level, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLinkedDataFromLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Linked Data Between RDBES Tables at a Specified Level — getLinkedDataFromLevel","text":"field character string specifying field name retrieve linked data. first two characters field indicate source table. values vector values corresponding specified field linked data retrieved. rdbesTables RDBESDataObject containing relevant RDBES tables. object include tables may linked based provided field level. level character string specifying target table level retrieve linked data. must one names within rdbesTables object. verbose Logical flag indicating whether print detailed information data retrieval process. Default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLinkedDataFromLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Linked Data Between RDBES Tables at a Specified Level — getLinkedDataFromLevel","text":"subset table specified level.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLinkedDataFromLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Linked Data Between RDBES Tables at a Specified Level — getLinkedDataFromLevel","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Going up in the table hierarchy to retrieve data from the DE table # Retrieve data from the DE level based on BVid from the BV table # This returns 1 row from the DE table getLinkedDataFromLevel(\"BVid\", c(1), H8ExampleEE1, \"DE\", TRUE)  # Example 2: Going down in the table hierarchy to retrieve data from the SA table # Retrieve data from the SA level based on DEid from the DE table # This returns 15 rows from the SA table getLinkedDataFromLevel(\"DEid\", c(1), H8ExampleEE1, \"SA\", TRUE)  # Example 3: Going up in the table hierarchy to see the Vessel that caught a specific fish # Retrieve data from the VS level based on BVfishId from the BV table getLinkedDataFromLevel(\"BVfishId\", c(\"410472143\", \"410472144\"), H8ExampleEE1, \"VS\", TRUE) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLowerTableSubsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Lower Table from Several Upper Table Fields — getLowerTableSubsets","title":"Get Lower Table from Several Upper Table Fields — getLowerTableSubsets","text":"function takes list subsets, target lower level table name, list tables. returns unique data frame containing rows target lower level table associated given values upper table field subset. function can also add subset values result reference.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLowerTableSubsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Lower Table from Several Upper Table Fields — getLowerTableSubsets","text":"","code":"getLowerTableSubsets(   subsets,   tblName,   rdbesTables,   combineStrata = TRUE,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLowerTableSubsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Lower Table from Several Upper Table Fields — getLowerTableSubsets","text":"subsets named list vectors. vector contains values specific upper table field. tblName character string specifying name target lower level table. rdbesTables RDBESData object containing tables. combineStrata logical value indicating whether include strata information result. TRUE, strata one value, values collapsed single string appended result warning. verbose logical value indicating whether print informative text.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLowerTableSubsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Lower Table from Several Upper Table Fields — getLowerTableSubsets","text":"unique data frame containing rows target lower level table associated given values upper table field subset. combineStrata = TRUE, result also include column subset corresponding collapsed values.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getLowerTableSubsets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Lower Table from Several Upper Table Fields — getLowerTableSubsets","text":"function recursively intersects rows target lower level table match values subset upper tables. ensures unique rows returned, based ID column target table.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getMissingSSCatchFraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Private function to find which FO rows are not matching SS — getMissingSSCatchFraction","title":"Private function to find which FO rows are not matching SS — getMissingSSCatchFraction","text":"Private function find FO rows matching SS","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getMissingSSCatchFraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Private function to find which FO rows are not matching SS — getMissingSSCatchFraction","text":"","code":"getMissingSSCatchFraction(FOdata, SSdata, catchFra, verbose)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getMissingSSCatchFraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Private function to find which FO rows are not matching SS — getMissingSSCatchFraction","text":"FOdata FOdata SSdata SSdata catchFra catchfra verbose verbose ?","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getMissingSSCatchFraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Private function to find which FO rows are not matching SS — getMissingSSCatchFraction","text":"Vector FOids matching SS rows","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getRdTitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Title from an Rd Object — getRdTitle","title":"Extract Title from an Rd Object — getRdTitle","text":"internal helper function traverses Rd object extract text \\title field. used listPackageFunctions obtain concise description documented function.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getRdTitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Title from an Rd Object — getRdTitle","text":"","code":"getRdTitle(rd)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getRdTitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Title from an Rd Object — getRdTitle","text":"rd Rd object typically obtained via function like utils:::.getHelpFile.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getRdTitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Title from an Rd Object — getRdTitle","text":"character string containing title extracted Rd object. title found, empty string returned.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getTablesInRDBESHierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the tables for a given hierarchy — getTablesInRDBESHierarchy","title":"Returns the tables for a given hierarchy — getTablesInRDBESHierarchy","text":"Returns tables given hierarchy","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getTablesInRDBESHierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the tables for a given hierarchy — getTablesInRDBESHierarchy","text":"","code":"getTablesInRDBESHierarchy(   hierarchy,   includeOptTables = TRUE,   includeLowHierTables = TRUE,   includeTablesNotInSampHier = TRUE,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getTablesInRDBESHierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the tables for a given hierarchy — getTablesInRDBESHierarchy","text":"hierarchy Integer value 1 13 inclusive includeOptTables Include optional tables?  Default value TRUE includeLowHierTables Include lower hierarchy tables? Default value TRUE includeTablesNotInSampHier Include tables sampling units hierarcy?  Default value TRUE verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getTablesInRDBESHierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the tables for a given hierarchy — getTablesInRDBESHierarchy","text":"vector containing 2-letter names tables requested hierarchy","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/getTablesInRDBESHierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the tables for a given hierarchy — getTablesInRDBESHierarchy","text":"","code":"getTablesInRDBESHierarchy(5) #> [1] \"DE\" \"SD\" \"OS\" \"LE\" \"FT\" \"SS\" \"SA\" \"FM\" \"BV\""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/icesSpecWoRMS.html","id":null,"dir":"Reference","previous_headings":"","what":"ICES Species (WoRMS) code list snapshot — icesSpecWoRMS","title":"ICES Species (WoRMS) code list snapshot — icesSpecWoRMS","text":"dataset containing copy ICES 'Species (WoRMS)' code list. latest code list can downloaded https://vocab.ices.dk/.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/icesSpecWoRMS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ICES Species (WoRMS) code list snapshot — icesSpecWoRMS","text":"","code":"icesSpecWoRMS"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/icesSpecWoRMS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ICES Species (WoRMS) code list snapshot — icesSpecWoRMS","text":"data frame following columns: CodeTypeGUID GUID code type ICES Vocabulary (e.g. 'Species (WoRMS)' list). CodeTypeID Numeric ID code type. Guid GUID identifying code record. Id Numeric ID code record. Key AphiaID (numeric key WoRMS). Description Scientific name. LongDescription (present) additional description; often used. Modified Datetime record last modified ICES. Deprecated Logical; whether code deprecated ICES. DateDownloaded Date snapshot downloaded, e.g. \"2023-10-18\".","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/icesSpecWoRMS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ICES Species (WoRMS) code list snapshot — icesSpecWoRMS","text":"https://vocab.ices.dk/","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an RDBES Raw Object — importRDBESDataCSV","title":"Create an RDBES Raw Object — importRDBESDataCSV","text":"Create R object folder containing .csv data files downloaded RDBES upload/download page.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an RDBES Raw Object — importRDBESDataCSV","text":"","code":"importRDBESDataCSV(   rdbesExtractPath = NULL,   listOfFileNames = NULL,   castToCorrectDataTypes = TRUE,   ... )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an RDBES Raw Object — importRDBESDataCSV","text":"rdbesExtractPath (Optional) path csv files produced extract ICES RDBES.  path suppled empty RDBESDataObject returned. listOfFileNames (Optional) named list file names - list names shoudl two-letter code relevent table e.g. list(\"DE\" = \"DE.csv\",... ).  parameter supplied default file names used RDBES data download used e.g. \"Design.csv\" etc. castToCorrectDataTypes (Optional) TRUE function attempt cast required columns correct data type.  FALSE column data types determined csv files read .  default TRUE","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataCSV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an RDBES Raw Object — importRDBESDataCSV","text":"RDBESDataObject.  path RDBES extract files provided contain data files.  path supplied empty RDBESDataObject returned.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataCSV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an RDBES Raw Object — importRDBESDataCSV","text":"","code":"if (FALSE) { # \\dontrun{ myEmptyRDBESObject <- importRDBESDataCSV() rdbesExtractPath <- \"./tests/testthat/h7_v_1_19_18/\" obj <- importRDBESDataCSV(rdbesExtractPath) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataDFS.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert List of Data Frames to a RDBES Data Object — importRDBESDataDFS","title":"Convert List of Data Frames to a RDBES Data Object — importRDBESDataDFS","text":"function converts list data frames object class RDBESDataObject.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataDFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert List of Data Frames to a RDBES Data Object — importRDBESDataDFS","text":"","code":"importRDBESDataDFS(   myList,   castToCorrectDataTypes = TRUE,   verbose = FALSE,   strict = TRUE,   addMissingColumns = FALSE,   ... )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataDFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert List of Data Frames to a RDBES Data Object — importRDBESDataDFS","text":"myList list data tables. element list data frame RDBES two-letter name (e.g. \"DE\"). castToCorrectDataTypes logical. Indicates whether cast columns correct data types. Default TRUE. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict logical. Indicates level validation RDBESDataObject creates - validation strict? Default TRUE. addMissingColumns logical. Indicates whether add missing columns","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataDFS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert List of Data Frames to a RDBES Data Object — importRDBESDataDFS","text":"RDBESDataObject element data table.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataDFS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert List of Data Frames to a RDBES Data Object — importRDBESDataDFS","text":"Tables input list correct 2-letter RDBES name (e.g. \"DE\", \"LE\", etc.). function converts data frames data.table. NULL tables left NULL. castToCorrectDataTypes = TRUE, ensures columns correct data type using setRDBESDataObjectDataTypes. Column names replaced RDBES 'R names' model documentation. function sets key table using 'XXid' column key, 'XX' name table. also replaces empty strings NA. uses newRDBESDataObject function create new RDBESDataObject input. Finally, validates RDBESDataObject using RDBEScore::validateRDBESDataObject returns .","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataZIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Import RDBES Downloaded Data — importRDBESDataZIP","title":"Import RDBES Downloaded Data — importRDBESDataZIP","text":"internal function used createRDBESDataObject. Reads .zip files downloadable ICES RDBES web page. function accepts filepaths zip files, unzips import tables object class RDBESDataObject.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataZIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import RDBES Downloaded Data — importRDBESDataZIP","text":"","code":"importRDBESDataZIP(   filenames,   castToCorrectDataTypes = TRUE,   Hierarchy = NULL,   ... )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataZIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import RDBES Downloaded Data — importRDBESDataZIP","text":"filenames path zipfile. Multiple paths can entered , instance, want add CL CE tables object. castToCorrectDataTypes Logical. TRUE function attempt cast required columns correct data type.  FALSE column data types determined csv files read . Default TRUE. @param Hierarchy - Optional. number specifying hierarchy data imported. .zip file contains multiple hierarchies.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataZIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import RDBES Downloaded Data — importRDBESDataZIP","text":"list RDBES data tables table input data NULL","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/importRDBESDataZIP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import RDBES Downloaded Data — importRDBESDataZIP","text":"","code":"if (FALSE) { # \\dontrun{ rdbesExtractPath <- \"./2022_FPN_FPE_H7.zip\" obj <- importRDBESDataZIP(rdbesExtractPath) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/is.zip.html","id":null,"dir":"Reference","previous_headings":"","what":"is.zip — is.zip","title":"is.zip — is.zip","text":"function evaluates file extension .zip.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/is.zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is.zip — is.zip","text":"","code":"is.zip(x)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/is.zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is.zip — is.zip","text":"x character vector file extension","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/is.zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is.zip — is.zip","text":"logical value","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/killOrphans.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to remove orphan records from an RDBESDataObject — killOrphans","title":"Internal function to remove orphan records from an RDBESDataObject — killOrphans","text":"Internal function remove orphan records RDBESDataObject","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/killOrphans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to remove orphan records from an RDBESDataObject — killOrphans","text":"","code":"killOrphans(objectToCheck, orphansToRemove)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/killOrphans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to remove orphan records from an RDBESDataObject — killOrphans","text":"objectToCheck RDBESDataObject orphansToRemove output findOrphansByTable function (data frame primary keys table checked, two letter table identifier, orphan status.)","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/killOrphans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to remove orphan records from an RDBESDataObject — killOrphans","text":"RDBESDataObject orphan records removed","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/listPackageFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Functions and Descriptions from an R Package — listPackageFunctions","title":"Extract Functions and Descriptions from an R Package — listPackageFunctions","text":"function extracts list functions contained within specified R package retrieves brief description function package documentation. description obtained parsing Rd file associated function extract text \\title field. addition, function determines whether function exported package comparing package’s exported names.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/listPackageFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Functions and Descriptions from an R Package — listPackageFunctions","text":"","code":"listPackageFunctions(pkg)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/listPackageFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Functions and Descriptions from an R Package — listPackageFunctions","text":"pkg character string unquoted name specifying package extract functions. package must installed accessible.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/listPackageFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Functions and Descriptions from an R Package — listPackageFunctions","text":"data frame three columns. Function column lists names functions found package. Description column contains brief descriptions extracted function’s documentation, Exported column logical vector indicating whether function exported package.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/listPackageFunctions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Functions and Descriptions from an R Package — listPackageFunctions","text":"function first accesses package namespace using asNamespace retrieves objects using ls. filters objects include functions. function, associated help file retrieved using utils::help Rd file extracted utils:::.getHelpFile. internal helper function getRdTitle used parse Rd object extract text \\title field. Finally, function assembles output data frame also includes indicator whether function exported.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/listPackageFunctions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Functions and Descriptions from an R Package — listPackageFunctions","text":"","code":"if (FALSE) { # \\dontrun{ # Extract functions from the stats package along with their descriptions and export status. tab <- listPackageFunctions(\"stats\") print(tab) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/lowerTblData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lower table data from upper table id — lowerTblData","title":"Get lower table data from upper table id — lowerTblData","text":"function takes upper table field name, values field, list tables, target lower level table name. returns rows target lower level table associated given values upper table field. NB! running RDBESDataObject work properly sorted default tables correct order specific hierarchy.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/lowerTblData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lower table data from upper table id — lowerTblData","text":"","code":"lowerTblData(field, values, tbls, level, verbose = FALSE, path_order = NULL)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/lowerTblData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lower table data from upper table id — lowerTblData","text":"field character string specifying name upper table field. values vector values upper table field. tbls named list data frames representing tables. level character string specifying name target lower level table. verbose logical value indicating whether print intermediate levels recursion.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/lowerTblData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lower table data from upper table id — lowerTblData","text":"data frame containing rows target lower level table associated given values upper table field.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/lowerTblData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lower table data from upper table id — lowerTblData","text":"","code":"# it is important to run the function only on the sorted RDBESDataObject RDBEScore:::lowerTblData(\"TEid\", c(4), sort(H8ExampleEE1), \"SA\", TRUE) #> TEid: 4 #> VSid: 5, 6 #> LEid: 5, 6 #> SSid: 5, 6 #>     TEid  VSid  LEid  SSid  SAid SAparSequNum SArecType SAseqNum #>    <num> <num> <num> <num> <num>       <lgcl>    <char>    <num> #> 1:     4     5     5     5     5           NA        SA        5 #> 2:     4     6     6     6     6           NA        SA        6 #>    SAstratification SAstratumName SAspeCode SAspeCodeFAO SApres SAstateOfProc #>              <char>        <char>     <num>       <char> <char>        <char> #> 1:                N             U    126425          SPR    WHL           FRE #> 2:                N             U    126425          SPR    WHL           FRE #>    SAcatchCat SAlandCat SAcommCatScl SAcommCat  SAsex SAunitName SAunitType #>        <char>    <char>       <lgcl>    <lgcl> <char>     <char>     <char> #> 1:        Lan       HuC           NA        NA      U     202205        Box #> 2:        Lan       HuC           NA        NA      U     202206        Box #>    SAtotalWtLive SAsampWtLive SAnumTotal SAnumSamp SAselProb SAselectMeth #>           <lgcl>       <lgcl>      <num>     <int>    <lgcl>       <char> #> 1:            NA           NA        794         1        NA       SRSWOR #> 2:            NA           NA       2805         1        NA       SRSWOR #>    SAlowHierarchy    SAsampler SAnoSampReasonFM SAnoSampReasonBV SAtotalWtMes #>            <char>       <char>           <lgcl>           <lgcl>        <num> #> 1:              C SelfSampling               NA               NA       649000 #> 2:              C SelfSampling               NA               NA      1170000 #>    SAtotWtMeaDatBas SAsampWtMes            SAspecState  SAgsaSubarea SAarea #>              <char>       <num>                 <char>        <char> <lgcl> #> 1:         Official         817 DeadOrZeroProbSurvival NotApplicable     NA #> 2:         Official         417 DeadOrZeroProbSurvival NotApplicable     NA #>    SAstatRect SAeconZoneIndi SAjurisdArea SAgeoDatBas SAgeoSou SAnatFishAct #>        <lgcl>         <lgcl>       <lgcl>      <char>   <char>       <lgcl> #> 1:         NA             NA           NA        <NA>     <NA>           NA #> 2:         NA             NA           NA        <NA>     <NA>           NA #>    SAmetier5 SAmetier6 SAgear SAgeaDatBas SAgearSou SAmeshSize SAselDev #>       <lgcl>    <lgcl> <lgcl>      <char>    <char>     <lgcl>   <lgcl> #> 1:        NA        NA     NA        <NA>      <NA>         NA       NA #> 2:        NA        NA     NA        <NA>      <NA>         NA       NA #>    SAselDevMeshSize SAincProb SAsamp SAconFacMeasLive SAnoSampReason #>              <lgcl>    <lgcl> <char>           <lgcl>         <lgcl> #> 1:               NA        NA      Y               NA             NA #> 2:               NA        NA      Y               NA             NA #>    SAnonRespCol SAauxVarTot SAauxVarValue SAauxVarName SAauxVarUnit #>          <char>      <lgcl>        <lgcl>       <lgcl>       <lgcl> #> 1:            N          NA            NA           NA           NA #> 2:            N          NA            NA           NA           NA #>    SAfishManUnit #>           <lgcl> #> 1:            NA #> 2:            NA  DE <- data.table::data.table(DEid = c(1, 2, 3, 4), SDid = c(1, 2, 3, 4)) SD <- data.table::data.table(SDid = c(1, 2, 3, 4), TEid = c(1, 2, 3, 4)) TE <- data.table::data.table(SDid = c(1, 2, 3, 4), TEid = c(1, 2, 3, 4)) VS <- data.table::data.table(TEid = c(1, 2, 3, 4), VSid = c(1, 2, 3, 4)) LE <- data.table::data.table(VSid = 1:5, LEid = 1:5, value = c(10, 20, 3, 4, 6)) tblsSprat <- list( DE = DE ,SD = SD, TE = TE, VS = VS, LE = LE )  RDBEScore:::lowerTblData(\"TEid\", c(4), tblsSprat, \"LE\", TRUE) #> TEid: 4 #> VSid: 4 #>     TEid  VSid  LEid value #>    <num> <int> <int> <num> #> 1:     4     4     4     4"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/makeTbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Data Table — makeTbl","title":"Generate a Data Table — makeTbl","text":"Generate Data Table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/makeTbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Data Table — makeTbl","text":"","code":"makeTbl(   tblName,   prevTbls = list(),   rows = 4,   propSamp = 0.5,   selMeth = \"CENSUS\",   stratums = c(\"U\"),   mean = 5 )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/makeTbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Data Table — makeTbl","text":"tblName Name table prevTbls list data.tables upstream generated table. Defaults empty list rows numeric number rows per parent record. Defaults 4. propSamp numeric proportion many total sampled. ignored \"CENSUS\". Defaults 0.5 selMeth character selection method used. Defaults \"CENSUS\". Others like SRSWR SRSSWOR can used well stratums character vector stratum names created. Defaults c(\"U\"), meaning stratified. mean numeric expected mean target variable. variable created using rnorm saved column ending \"y\". Defaults 5.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/makeTbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Data Table — makeTbl","text":"data.table","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/mapColNamesFieldR.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset containing the mapping from database column names to R field names — mapColNamesFieldR","title":"A dataset containing the mapping from database column names to R field names — mapColNamesFieldR","text":"dataset containing mapping database column names R field names","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/mapColNamesFieldR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset containing the mapping from database column names to R field names — mapColNamesFieldR","text":"","code":"mapColNamesFieldR"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/mapColNamesFieldR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset containing the mapping from database column names to R field names — mapColNamesFieldR","text":"data frame containing database field names equivalent R field name: Table.Prefix two letter prefix relevent RDBES table Field.Name database field names R.Name equivalent R field name RDataType equivalent R data type (e.g. \"integer\", \"character\" etc) Type Data type RDBES documentation (e.g. \"Decimal\", etc) EssentialForEst column considered essential?","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/mapColNamesFieldR.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A dataset containing the mapping from database column names to R field names — mapColNamesFieldR","text":"https://sboxrdbes.ices.dk","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/newRDBESDataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for RDBESDataObject class — newRDBESDataObject","title":"Constructor for RDBESDataObject class — newRDBESDataObject","text":"Constructor RDBESDataObject class","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/newRDBESDataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for RDBESDataObject class — newRDBESDataObject","text":"","code":"newRDBESDataObject(   DE = NULL,   SD = NULL,   VS = NULL,   FT = NULL,   FO = NULL,   TE = NULL,   LO = NULL,   OS = NULL,   LE = NULL,   SS = NULL,   SA = NULL,   FM = NULL,   BV = NULL,   VD = NULL,   SL = NULL,   IS = NULL,   CL = NULL,   CE = NULL,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/newRDBESDataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for RDBESDataObject class — newRDBESDataObject","text":"DE Data table RDBES DE data null SD Data table RDBES DE data null VS Data table RDBES DE data null FT Data table RDBES DE data null FO Data table RDBES DE data null TE Data table RDBES DE data null LO Data table RDBES DE data null OS Data table RDBES DE data null LE Data table RDBES DE data null SS Data table RDBES DE data null SA Data table RDBES DE data null FM Data table RDBES DE data null BV Data table RDBES DE data null VD Data table RDBES DE data null SL Data table RDBES DE data null Data table RDBES DE data null CL Data table RDBES DE data null CE Data table RDBES DE data null verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/newRDBESDataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for RDBESDataObject class — newRDBESDataObject","text":"named list","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/prepareSubSampleLevelLookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Private function to get sub-sample level and top-level SAid for SA data — prepareSubSampleLevelLookup","title":"Private function to get sub-sample level and top-level SAid for SA data — prepareSubSampleLevelLookup","text":"Private function get sub-sample level top-level SAid SA data","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/prepareSubSampleLevelLookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Private function to get sub-sample level and top-level SAid for SA data — prepareSubSampleLevelLookup","text":"","code":"prepareSubSampleLevelLookup(SAdata)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/prepareSubSampleLevelLookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Private function to get sub-sample level and top-level SAid for SA data — prepareSubSampleLevelLookup","text":"SAdata SA data check","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/prepareSubSampleLevelLookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Private function to get sub-sample level and top-level SAid for SA data — prepareSubSampleLevelLookup","text":"data.table SAid, topLevelSAid subSampleLevel","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjLowHier.html","id":null,"dir":"Reference","previous_headings":"","what":"Private function to process the lower hierarchies when creating the RDBESEstObject — procRDBESEstObjLowHier","title":"Private function to process the lower hierarchies when creating the RDBESEstObject — procRDBESEstObjLowHier","text":"Private function process lower hierarchies creating RDBESEstObject","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjLowHier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Private function to process the lower hierarchies when creating the RDBESEstObject — procRDBESEstObjLowHier","text":"","code":"procRDBESEstObjLowHier(rdbesPrepObject, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjLowHier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Private function to process the lower hierarchies when creating the RDBESEstObject — procRDBESEstObjLowHier","text":"rdbesPrepObject prepared RDBESRawObj verbose logical. Output messages console.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjLowHier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Private function to process the lower hierarchies when creating the RDBESEstObject — procRDBESEstObjLowHier","text":"allLower - FM BV tables combined","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjUppHier.html","id":null,"dir":"Reference","previous_headings":"","what":"Private function to process the upper hierarchies when creating the RDBESEstObject — procRDBESEstObjUppHier","title":"Private function to process the upper hierarchies when creating the RDBESEstObject — procRDBESEstObjUppHier","text":"Private function process upper hierarchies creating RDBESEstObject","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjUppHier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Private function to process the upper hierarchies when creating the RDBESEstObject — procRDBESEstObjUppHier","text":"","code":"procRDBESEstObjUppHier(   myRDBESEstObj = NULL,   rdbesPrepObject,   hierarchyToUse,   i = 1,   targetTables,   verbose = FALSE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjUppHier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Private function to process the upper hierarchies when creating the RDBESEstObject — procRDBESEstObjUppHier","text":"myRDBESEstObj RDBESEstObj add data rdbesPrepObject prepared RDBESDataObject hierarchyToUse hierarchy using Integer keep track list tables targetTables RDBES tables interested verbose logical. Output messages console.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/procRDBESEstObjUppHier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Private function to process the upper hierarchies when creating the RDBESEstObject — procRDBESEstObjUppHier","text":"partial RDBESEstObject data upper hierarchy","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenSpeciesListLinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove rows which are not pointing to a valid SpecliestListDetails (SL) records i.e.those rows which have a value of SpeciesListName that does not exist in the SL table. — removeBrokenSpeciesListLinks","title":"Remove rows which are not pointing to a valid SpecliestListDetails (SL) records i.e.those rows which have a value of SpeciesListName that does not exist in the SL table. — removeBrokenSpeciesListLinks","text":"Remove rows pointing valid SpecliestListDetails (SL) records .e.rows value SpeciesListName exist SL table.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenSpeciesListLinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove rows which are not pointing to a valid SpecliestListDetails (SL) records i.e.those rows which have a value of SpeciesListName that does not exist in the SL table. — removeBrokenSpeciesListLinks","text":"","code":"removeBrokenSpeciesListLinks(objectToCheck, verbose = FALSE, strict = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenSpeciesListLinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove rows which are not pointing to a valid SpecliestListDetails (SL) records i.e.those rows which have a value of SpeciesListName that does not exist in the SL table. — removeBrokenSpeciesListLinks","text":"objectToCheck RDBESDataObject. verbose (Optional) set TRUE detailed text printed function.  Default TRUE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenSpeciesListLinks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove rows which are not pointing to a valid SpecliestListDetails (SL) records i.e.those rows which have a value of SpeciesListName that does not exist in the SL table. — removeBrokenSpeciesListLinks","text":"RDBESDataObject records invalid SpeciesListName rows removed","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenSpeciesListLinks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove rows which are not pointing to a valid SpecliestListDetails (SL) records i.e.those rows which have a value of SpeciesListName that does not exist in the SL table. — removeBrokenSpeciesListLinks","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <-   importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19\") myFields <- c(\"SLspeclistName\") myValues <- c(\"WGRDBES-EST TEST 5 - sprat data\") myFilteredObject <- filterRDBESDataObject(myH1RawObject,   fieldsToFilter = myFields,   valuesToFilter = myValues ) myObjectValidSpeciesListLinks <- removeBrokenSpeciesListLinks(   objectToCheck = myFilteredObject,   verbose = FALSE ) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenVesselLinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove rows which are not pointing to a valid VesselDetails (VD) records i.e. those rows which have a value of VDid that does not exist in the VD table. — removeBrokenVesselLinks","title":"Remove rows which are not pointing to a valid VesselDetails (VD) records i.e. those rows which have a value of VDid that does not exist in the VD table. — removeBrokenVesselLinks","text":"Remove rows pointing valid VesselDetails (VD) records .e. rows value VDid exist VD table.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenVesselLinks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove rows which are not pointing to a valid VesselDetails (VD) records i.e. those rows which have a value of VDid that does not exist in the VD table. — removeBrokenVesselLinks","text":"","code":"removeBrokenVesselLinks(objectToCheck, verbose = FALSE, strict = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenVesselLinks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove rows which are not pointing to a valid VesselDetails (VD) records i.e. those rows which have a value of VDid that does not exist in the VD table. — removeBrokenVesselLinks","text":"objectToCheck RDBESDataObject. verbose (Optional) set TRUE detailed text printed function.  Default TRUE. strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenVesselLinks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove rows which are not pointing to a valid VesselDetails (VD) records i.e. those rows which have a value of VDid that does not exist in the VD table. — removeBrokenVesselLinks","text":"RDBESDataObject records invalid VDid removed","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/removeBrokenVesselLinks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove rows which are not pointing to a valid VesselDetails (VD) records i.e. those rows which have a value of VDid that does not exist in the VD table. — removeBrokenVesselLinks","text":"","code":"if (FALSE) { # \\dontrun{  myH1RawObject <-   importRDBESDataCSV(rdbesExtractPath = \"tests\\\\testthat\\\\h1_v_1_19\") myFields <- c(\"VDlenCat\") myValues <- c(\"18-<24\") myFilteredObject <- filterRDBESDataObject(myH1RawObject,   fieldsToFilter = myFields,   valuesToFilter = myValues ) myObjectValidVesselLinks <- removeBrokenVesselLinks(   objectToCheck = myFilteredObject,   verbose = FALSE ) } # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/runChecksOnSelectionAndProbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Run basic checks on selection methods and probabilities — runChecksOnSelectionAndProbs","title":"Run basic checks on selection methods and probabilities — runChecksOnSelectionAndProbs","text":"function runs basic checks selection methods probabilities different sampling tables hierarchy. run ahead generateProbs secure correct execution reason included wrapper applyGenerateProbs.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/runChecksOnSelectionAndProbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run basic checks on selection methods and probabilities — runChecksOnSelectionAndProbs","text":"","code":"runChecksOnSelectionAndProbs(x, verbose = FALSE, strict = TRUE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/runChecksOnSelectionAndProbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run basic checks on selection methods and probabilities — runChecksOnSelectionAndProbs","text":"x RDBES raw object verbose TRUE prints issue behind stop strict (Optional) function validates input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/runChecksOnSelectionAndProbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run basic checks on selection methods and probabilities — runChecksOnSelectionAndProbs","text":"nothing","code":""},{"path":[]},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/setRDBESDataObjectDataTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"For a given RDBESDataObject convert the required columns to the correct data types. (This function can cause an error if we have data in the columns that can't be cast to the desired data type.) — setRDBESDataObjectDataTypes","title":"For a given RDBESDataObject convert the required columns to the correct data types. (This function can cause an error if we have data in the columns that can't be cast to the desired data type.) — setRDBESDataObjectDataTypes","text":"given RDBESDataObject convert required columns correct data types.  (function can cause error data columns cast desired data type.)","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/setRDBESDataObjectDataTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For a given RDBESDataObject convert the required columns to the correct data types. (This function can cause an error if we have data in the columns that can't be cast to the desired data type.) — setRDBESDataObjectDataTypes","text":"","code":"setRDBESDataObjectDataTypes(RDBESDataObjectToConvert)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/setRDBESDataObjectDataTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For a given RDBESDataObject convert the required columns to the correct data types. (This function can cause an error if we have data in the columns that can't be cast to the desired data type.) — setRDBESDataObjectDataTypes","text":"RDBESDataObjectToConvert list - raw item conversion","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/setRDBESDataObjectDataTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For a given RDBESDataObject convert the required columns to the correct data types. (This function can cause an error if we have data in the columns that can't be cast to the desired data type.) — setRDBESDataObjectDataTypes","text":"RDBESDataObject correct date types required fields","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimps.html","id":null,"dir":"Reference","previous_headings":"","what":"One quarter of sample data from swedish shrimp landings of the SWE_OTB_CRU_32-69_0_0 fishery — shrimps","title":"One quarter of sample data from swedish shrimp landings of the SWE_OTB_CRU_32-69_0_0 fishery — shrimps","text":"dataset rdbesEstimObj type containing simplified haul-level samples (rows) shrimp landings (targetValue, kg) observed onboard using H1 RDBES UPWOR vessels. Data provided developing/testing purposes .","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One quarter of sample data from swedish shrimp landings of the SWE_OTB_CRU_32-69_0_0 fishery — shrimps","text":"","code":"shrimps"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One quarter of sample data from swedish shrimp landings of the SWE_OTB_CRU_32-69_0_0 fishery — shrimps","text":"data frame 10 rows 95 variables: DEsamplingScheme - Sampling Scheme DEyear - Year data collection DEstratumName - Fishery code DEhierarchyCorrect - Design Variable RDBES. details RDBES documentation DEhierarchy - Design Variable RDBES. details RDBES documentation DEsampled - Design Variable RDBES. details RDBES documentation DEreasonNotSampled - Design Variable RDBES. details RDBES documentation SDcountry - Country collected data SDinstitution - Institution collected data su1, su2, su3, su4, su5 - sampling units RDBES. details RDBES documentation XXXnumberSampled, ... - Design Variables RDBES. details RDBES documentation targetValue - estimate weight landed haul (kg) plus XX columns","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"One quarter of sample data from swedish shrimp landings of the SWE_OTB_CRU_32-69_0_0 fishery — shrimps","text":"Nuno Prista @ SLU Aqua, 2022","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimpsStrat.html","id":null,"dir":"Reference","previous_headings":"","what":"One quarter of sample data from swedish shrimp catches of the SWE_OTB_CRU_32-69_0_0 fishery — shrimpsStrat","title":"One quarter of sample data from swedish shrimp catches of the SWE_OTB_CRU_32-69_0_0 fishery — shrimpsStrat","text":"dataset rdbesEstimObj type containing simplified haul-level samples (rows) shrimp catches (targetValue, kg) observed onboard using H1 RDBES UPWOR vessels. Catches divided three strata (91, 92, 93_94) correspond sorting sieves used onboard. Data provided developing/testing purposes .","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimpsStrat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One quarter of sample data from swedish shrimp catches of the SWE_OTB_CRU_32-69_0_0 fishery — shrimpsStrat","text":"","code":"shrimpsStrat"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimpsStrat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"One quarter of sample data from swedish shrimp catches of the SWE_OTB_CRU_32-69_0_0 fishery — shrimpsStrat","text":"data frame 10 rows 95 variables: DEsamplingScheme - Sampling Scheme DEyear - Year data collection DEstratumName - Fishery code DEhierarchyCorrect - Design Variable RDBES. details RDBES documentation DEhierarchy - Design Variable RDBES. details RDBES documentation DEsampled - Design Variable RDBES. details RDBES documentation DEreasonNotSampled - Design Variable RDBES. details RDBES documentation SDcountry - Country collected data SDinstitution - Institution collected data su1, su2, su3, su4, su5 - sampling units RDBES. details RDBES documentation XXXnumberSampled, ... - Design Variables RDBES. details RDBES documentation su5stratumName - sieve fraction targetValue - estimate weight fraction haul (kg) plus XX columns","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/shrimpsStrat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"One quarter of sample data from swedish shrimp catches of the SWE_OTB_CRU_32-69_0_0 fishery — shrimpsStrat","text":"Nuno Prista @ SLU Aqua, 2022","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/tablesInRDBESHierarchies.html","id":null,"dir":"Reference","previous_headings":"","what":"The tables required for each RDBES hierarchy. — tablesInRDBESHierarchies","title":"The tables required for each RDBES hierarchy. — tablesInRDBESHierarchies","text":"data frame containing tables required RDBES hierachy","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/tablesInRDBESHierarchies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The tables required for each RDBES hierarchy. — tablesInRDBESHierarchies","text":"","code":"tablesInRDBESHierarchies"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/tablesInRDBESHierarchies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The tables required for each RDBES hierarchy. — tablesInRDBESHierarchies","text":"data frame containing tables required RDBES hierachy. hierarchy hierachy applies H1 H13 table 2-letter table name lowerHierarchy lower hierarchy table? optional table optional within hierarchy? samplingUnit table sampling unit within hierarchy? sortOrder table sort order within hiaerarchy","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/tablesInRDBESHierarchies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The tables required for each RDBES hierarchy. — tablesInRDBESHierarchies","text":"https://github.com/davidcurrie2001/MI_RDBES_ExchangeFiles","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/updateSAwithTaxonFromSL.html","id":null,"dir":"Reference","previous_headings":"","what":"Function which changes the value of SAspeCode in SA. — updateSAwithTaxonFromSL","title":"Function which changes the value of SAspeCode in SA. — updateSAwithTaxonFromSL","text":"Function checks rank aphia id tables SA SL, tries replace accurate rank SA broader rank SL. 3 possible situations: aphiaid id SA table accurate SL table aphiaids kingdom, phylum, class, order, family, genus aphiaid SA table changed aphia id SL table. aphia Ids different kingdom, phylum, class, order, family, genus function retains original SA species code. SL table accurate rank SA table, function also retains original SA species code.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/updateSAwithTaxonFromSL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function which changes the value of SAspeCode in SA. — updateSAwithTaxonFromSL","text":"","code":"updateSAwithTaxonFromSL(   RDBESDataObject,   validate = TRUE,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/updateSAwithTaxonFromSL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function which changes the value of SAspeCode in SA. — updateSAwithTaxonFromSL","text":"RDBESDataObject RDBESDataObject. validate Set TRUE want validation carried . default TRUE. verbose (Optional) Set TRUE want informative text validation printed , FALSE .  default FALSE. strict (Optional) function can validate input data - validation strict? default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/updateSAwithTaxonFromSL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function which changes the value of SAspeCode in SA. — updateSAwithTaxonFromSL","text":"RDBES data object species SA renaming species occuring SL level species rank. SA Sprat(126425), SL Clupeidae (125464) function renameSpeciesSA rename Sprat SA Clupeidae. Clupeidae(family rank) higher rank Sprat(species rank).","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/updateSAwithTaxonFromSL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function which changes the value of SAspeCode in SA. — updateSAwithTaxonFromSL","text":"","code":"if (FALSE) { # \\dontrun{ myObject <- createRDBESDataObject(input = \"WGRDBES-EST/personal/Kasia/vignettes/vignetteData\") renameSpeciesSA(RDBESDataObject=myObject,validate,verbose,strict)} # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/upperTblData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Field from Upper Table — upperTblData","title":"Get Field from Upper Table — upperTblData","text":"function gets field upper table using list tables row. takes four arguments: field, values, tbls, level. function checks start provided field matches provided level. , function returns rows corresponding table provided list tables provided values specified field. Otherwise, function finds previous table list tables gets values id column match provided values specified field. function calls recursively new values returns result. NB! running RDBESDataObject work properly sorted default tables correct order spesific hierarchy.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/upperTblData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Field from Upper Table — upperTblData","text":"","code":"upperTblData(field, values, tbls, level, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/upperTblData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Field from Upper Table — upperTblData","text":"field character string specifying field get. values vector values match specified field. tbls named list data frames containing tables different levels. level character string specifying level get data . verbose (Optional) Set TRUE want informative text printed","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/upperTblData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Field from Upper Table — upperTblData","text":"data frame containing rows upper table match provided values specified field.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/upperTblData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Field from Upper Table — upperTblData","text":"","code":"# it is important to run these functions only on sorted RDBESDataObject RDBEScore:::upperTblData(\"SAid\", c(1), sort(H8ExampleEE1), \"DE\", verbose = TRUE) #> [1] \"SA: 1\" #> [1] \"SS: 1\" #> [1] \"LE: 1\" #> [1] \"Skipping: FT\" #> [1] \"VS: 1\" #> [1] \"TE: 1\" #> [1] \"SD: 1\" #> Key: <DEid> #>     DEid DErecType      DEsampScheme DEsampSchemeType DEyear DEstratumName #>    <num>    <char>            <char>           <char>  <num>        <char> #> 1:     1        DE CommertialPelagic         NatRouCF   2022          28.1 #>    DEhierarchyCor DEhierarchy DEsamp DEnoSampReason DEnonResponseCollected #>            <char>       <num> <char>         <lgcl>                 <char> #> 1:              Y           8      Y             NA                      N #>    DEauxVarTot DEauxVarValue DEauxVarName DEauxVarUnit #>         <lgcl>        <lgcl>       <lgcl>       <lgcl> #> 1:          NA            NA           NA           NA DE <- data.table::data.table(DEid = c(1, 2)) SD <- data.table::data.table(SDid = c(1, 2), DEid = c(1, 2)) VS <- data.table::data.table(VSid = c(1, 2),SDid =c(1,2),  value = c(10, 20)) tbls <- list(DE = DE, SD = SD, VS = VS) RDBEScore:::upperTblData(\"VSid\", c(1), tbls, \"DE\") #>     DEid #>    <num> #> 1:     1"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Whether an RDBESDataObject is in a Valid Format — validateRDBESDataObject","title":"Check Whether an RDBESDataObject is in a Valid Format — validateRDBESDataObject","text":"Perform basic checks object.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Whether an RDBESDataObject is in a Valid Format — validateRDBESDataObject","text":"","code":"validateRDBESDataObject(   objectToCheck,   checkDataTypes = FALSE,   verbose = FALSE,   strict = TRUE )  checkRDBESDataObject(   objectToCheck,   checkDataTypes = FALSE,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Whether an RDBESDataObject is in a Valid Format — validateRDBESDataObject","text":"objectToCheck RDBESDataObject .e. list data.tables checkDataTypes (Optional) Set TRUE want check data types required columns correct, FALSE care. Default value FALSE. verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) Set TRUE want error validation fails, set FALSE want warning issued. default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Whether an RDBESDataObject is in a Valid Format — validateRDBESDataObject","text":"Returns objectToCheck","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Whether an RDBESDataObject is in a Valid Format — validateRDBESDataObject","text":"Checks 'objectToCheck' parameter valid. Returns parameter valid otherwise stops error. checks RDBESDataObject : object class RDBESDataObject Tables column names allowed Tables required  column names check data valid. RDBES upload system performs extensive set checks uploaded data.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Whether an RDBESDataObject is in a Valid Format — validateRDBESDataObject","text":"","code":"if (FALSE) { # \\dontrun{ myH1RawObject <- importRDBESDataCSV(rdbesExtractPath = \"tests/testthat/h1_v_1_19\") validateRDBESDataObject(myH1RawObject)} # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDataTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the data types of the columns in an RDBESDataObject against an expected list of data types. Any differences are returned — validateRDBESDataObjectDataTypes","title":"Checks the data types of the columns in an RDBESDataObject against an expected list of data types. Any differences are returned — validateRDBESDataObjectDataTypes","text":"Checks data types columns RDBESDataObject expected list data types.  differences returned","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDataTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the data types of the columns in an RDBESDataObject against an expected list of data types. Any differences are returned — validateRDBESDataObjectDataTypes","text":"","code":"validateRDBESDataObjectDataTypes(objectToCheck)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDataTypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the data types of the columns in an RDBESDataObject against an expected list of data types. Any differences are returned — validateRDBESDataObjectDataTypes","text":"objectToCheck RDBESDataObject check","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDataTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the data types of the columns in an RDBESDataObject against an expected list of data types. Any differences are returned — validateRDBESDataObjectDataTypes","text":"data frame containing data type differences (empty data frame differences)","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"check RDBES Raw Object Content Private function to do some basic checks on the content of the RDBESDataObject (e.g. all required field names are present). Function is only used by checkRDBESDataObject and should only be passed a list of non-null objects — validateRDBESDataObjectDuplicates","title":"check RDBES Raw Object Content Private function to do some basic checks on the content of the RDBESDataObject (e.g. all required field names are present). Function is only used by checkRDBESDataObject and should only be passed a list of non-null objects — validateRDBESDataObjectDuplicates","text":"check RDBES Raw Object Content Private function basic checks content RDBESDataObject (e.g. required field names present).  Function used checkRDBESDataObject passed list non-null objects","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check RDBES Raw Object Content Private function to do some basic checks on the content of the RDBESDataObject (e.g. all required field names are present). Function is only used by checkRDBESDataObject and should only be passed a list of non-null objects — validateRDBESDataObjectDuplicates","text":"","code":"validateRDBESDataObjectDuplicates(   objectToCheck,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check RDBES Raw Object Content Private function to do some basic checks on the content of the RDBESDataObject (e.g. all required field names are present). Function is only used by checkRDBESDataObject and should only be passed a list of non-null objects — validateRDBESDataObjectDuplicates","text":"objectToCheck RDBESDataObject .e. list data.tables verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) Set TRUE want sure columns present data, set FALSE want check essential columns present.  default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectDuplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check RDBES Raw Object Content Private function to do some basic checks on the content of the RDBESDataObject (e.g. all required field names are present). Function is only used by checkRDBESDataObject and should only be passed a list of non-null objects — validateRDBESDataObjectDuplicates","text":"list  first element object second warnings","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectFieldNames.html","id":null,"dir":"Reference","previous_headings":"","what":"check RDBES Data Object field names Private function to do some checks on the columns of an RDBESDataObject -  are all required fields present? 2) are there any extra fields present? It is used by validateRDBESDataObject() and should only be passed a list of non-null objects  — validateRDBESDataObjectFieldNames","title":"check RDBES Data Object field names Private function to do some checks on the columns of an RDBESDataObject -  are all required fields present? 2) are there any extra fields present? It is used by validateRDBESDataObject() and should only be passed a list of non-null objects  — validateRDBESDataObjectFieldNames","text":"check RDBES Data Object field names Private function checks columns RDBESDataObject - required fields present? 2) extra fields present? used validateRDBESDataObject() passed list non-null objects","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectFieldNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check RDBES Data Object field names Private function to do some checks on the columns of an RDBESDataObject -  are all required fields present? 2) are there any extra fields present? It is used by validateRDBESDataObject() and should only be passed a list of non-null objects  — validateRDBESDataObjectFieldNames","text":"","code":"validateRDBESDataObjectFieldNames(   objectToCheck,   verbose = FALSE,   strict = TRUE )"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectFieldNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check RDBES Data Object field names Private function to do some checks on the columns of an RDBESDataObject -  are all required fields present? 2) are there any extra fields present? It is used by validateRDBESDataObject() and should only be passed a list of non-null objects  — validateRDBESDataObjectFieldNames","text":"objectToCheck RDBESDataObject .e. list data.tables verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE. strict (Optional) Set TRUE want sure columns present data, set FALSE want check essential columns present.  default TRUE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESDataObjectFieldNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check RDBES Data Object field names Private function to do some checks on the columns of an RDBESDataObject -  are all required fields present? 2) are there any extra fields present? It is used by validateRDBESDataObject() and should only be passed a list of non-null objects  — validateRDBESDataObjectFieldNames","text":"list  first element boolean indicating validity second element contains warnings","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESEstObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an object is a valid RDBESEstObject — validateRDBESEstObject","title":"Check whether an object is a valid RDBESEstObject — validateRDBESEstObject","text":"Check whether object valid RDBESEstObject","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESEstObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an object is a valid RDBESEstObject — validateRDBESEstObject","text":"","code":"validateRDBESEstObject(objectToCheck, verbose = FALSE)"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESEstObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an object is a valid RDBESEstObject — validateRDBESEstObject","text":"objectToCheck object check verbose (Optional) Set TRUE want informative text printed , FALSE .  default FALSE.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESEstObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an object is a valid RDBESEstObject — validateRDBESEstObject","text":"Whoever revises function please specify returns ","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/validateRDBESEstObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an object is a valid RDBESEstObject — validateRDBESEstObject","text":"","code":"if (FALSE) { # \\dontrun{ myH1RawObject <- importRDBESDataCSV(rdbesExtractPath = \"tests/testthat/h1_v_1_19\") myEStObj <- createRDBESEstObject(myH1RawObject,1) validateRDBESEstObject(myEStObj)} # }"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/wormsAphiaRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"A dataset containing aphia records for species found in icesSpecWoRMS — wormsAphiaRecord","title":"A dataset containing aphia records for species found in icesSpecWoRMS — wormsAphiaRecord","text":"dataset containing aphia records species found icesSpecWoRMS","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/wormsAphiaRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dataset containing aphia records for species found in icesSpecWoRMS — wormsAphiaRecord","text":"","code":"wormsAphiaRecord"},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/wormsAphiaRecord.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A dataset containing aphia records for species found in icesSpecWoRMS — wormsAphiaRecord","text":"data frame AphiaID E.g. 100684 url E.g. \"https://www.marinespecies.org/aphia.php?p=taxdetails&id=100684\" scientificname E.g. \"Cerianthidae\" authority E.g. \"Milne Edwards & Haime, 1851\" status E.g. \"accepted\" unacceptreason E.g. NA taxonRankID E.g. 140 rank E.g. \"Family\" \"Genus\" \"Species\" \"Species\" valid_AphiaID E.g. 100684 valid_name E.g. \"Cerianthidae\" valid_authority E.g. \"Milne Edwards & Haime, 1851\" parentNameUsageID E.g. 151646 kingdom E.g. \"Animalia\" phylum E.g. \"Cnidaria\" class E.g. \"Anthozoa\" order E.g. \"Spirularia\" family E.g. \"Cerianthidae\" genus E.g. NA \"Cerianthus\" citation E.g. \"Molodtsova, T. (2023). World List Ceriantharia. Cerianthidae Milne Edwards & Haime, 1851. Accessed : \"... lsid internal database identifier isMarine E.g. 1 isBrackish E.g. 1 isFreshwater E.g. 0 isTerrestrial E.g. 0 isExtinct E.g. NA match_type E.g. \"exact\" modified E.g. \"2018-01-22T17:48:34.063Z\" DateDownloaded E.g. \"2023-10-18\"","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/reference/wormsAphiaRecord.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A dataset containing aphia records for species found in icesSpecWoRMS — wormsAphiaRecord","text":"https://www.marinespecies.org/","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-035","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.3.5","title":"RDBEScore 0.3.5","text":"Bug fix: addressed #251. Docs/params: expanded docs combineRDBESDataObjects() createRDBESDataObject(); clarified hierarchy behavior ... options (strict, verbose, hierarchy). Mixed hierarchies: combineRDBESDataObjects() now warns/errors objects use different hierarchies (strict=TRUE error). ID tables: createTableOfRDBESIds() merging robust hierarchy; clearer BV handling console output.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-034","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.3.4","title":"RDBEScore 0.3.4","text":"Defaults: createRDBESDataObject() now runs validation default Estimation object: added incDesignVariables createRDBESEstObject() optionally drop design variables; convert character columns factors reduce size. SA sub-sampling: replaced recursive logic self-join + lookup (prepareSubSampleLevelLookup), warnings missing non‑unique matches. Memory: added frequent gc() calls across estimation/join steps large data. Joins: improved field selection hierarchy 7 procRDBESEstObjUppHier(); clarified logic selecting VDid fields. Docs/CI: added pkgdown GitHub Actions workflow; improved function docs (params/returns); updated .Rbuildignore package URLs. Vignettes: updated estimation workflow sub-sampling sections; added memory tips, minimal examples, brief benchmarking notes. Performance: filterRDBESDataObject() now uses data.table faster filtering.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-033","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.3.3","title":"RDBEScore 0.3.3","text":"Update work 2025 RDBES data call format","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-032","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.3.2","title":"RDBEScore 0.3.2","text":"Can import zip files updated download format hierarchy separate directory added optional install method readme","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-031","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.3.1","title":"RDBEScore 0.3.1","text":"update latest RDBES data format (version 1.19.20)","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-030---20112023","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.3.0 - 20/11/2023","title":"RDBEScore 0.3.0 - 20/11/2023","text":"version introduces bunch changes package. updated behaviour best explained vignettes. main changes : package updated use newest RDBES data format (version 1.19.18) S3 methods print, summary sort added RDBESDataObject class vignettes updated reflect changes package lot example data added package packages survey SDAResources Example data RDBES hierarchies 1, 5 8 added package data function createRDBESDataObject now data import function package createRDBESDataObject accepts .zip files, al list data frames folder . csv files input strict parameter added validateRDBESDataObject control strictness validation new set tests added package Also minor fixes functions added.","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-020","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.2.0","title":"RDBEScore 0.2.0","text":"generateZerosUsingSL: fixed behaviour added tests function","code":""},{"path":"https://ices-tools-dev.github.io/RDBEScore/news/index.html","id":"rdbescore-010","dir":"Changelog","previous_headings":"","what":"RDBEScore 0.1.0","title":"RDBEScore 0.1.0","text":"RDBESRawObjects (associated functions) renamed RDBESDataObjects. Code previous versions package need updated.","code":""}]
